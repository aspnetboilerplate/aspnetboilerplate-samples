var abp=abp||{};(function(){function t(n){abp.signalr.hubs.common=n;n.onclose(function(t){(t?abp.log.debug("Connection closed with error: "+t):abp.log.debug("Disconnected"),abp.signalr.autoConnect)&&setTimeout(function(){n.start()},5e3)});n.on("getNotification",function(n){abp.event.trigger("abp.notifications.received",n)})}function n(n,t){return abp.signalr.remoteServiceBaseUrl&&(n=abp.signalr.remoteServiceBaseUrl+n),abp.signalr.qs&&(n+=(n.indexOf("?")==-1?"?":"&")+abp.signalr.qs),function i(r){abp.log.debug("Starting connection using "+signalR.HttpTransportType[r]+" transport");var u=(new signalR.HubConnectionBuilder).withUrl(n,r).build();return t&&typeof t=="function"&&t(u),u.start().then(function(){return u}).catch(function(n){return(abp.log.debug("Cannot start the connection using "+signalR.HttpTransportType[r]+" transport. "+n.message),r!==signalR.HttpTransportType.LongPolling)?i(r+1):Promise.reject(n)})}(signalR.HttpTransportType.WebSockets)}signalR&&(abp.signalr=abp.signalr||{},abp.signalr.hubs=abp.signalr.hubs||{},abp.signalr.connect=function(){var i=abp.signalr.url||abp.appPath+"signalr";n(i,t).then(function(n){abp.log.debug("Connected to SignalR server!");abp.event.trigger("abp.signalr.connected");n.invoke("register").then(function(){abp.log.debug("Registered to the SignalR server!")})}).catch(function(n){abp.log.debug(n.message)})},abp.signalr.startConnection=n,abp.signalr.autoConnect===undefined&&(abp.signalr.autoConnect=!0),abp.signalr.autoConnect&&!abp.signalr.hubs.common&&abp.signalr.connect())})();