{"version":3,"sources":["kendo.scheduler.agendaview.js"],"names":["f","define","$","rowSpan","tasks","idx","length","result","items","resourceValue","resource","item","valuePrimitive","kendo","getter","dataValueField","flattenTaskGroups","groups","flattenGroup","concat","shift","push","apply","call","window","ui","NS","EVENT_WRAPPER_FORMAT","AgendaGroupedView","Class","extend","init","view","this","_view","_getColumns","groupHeaders","columns","_getGroupsInDay","_getSumOfItemsForDate","_renderTaskGroupsCells","headerCells","taskGroupIndex","taskIndex","_renderDateCell","tableRow","date","tasksGroups","format","_dateTemplate","_renderDates","_getParents","parentGroups","splice","_getGroupsByDate","_renderTaskGroups","table","parents","append","AgendaGroupedByDateView","columnsWithoutDate","_isMobilePhoneView","slice","_compareDateGroups","currentGroup","prevGroup","index","text","tasksGroupIdx","itemsIdx","lastItemValue","i","groupsInDay","sumOfItemsForDate","groupsRowSpanIndex","isPhoneView","_groupTemplate","value","className","sortedArray","_groupsByDate","sort","a","b","array","getTime","dateExists","scheduler","AgendaView","SchedulerView","element","options","fn","_groupedView","_getGroupedView","editable","delete","create","update","title","_eventTemplate","_eventTmpl","eventTemplate","template","eventDateTemplate","eventGroupTemplate","_timeTemplate","eventTimeTemplate","on","_renderLayout","name","_isGroupedByDate","_mouseenter","e","currentTarget","addClass","_mouseleave","removeClass","_remove","preventDefault","trigger","uid","closest","attr","nextDate","nextDay","startDate","_startDate","endDate","_endDate","previousDate","previousDay","addDays","createLayout","_layout","resources","messages","time","event","groupedResources","_tasks","events","start","end","eventDurationInDays","task","day","isAllDay","getDate","Math","ceil","MS_PER_DAY","clone","head","Date","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","tail","middle","data","Query","field","dir","groupBy","toArray","today","tableRows","showDelete","destroy","_isMobile","isToday","join","eventResources","_startTime","endTime","render","content","find","empty","_createGroupConfiguration","_renderGroups","_eventsList","_angularItems","refreshLayout","angular","elements","map","dataItem","parent","dataIndex","tmp","obj","span","configuration","dataSource","filter","operator","groupEqFilter","indexOf","dataTextField","selectionByElement","cell","hasClass","is","children","select","selection","clearSelection","row","eq","current","move","key","handled","keys","UP","DOWN","moveToEvent","constrainSelection","isInRange","off","selectedDateFormat","selectedShortDateFormat","allDay","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.agendaview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.agendaview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.agendaview',\n        name: 'Scheduler Agenda View',\n        category: 'web',\n        description: 'The Scheduler Agenda View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($) {\n        var kendo = window.kendo, ui = kendo.ui, NS = '.kendoAgendaView';\n        var EVENT_WRAPPER_FORMAT = '<div class=\"k-task\" title=\"#:title.replace(/\"/g,\"\\'\")#\" data-#=kendo.ns#uid=\"#=uid#\">' + '# if (resources[0]) {#' + '<span class=\"k-scheduler-mark\" style=\"background-color:#=resources[0].color#\"></span>' + '# } #' + '# if (data.isException()) { #' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if (data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '{0}' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '</div>';\n        var AgendaGroupedView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _getColumns: function (groupHeaders, columns) {\n                return groupHeaders.concat(columns);\n            },\n            _getGroupsInDay: function () {\n                return [];\n            },\n            _getSumOfItemsForDate: function () {\n                return 0;\n            },\n            _renderTaskGroupsCells: function (headerCells, groups, taskGroupIndex, taskIndex) {\n                var view = this._view;\n                if (taskGroupIndex === 0 && taskIndex === 0 && groups.length) {\n                    view._renderTaskGroupsCells(headerCells, groups);\n                }\n            },\n            _renderDateCell: function (tableRow, groups, tasks, date, taskGroupIndex, tasksGroups) {\n                var view = this._view;\n                tableRow.push(kendo.format('<td class=\"k-scheduler-datecolumn{3}{2}\" rowspan=\"{0}\">{1}</td>', tasks.length, view._dateTemplate({ date: date }), taskGroupIndex == tasksGroups.length - 1 && !groups.length ? ' k-last' : '', !groups.length ? ' k-first' : ''));\n            },\n            _renderDates: function () {\n                return undefined;\n            },\n            _getParents: function (parentGroups) {\n                return parentGroups.splice(0);\n            },\n            _getGroupsByDate: function () {\n                return undefined;\n            },\n            _renderTaskGroups: function (table, items, parents) {\n                var view = this._view;\n                table.append(view._renderTaskGroups(items, parents));\n            }\n        });\n        var AgendaGroupedByDateView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _getColumns: function (groupHeaders, columns) {\n                var view = this._view;\n                if (view._isMobilePhoneView()) {\n                    return groupHeaders.concat(columns);\n                } else {\n                    var date = columns.slice(0, 1);\n                    var columnsWithoutDate = columns.slice(1);\n                    return date.concat(groupHeaders).concat(columnsWithoutDate);\n                }\n            },\n            _compareDateGroups: function (currentGroup, prevGroup, index) {\n                if (currentGroup[index].text == prevGroup[index].text) {\n                    if (index === 0) {\n                        return true;\n                    } else {\n                        return this._compareDateGroups(currentGroup, prevGroup, index - 1);\n                    }\n                }\n                return false;\n            },\n            _getGroupsInDay: function (tasksGroups, groups) {\n                var groupsInDay = [];\n                var prevGroup = null;\n                for (var tasksGroupIdx = 0; tasksGroupIdx < tasksGroups.length; tasksGroupIdx++) {\n                    for (var itemsIdx = 0; itemsIdx < tasksGroups[tasksGroupIdx].items.length; itemsIdx++) {\n                        var idx = 0;\n                        if (groupsInDay.length === 0) {\n                            for (idx; idx < groups[tasksGroupIdx].length; idx++) {\n                                groupsInDay.push([1]);\n                            }\n                        } else {\n                            for (idx; idx < groups[tasksGroupIdx].length; idx++) {\n                                if (this._compareDateGroups(groups[tasksGroupIdx], prevGroup, idx)) {\n                                    groupsInDay[idx][groupsInDay[idx].length - 1]++;\n                                } else {\n                                    var lastItemValue = groupsInDay[idx][groupsInDay[idx].length - 1] - 1;\n                                    for (var i = 0; i < lastItemValue; i++) {\n                                        groupsInDay[idx].push(0);\n                                    }\n                                    groupsInDay[idx].push(1);\n                                }\n                            }\n                        }\n                        prevGroup = groups[tasksGroupIdx];\n                    }\n                }\n                return groupsInDay;\n            },\n            _getSumOfItemsForDate: function (tasksGroups) {\n                var sumOfItemsForDate = 0;\n                for (var i = 0; i < tasksGroups.length; i++) {\n                    sumOfItemsForDate += tasksGroups[i].items.length;\n                }\n                return sumOfItemsForDate;\n            },\n            _renderTaskGroupsCells: function (headerCells, groups, taskGroupIndex, taskIndex, groupsInDay, sumOfItemsForDate, date, groupsRowSpanIndex) {\n                var view = this._view;\n                var isPhoneView = view._isMobilePhoneView();\n                if (!isPhoneView) {\n                    if (taskGroupIndex === 0 && taskIndex === 0) {\n                        headerCells.push(kendo.format('<td class=\"k-scheduler-datecolumn k-first\" rowspan=\"{0}\">{1}</td>', sumOfItemsForDate, view._dateTemplate({ date: date })));\n                    }\n                    for (var idx = 0; idx < groups[taskGroupIndex].length; idx++) {\n                        if (groupsInDay[idx][groupsRowSpanIndex]) {\n                            headerCells.push(kendo.format('<td class=\"k-scheduler-groupcolumn\" rowspan=\"{0}\">{1}</td>', groupsInDay[idx][groupsRowSpanIndex], view._groupTemplate({ value: groups[taskGroupIndex][idx].text }), groups[taskGroupIndex][idx].className));\n                        }\n                    }\n                } else {\n                    if (taskGroupIndex === 0 && taskIndex === 0 && groups.length) {\n                        view._renderTaskGroupsCells(headerCells, groups);\n                    }\n                }\n            },\n            _renderDateCell: function () {\n                return undefined;\n            },\n            _renderDates: function (table) {\n                var view = this._view;\n                var sortedArray = view._groupsByDate.sort(function (a, b) {\n                    return a.array[0].value.getTime() - b.array[0].value.getTime();\n                });\n                for (var i = 0; i < sortedArray.length; i++) {\n                    table.append(view._renderTaskGroups(sortedArray[i].array, sortedArray[i].groups));\n                }\n            },\n            _getParents: function (parentGroups) {\n                return parentGroups.slice(0);\n            },\n            _getGroupsByDate: function (groups, idx, parents) {\n                var view = this._view;\n                if (groups[idx].items) {\n                    for (var taskGroupIndex = 0; taskGroupIndex < groups[idx].items.length; taskGroupIndex++) {\n                        var date = groups[idx].items[taskGroupIndex].value;\n                        var dateExists = false;\n                        for (var i = 0; i < view._groupsByDate.length; i++) {\n                            if (view._groupsByDate[i].array[0].value.getTime() === date.getTime()) {\n                                dateExists = true;\n                                view._groupsByDate[i].array.push(groups[idx].items[taskGroupIndex]);\n                                view._groupsByDate[i].groups.push(parents);\n                            }\n                        }\n                        if (!dateExists) {\n                            view._groupsByDate.push({\n                                array: [groups[idx].items[taskGroupIndex]],\n                                groups: [parents]\n                            });\n                        }\n                    }\n                }\n            },\n            _renderTaskGroups: function () {\n                return undefined;\n            }\n        });\n        kendo.ui.scheduler.AgendaGroupedView = AgendaGroupedView;\n        kendo.ui.scheduler.AgendaGroupedByDateView = AgendaGroupedByDateView;\n        ui.AgendaView = ui.SchedulerView.extend({\n            init: function (element, options) {\n                ui.SchedulerView.fn.init.call(this, element, options);\n                this._groupedView = this._getGroupedView();\n                options = this.options;\n                if (options.editable) {\n                    options.editable = $.extend({ 'delete': true }, options.editable, {\n                        create: false,\n                        update: false\n                    });\n                }\n                this.title = options.title;\n                this._eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_FORMAT);\n                this._dateTemplate = kendo.template(options.eventDateTemplate);\n                this._groupTemplate = kendo.template(options.eventGroupTemplate);\n                this._timeTemplate = kendo.template(options.eventTimeTemplate);\n                this.element.on('mouseenter' + NS, '.k-scheduler-agenda .k-scheduler-content tr', '_mouseenter').on('mouseleave' + NS, '.k-scheduler-agenda .k-scheduler-content tr', '_mouseleave').on('click' + NS, '.k-scheduler-agenda .k-scheduler-content .k-link:has(.k-si-close)', '_remove');\n                this._renderLayout(options.date);\n            },\n            name: 'agenda',\n            _getGroupedView: function () {\n                if (this._isGroupedByDate()) {\n                    return new kendo.ui.scheduler.AgendaGroupedByDateView(this);\n                } else {\n                    return new kendo.ui.scheduler.AgendaGroupedView(this);\n                }\n            },\n            _mouseenter: function (e) {\n                $(e.currentTarget).addClass('k-state-hover');\n            },\n            _mouseleave: function (e) {\n                $(e.currentTarget).removeClass('k-state-hover');\n            },\n            _remove: function (e) {\n                e.preventDefault();\n                this.trigger('remove', { uid: $(e.currentTarget).closest('.k-task').attr(kendo.attr('uid')) });\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.startDate());\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            _renderLayout: function (date) {\n                this._startDate = date;\n                this._endDate = kendo.date.addDays(date, 7);\n                this.createLayout(this._layout());\n                this.table.addClass('k-scheduler-agenda');\n            },\n            _layout: function () {\n                var columns = [\n                    {\n                        text: this.options.messages.time,\n                        className: 'k-scheduler-timecolumn'\n                    },\n                    { text: this.options.messages.event }\n                ];\n                if (!this._isMobilePhoneView()) {\n                    columns.splice(0, 0, {\n                        text: this.options.messages.date,\n                        className: 'k-scheduler-datecolumn'\n                    });\n                }\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    var groupHeaders = [];\n                    for (var idx = 0; idx < resources.length; idx++) {\n                        groupHeaders.push({\n                            text: '',\n                            className: 'k-scheduler-groupcolumn'\n                        });\n                    }\n                    columns = this._groupedView._getColumns(groupHeaders, columns);\n                }\n                return { columns: columns };\n            },\n            _tasks: function (events) {\n                var tasks = [];\n                for (var idx = 0; idx < events.length; idx++) {\n                    var event = events[idx];\n                    var start = event.start;\n                    var end = event.isAllDay ? kendo.date.getDate(event.end) : event.end;\n                    var eventDurationInDays = Math.ceil((end - kendo.date.getDate(start)) / kendo.date.MS_PER_DAY);\n                    if (event.isAllDay) {\n                        eventDurationInDays += 1;\n                    }\n                    var task = event.clone();\n                    task.startDate = kendo.date.getDate(start);\n                    if (task.startDate >= this.startDate()) {\n                        tasks.push(task);\n                    }\n                    if (eventDurationInDays > 1) {\n                        task.end = kendo.date.nextDay(start);\n                        task.head = true;\n                        for (var day = 1; day < eventDurationInDays; day++) {\n                            start = task.end;\n                            task = event.clone();\n                            task.start = start;\n                            task.startDate = kendo.date.getDate(start);\n                            task.end = kendo.date.nextDay(start);\n                            if (day == eventDurationInDays - 1) {\n                                task.end = new Date(task.start.getFullYear(), task.start.getMonth(), task.start.getDate(), end.getHours(), end.getMinutes(), end.getSeconds(), end.getMilliseconds());\n                                task.tail = true;\n                            } else {\n                                task.isAllDay = true;\n                                task.middle = true;\n                            }\n                            if (kendo.date.getDate(task.end) <= this.endDate() && task.start >= this.startDate() || kendo.date.getDate(task.start).getTime() == this.endDate().getTime()) {\n                                tasks.push(task);\n                            }\n                        }\n                    }\n                }\n                return new kendo.data.Query(tasks).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'asc'\n                    }\n                ]).groupBy({ field: 'startDate' }).toArray();\n            },\n            _renderTaskGroups: function (tasksGroups, groups) {\n                var tableRows = [];\n                var editable = this.options.editable;\n                var showDelete = editable && editable.destroy !== false && !this._isMobile();\n                var isPhoneView = this._isMobilePhoneView();\n                var sumOfItemsForDate = this._groupedView._getSumOfItemsForDate(tasksGroups);\n                var groupsInDay = this._groupedView._getGroupsInDay(tasksGroups, groups);\n                var groupsRowSpanIndex = 0;\n                for (var taskGroupIndex = 0; taskGroupIndex < tasksGroups.length; taskGroupIndex++) {\n                    var date = tasksGroups[taskGroupIndex].value;\n                    var tasks = tasksGroups[taskGroupIndex].items;\n                    var today = kendo.date.isToday(date);\n                    for (var taskIndex = 0; taskIndex < tasks.length; taskIndex++) {\n                        var task = tasks[taskIndex];\n                        var tableRow = [];\n                        var headerCells = !isPhoneView ? tableRow : [];\n                        this._groupedView._renderTaskGroupsCells(headerCells, groups, taskGroupIndex, taskIndex, groupsInDay, sumOfItemsForDate, date, groupsRowSpanIndex);\n                        groupsRowSpanIndex++;\n                        if (taskIndex === 0) {\n                            if (isPhoneView) {\n                                headerCells.push(kendo.format('<td class=\"k-scheduler-datecolumn\" colspan=\"2\">{0}</td>', this._dateTemplate({ date: date })));\n                                tableRows.push('<tr role=\"row\" aria-selected=\"false\"' + (today ? ' class=\"k-today\">' : '>') + headerCells.join('') + '</tr>');\n                            } else {\n                                this._groupedView._renderDateCell(tableRow, groups, tasks, date, taskGroupIndex, tasksGroups);\n                            }\n                        }\n                        if (task.head) {\n                            task.format = '{0:t}';\n                        } else if (task.tail) {\n                            task.format = '{1:t}';\n                        } else {\n                            task.format = '{0:t}-{1:t}';\n                        }\n                        task.resources = this.eventResources(task);\n                        tableRow.push(kendo.format('<td class=\"k-scheduler-timecolumn\"><div>{0}{1}{2}</div></td><td>{3}</td>', task.tail || task.middle ? '<span class=\"k-icon k-i-arrow-w\"></span>' : '', this._timeTemplate(task.clone({\n                            start: task._startTime || task.start,\n                            end: task.endTime || task.end\n                        })), task.head || task.middle ? '<span class=\"k-icon k-i-arrow-e\"></span>' : '', this._eventTemplate(task.clone({ showDelete: showDelete }))));\n                        tableRows.push('<tr role=\"row\" aria-selected=\"false\"' + (today ? ' class=\"k-today\">' : '>') + tableRow.join('') + '</tr>');\n                    }\n                }\n                return tableRows.join('');\n            },\n            _renderTaskGroupsCells: function (headerCells, groups) {\n                for (var idx = 0; idx < groups.length; idx++) {\n                    headerCells.push(kendo.format('<td class=\"k-scheduler-groupcolumn{2}\" rowspan=\"{0}\">{1}</td>', groups[idx].rowSpan, this._groupTemplate({ value: groups[idx].text }), groups[idx].className));\n                }\n            },\n            render: function (events) {\n                var table = this.content.find('table').empty();\n                var groups = [];\n                if (events.length > 0) {\n                    var resources = this.groupedResources;\n                    if (resources.length) {\n                        groups = this._createGroupConfiguration(events, resources, null);\n                        this._groupsByDate = [];\n                        this._renderGroups(groups, table, []);\n                        this._groupedView._renderDates(table);\n                    } else {\n                        groups = this._tasks(events);\n                        table.append(this._renderTaskGroups(groups, []));\n                    }\n                }\n                var items = this._eventsList = flattenTaskGroups(groups);\n                this._angularItems(table, items);\n                this.refreshLayout();\n                this.trigger('activate');\n            },\n            _angularItems: function (table, items) {\n                this.angular('compile', function () {\n                    var data = [], elements = items.map(function (item) {\n                            data.push({ dataItem: item });\n                            return table.find('.k-task[' + kendo.attr('uid') + '=' + item.uid + ']');\n                        });\n                    return {\n                        elements: elements,\n                        data: data\n                    };\n                });\n            },\n            _renderGroups: function (groups, table, parentGroups) {\n                for (var idx = 0, length = groups.length; idx < length; idx++) {\n                    var parents = this._groupedView._getParents(parentGroups);\n                    parents.push(groups[idx]);\n                    this._groupedView._getGroupsByDate(groups, idx, parents);\n                    if (groups[idx].groups) {\n                        this._renderGroups(groups[idx].groups, table, parents);\n                    } else {\n                        this._groupedView._renderTaskGroups(table, groups[idx].items, parents);\n                    }\n                }\n            },\n            _createGroupConfiguration: function (events, resources, parent) {\n                var resource = resources[0];\n                var configuration = [];\n                var data = resource.dataSource.view();\n                var isPhoneView = this._isMobilePhoneView();\n                for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                    var value = resourceValue(resource, data[dataIndex]);\n                    var tmp = new kendo.data.Query(events).filter({\n                        field: resource.field,\n                        operator: ui.SchedulerView.groupEqFilter(value)\n                    }).toArray();\n                    if (tmp.length) {\n                        var tasks = this._tasks(tmp);\n                        var className = parent ? '' : ' k-first';\n                        if (dataIndex === data.length - 1 && (!parent || parent.className.indexOf('k-last') > -1)) {\n                            className += ' k-last';\n                        }\n                        var obj = {\n                            text: kendo.getter(resource.dataTextField)(data[dataIndex]),\n                            value: value,\n                            rowSpan: 0,\n                            className: className\n                        };\n                        if (resources.length > 1) {\n                            obj.groups = this._createGroupConfiguration(tmp, resources.slice(1), obj);\n                            if (parent) {\n                                parent.rowSpan += obj.rowSpan;\n                            }\n                        } else {\n                            obj.items = tasks;\n                            var span = rowSpan(obj.items);\n                            if (isPhoneView) {\n                                span += obj.items.length;\n                            }\n                            obj.rowSpan = span;\n                            if (parent) {\n                                parent.rowSpan += span;\n                            }\n                        }\n                        configuration.push(obj);\n                    }\n                }\n                return configuration;\n            },\n            selectionByElement: function (cell) {\n                var index, event;\n                cell = $(cell);\n                if (cell.hasClass('k-scheduler-datecolumn') || !this._eventsList.length) {\n                    return;\n                }\n                if (cell.is('.k-task')) {\n                    cell = cell.closest('td');\n                }\n                if (this._isMobile()) {\n                    var parent = cell.parent();\n                    index = parent.parent().children().filter(function () {\n                        return $(this).children(':not(.k-scheduler-datecolumn)').length;\n                    }).index(parent);\n                } else {\n                    index = cell.parent().index();\n                }\n                event = this._eventsList[index];\n                return {\n                    index: index,\n                    start: event.start,\n                    end: event.end,\n                    isAllDay: event.isAllDay,\n                    uid: event.uid\n                };\n            },\n            select: function (selection) {\n                this.clearSelection();\n                var row = this.table.find('.k-task').eq(selection.index).closest('tr').addClass('k-state-selected').attr('aria-selected', true)[0];\n                this.current(row);\n            },\n            move: function (selection, key) {\n                var handled = false;\n                var index = selection.index;\n                if (key == kendo.keys.UP) {\n                    index--;\n                    handled = true;\n                } else if (key == kendo.keys.DOWN) {\n                    index++;\n                    handled = true;\n                }\n                if (handled) {\n                    var event = this._eventsList[index];\n                    if (event) {\n                        selection.start = event.start;\n                        selection.end = event.end;\n                        selection.isAllDay = event.isAllDay;\n                        selection.events = [event.uid];\n                        selection.index = index;\n                    }\n                }\n                return handled;\n            },\n            moveToEvent: function () {\n                return false;\n            },\n            constrainSelection: function (selection) {\n                var event = this._eventsList[0];\n                if (event) {\n                    selection.start = event.start;\n                    selection.end = event.end;\n                    selection.isAllDay = event.isAllDay;\n                    selection.events = [event.uid];\n                    selection.index = 0;\n                }\n            },\n            isInRange: function () {\n                return true;\n            },\n            destroy: function () {\n                if (this.element) {\n                    this.element.off(NS);\n                }\n                ui.SchedulerView.fn.destroy.call(this);\n            },\n            options: {\n                title: 'Agenda',\n                name: 'agenda',\n                editable: true,\n                selectedDateFormat: '{0:D}-{1:D}',\n                selectedShortDateFormat: '{0:d} - {1:d}',\n                eventTemplate: '#:title#',\n                eventTimeTemplate: '#if(data.isAllDay) {#' + '#=this.options.messages.allDay#' + '#} else { #' + '#=kendo.format(format, start, end)#' + '# } #',\n                eventDateTemplate: '<strong class=\"k-scheduler-agendaday\">' + '#=kendo.toString(date, \"dd\")#' + '</strong>' + '<em class=\"k-scheduler-agendaweek\">' + '#=kendo.toString(date,\"dddd\")#' + '</em>' + '<span class=\"k-scheduler-agendadate\">' + '#=kendo.toString(date, \"y\")#' + '</span>',\n                eventGroupTemplate: '<strong class=\"k-scheduler-adgendagroup\">' + '#=value#' + '</strong>',\n                messages: {\n                    event: 'Event',\n                    date: 'Date',\n                    time: 'Time',\n                    allDay: 'all day'\n                }\n            }\n        });\n        function rowSpan(tasks) {\n            var result = 0;\n            for (var idx = 0, length = tasks.length; idx < length; idx++) {\n                result += tasks[idx].items.length;\n            }\n            return result;\n        }\n        function resourceValue(resource, item) {\n            if (resource.valuePrimitive) {\n                item = kendo.getter(resource.dataValueField)(item);\n            }\n            return item;\n        }\n        function flattenTaskGroups(groups) {\n            var idx = 0, length = groups.length, item, result = [];\n            for (; idx < length; idx++) {\n                item = groups[idx];\n                if (item.groups) {\n                    item = flattenGroup(item.groups);\n                    result = result.concat(item);\n                } else {\n                    result = result.concat(flattenGroup(item.items));\n                }\n            }\n            return result;\n        }\n        function flattenGroup(groups) {\n            var items = [].concat(groups), item = items.shift(), result = [], push = [].push;\n            while (item) {\n                if (item.groups) {\n                    push.apply(items, item.groups);\n                } else if (item.items) {\n                    push.apply(items, item.items);\n                } else {\n                    push.call(result, item);\n                }\n                item = items.shift();\n            }\n            return result;\n        }\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}