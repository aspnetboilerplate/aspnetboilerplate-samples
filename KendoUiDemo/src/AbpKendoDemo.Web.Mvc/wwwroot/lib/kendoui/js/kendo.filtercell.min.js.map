{"version":3,"sources":["kendo.filtercell.js"],"names":["f","define","$","undefined","isNonValueFilter","filter","operator","inArray","nonValueOperators","findFilterForField","field","i","result","filters","isPlainObject","hasOwnProperty","isArray","length","removeFiltersForField","expression","grep","removeDuplicates","dataSelector","dataTextField","getter","kendo","e","item","text","items","index","seen","push","window","ui","DataSource","data","Widget","CHANGE","BOOL","ENUM","STRING","EQ","NEQ","proxy","FilterCell","extend","init","element","options","wrapper","that","dataSource","viewModel","passedOptions","first","type","operators","input","suggestDataSource","fields","target","addClass","this","appendTo","attr","fn","call","model","reader","values","_parse","value","parse","defaultOperator","observable","operatorVisible","val","get","_clearInProgress","bind","updateDsFilter","initSuggestDataSource","inputWidth","width","_setInputType","showOperators","_createOperatorDropDown","_createClearIcon","template","setAutoCompleteSource","setComboBoxSource","_refreshUI","_refreshHandler","radioInput","inputName","labelTrue","labelFalse","_angularItems","suggestionOperator","delay","minLength","remove","guid","messages","isTrue","append","clone","isFalse","prop","dropdown","operatorDropDown","kendoDropDownList","dataValueField","open","popup","valuePrimitive","find","removeClass","customDataSource","group","create","_pageSize","autoComplete","setDataSource","comboBox","manuallyUpdatingVM","set","currentFilter","prevented","mergeResult","toJSON","logic","trigger","_merge","idx","clear","html","click","clearFilter","action","elements","closest","column","angular","destroy","filterModel","unbind","events","name","string","eq","neq","startswith","contains","doesnotcontain","endswith","isnull","isnotnull","isempty","isnotempty","number","gte","gt","lte","lt","date","enums","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.filtercell.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.filtercell', [\n        'kendo.autocomplete',\n        'kendo.datepicker',\n        'kendo.numerictextbox',\n        'kendo.combobox',\n        'kendo.dropdownlist'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'filtercell',\n        name: 'Row filter',\n        category: 'framework',\n        depends: ['autocomplete'],\n        advanced: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, DataSource = kendo.data.DataSource, Widget = ui.Widget, CHANGE = 'change', BOOL = 'boolean', ENUM = 'enums', STRING = 'string', EQ = 'Is equal to', NEQ = 'Is not equal to', proxy = $.proxy, nonValueOperators = [\n                'isnull',\n                'isnotnull',\n                'isempty',\n                'isnotempty'\n            ];\n        function isNonValueFilter(filter) {\n            var operator = typeof filter === 'string' ? filter : filter.operator;\n            return $.inArray(operator, nonValueOperators) > -1;\n        }\n        function findFilterForField(filter, field) {\n            var filters = [];\n            if ($.isPlainObject(filter)) {\n                if (filter.hasOwnProperty('filters')) {\n                    filters = filter.filters;\n                } else if (filter.field == field) {\n                    return filter;\n                }\n            }\n            if ($.isArray(filter)) {\n                filters = filter;\n            }\n            for (var i = 0; i < filters.length; i++) {\n                var result = findFilterForField(filters[i], field);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        function removeFiltersForField(expression, field) {\n            if (expression.filters) {\n                expression.filters = $.grep(expression.filters, function (filter) {\n                    removeFiltersForField(filter, field);\n                    if (filter.filters) {\n                        return filter.filters.length;\n                    } else {\n                        return filter.field != field;\n                    }\n                });\n            }\n        }\n        function removeDuplicates(dataSelector, dataTextField) {\n            var getter = kendo.getter(dataTextField, true);\n            return function (e) {\n                var items = dataSelector(e), result = [], index = 0, seen = {};\n                while (index < items.length) {\n                    var item = items[index++], text = getter(item);\n                    if (!seen.hasOwnProperty(text)) {\n                        result.push(item);\n                        seen[text] = true;\n                    }\n                }\n                return result;\n            };\n        }\n        var FilterCell = Widget.extend({\n            init: function (element, options) {\n                element = $(element).addClass('k-filtercell');\n                var wrapper = this.wrapper = $('<span/>').appendTo(element);\n                var that = this, dataSource, viewModel, passedOptions = options, first, type, operators = that.operators = options.operators || {}, input = that.input = $('<input/>').attr(kendo.attr('bind'), 'value: value').appendTo(wrapper);\n                var suggestDataSource = options ? options.suggestDataSource : null;\n                if (suggestDataSource) {\n                    options = $.extend({}, options, { suggestDataSource: {} });\n                }\n                Widget.fn.init.call(that, element[0], options);\n                if (suggestDataSource) {\n                    that.options.suggestDataSource = suggestDataSource;\n                }\n                options = that.options;\n                dataSource = that.dataSource = options.dataSource;\n                that.model = dataSource.reader.model;\n                type = options.type = STRING;\n                var fields = kendo.getter('reader.model.fields', true)(dataSource) || {};\n                var target = fields[options.field];\n                if (target && target.type) {\n                    type = options.type = target.type;\n                }\n                if (options.values) {\n                    options.type = type = ENUM;\n                }\n                operators = operators[type] || options.operators[type];\n                if (!passedOptions.operator) {\n                    for (first in operators) {\n                        options.operator = first;\n                        break;\n                    }\n                }\n                that._parse = function (value) {\n                    return value != null ? value + '' : value;\n                };\n                if (that.model && that.model.fields) {\n                    var field = that.model.fields[options.field];\n                    if (field) {\n                        if (field.parse) {\n                            that._parse = proxy(field.parse, field);\n                        }\n                    }\n                }\n                that.defaultOperator = options.operator;\n                that.viewModel = viewModel = kendo.observable({\n                    operator: options.operator,\n                    value: null,\n                    operatorVisible: function () {\n                        var val = this.get('value');\n                        return val !== null && val !== undefined && val != 'undefined' || isNonValueFilter(this.get('operator')) && !that._clearInProgress;\n                    }\n                });\n                viewModel.bind(CHANGE, proxy(that.updateDsFilter, that));\n                if (type == STRING) {\n                    that.initSuggestDataSource(options);\n                }\n                if (options.inputWidth !== null) {\n                    input.width(options.inputWidth);\n                }\n                that._setInputType(options, type);\n                if (type != BOOL && options.showOperators !== false) {\n                    that._createOperatorDropDown(operators);\n                } else {\n                    wrapper.addClass('k-operator-hidden');\n                }\n                that._createClearIcon();\n                kendo.bind(this.wrapper, viewModel);\n                if (type == STRING) {\n                    if (!options.template) {\n                        that.setAutoCompleteSource();\n                    }\n                }\n                if (type == ENUM) {\n                    that.setComboBoxSource(that.options.values);\n                }\n                that._refreshUI();\n                that._refreshHandler = proxy(that._refreshUI, that);\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n            },\n            _setInputType: function (options, type) {\n                var that = this, input = that.input;\n                if (typeof options.template == 'function') {\n                    options.template.call(that.viewModel, {\n                        element: that.input,\n                        dataSource: that.suggestDataSource\n                    });\n                    that._angularItems('compile');\n                } else if (type == STRING) {\n                    input.attr(kendo.attr('role'), 'autocomplete').attr(kendo.attr('text-field'), options.dataTextField || options.field).attr(kendo.attr('filter'), options.suggestionOperator).attr(kendo.attr('delay'), options.delay).attr(kendo.attr('min-length'), options.minLength).attr(kendo.attr('value-primitive'), true);\n                } else if (type == 'date') {\n                    input.attr(kendo.attr('role'), 'datepicker');\n                } else if (type == BOOL) {\n                    input.remove();\n                    var radioInput = $('<input type=\\'radio\\'/>');\n                    var wrapper = that.wrapper;\n                    var inputName = kendo.guid();\n                    var labelTrue = $('<label/>').text(options.messages.isTrue).append(radioInput);\n                    radioInput.attr(kendo.attr('bind'), 'checked:value').attr('name', inputName).val('true');\n                    var labelFalse = labelTrue.clone().text(options.messages.isFalse);\n                    radioInput.clone().val('false').appendTo(labelFalse);\n                    wrapper.append([\n                        labelTrue,\n                        labelFalse\n                    ]);\n                } else if (type == 'number') {\n                    input.attr(kendo.attr('role'), 'numerictextbox');\n                } else if (type == ENUM) {\n                    input.attr(kendo.attr('role'), 'combobox').attr(kendo.attr('text-field'), 'text').attr(kendo.attr('suggest'), true).attr(kendo.attr('filter'), 'contains').attr(kendo.attr('value-field'), 'value').attr(kendo.attr('value-primitive'), true);\n                }\n            },\n            _createOperatorDropDown: function (operators) {\n                var items = [];\n                for (var prop in operators) {\n                    items.push({\n                        text: operators[prop],\n                        value: prop\n                    });\n                }\n                var dropdown = $('<input class=\"k-dropdown-operator\" ' + kendo.attr('bind') + '=\"value: operator\"/>').appendTo(this.wrapper);\n                this.operatorDropDown = dropdown.kendoDropDownList({\n                    dataSource: items,\n                    dataTextField: 'text',\n                    dataValueField: 'value',\n                    open: function () {\n                        this.popup.element.width(150);\n                    },\n                    valuePrimitive: true\n                }).data('kendoDropDownList');\n                this.operatorDropDown.wrapper.find('.k-i-arrow-s').removeClass('k-i-arrow-s').addClass('k-i-filter');\n            },\n            initSuggestDataSource: function (options) {\n                var suggestDataSource = options.suggestDataSource;\n                if (!(suggestDataSource instanceof DataSource)) {\n                    if (!options.customDataSource && suggestDataSource) {\n                        suggestDataSource.group = undefined;\n                    }\n                    suggestDataSource = this.suggestDataSource = DataSource.create(suggestDataSource);\n                }\n                if (!options.customDataSource) {\n                    suggestDataSource._pageSize = undefined;\n                    suggestDataSource.reader.data = removeDuplicates(suggestDataSource.reader.data, this.options.field);\n                }\n                this.suggestDataSource = suggestDataSource;\n            },\n            setAutoCompleteSource: function () {\n                var autoComplete = this.input.data('kendoAutoComplete');\n                if (autoComplete) {\n                    autoComplete.setDataSource(this.suggestDataSource);\n                }\n            },\n            setComboBoxSource: function (values) {\n                var dataSource = DataSource.create({ data: values });\n                var comboBox = this.input.data('kendoComboBox');\n                if (comboBox) {\n                    comboBox.setDataSource(dataSource);\n                }\n            },\n            _refreshUI: function () {\n                var that = this, filter = findFilterForField(that.dataSource.filter(), this.options.field) || {}, viewModel = that.viewModel;\n                that.manuallyUpdatingVM = true;\n                filter = $.extend(true, {}, filter);\n                if (that.options.type == BOOL) {\n                    if (viewModel.value !== filter.value) {\n                        that.wrapper.find(':radio').prop('checked', false);\n                    }\n                }\n                if (filter.operator) {\n                    viewModel.set('operator', filter.operator);\n                }\n                viewModel.set('value', filter.value);\n                that.manuallyUpdatingVM = false;\n            },\n            updateDsFilter: function (e) {\n                var that = this, model = that.viewModel;\n                if (that.manuallyUpdatingVM || e.field == 'operator' && model.value === undefined && !isNonValueFilter(model)) {\n                    return;\n                }\n                var currentFilter = $.extend({}, that.viewModel.toJSON(), { field: that.options.field });\n                var expression = {\n                    logic: 'and',\n                    filters: []\n                };\n                var prevented = false;\n                if (currentFilter.value !== undefined && currentFilter.value !== null || isNonValueFilter(currentFilter) && !this._clearInProgress) {\n                    expression.filters.push(currentFilter);\n                    prevented = that.trigger(CHANGE, {\n                        filter: expression,\n                        field: that.options.field\n                    });\n                }\n                if (that._clearInProgress) {\n                    prevented = that.trigger(CHANGE, {\n                        filter: null,\n                        field: that.options.field\n                    });\n                }\n                if (prevented) {\n                    return;\n                }\n                var mergeResult = that._merge(expression);\n                if (mergeResult.filters.length) {\n                    that.dataSource.filter(mergeResult);\n                } else {\n                    that.dataSource.filter({});\n                }\n            },\n            _merge: function (expression) {\n                var that = this, logic = expression.logic || 'and', filters = expression.filters, filter, result = that.dataSource.filter() || {\n                        filters: [],\n                        logic: 'and'\n                    }, idx, length;\n                removeFiltersForField(result, that.options.field);\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    filter.value = that._parse(filter.value);\n                }\n                filters = $.grep(filters, function (filter) {\n                    return filter.value !== '' && filter.value !== null || isNonValueFilter(filter);\n                });\n                if (filters.length) {\n                    if (result.filters.length) {\n                        expression.filters = filters;\n                        if (result.logic !== 'and') {\n                            result.filters = [{\n                                    logic: result.logic,\n                                    filters: result.filters\n                                }];\n                            result.logic = 'and';\n                        }\n                        if (filters.length > 1) {\n                            result.filters.push(expression);\n                        } else {\n                            result.filters.push(filters[0]);\n                        }\n                    } else {\n                        result.filters = filters;\n                        result.logic = logic;\n                    }\n                }\n                return result;\n            },\n            _createClearIcon: function () {\n                var that = this;\n                $('<button type=\\'button\\' class=\\'k-button k-button-icon\\' title = ' + that.options.messages.clear + '/>').attr(kendo.attr('bind'), 'visible:operatorVisible').html('<span class=\\'k-icon k-i-close\\'/>').click(proxy(that.clearFilter, that)).appendTo(that.wrapper);\n            },\n            clearFilter: function () {\n                this._clearInProgress = true;\n                if (isNonValueFilter(this.viewModel.operator)) {\n                    this.viewModel.set('operator', this.defaultOperator);\n                }\n                this.viewModel.set('value', null);\n                this._clearInProgress = false;\n            },\n            _angularItems: function (action) {\n                var elements = this.wrapper.closest('th').get();\n                var column = this.options.column;\n                this.angular(action, function () {\n                    return {\n                        elements: elements,\n                        data: [{ column: column }]\n                    };\n                });\n            },\n            destroy: function () {\n                var that = this;\n                that.filterModel = null;\n                that.operatorDropDown = null;\n                that._angularItems('cleanup');\n                if (that._refreshHandler) {\n                    that.dataSource.bind(CHANGE, that._refreshHandler);\n                    that._refreshHandler = null;\n                }\n                kendo.unbind(that.element);\n                Widget.fn.destroy.call(that);\n                kendo.destroy(that.element);\n            },\n            events: [CHANGE],\n            options: {\n                name: 'FilterCell',\n                delay: 200,\n                minLength: 1,\n                inputWidth: null,\n                values: undefined,\n                customDataSource: false,\n                field: '',\n                dataTextField: '',\n                type: 'string',\n                suggestDataSource: null,\n                suggestionOperator: 'startswith',\n                operator: 'eq',\n                showOperators: true,\n                template: null,\n                messages: {\n                    isTrue: 'is true',\n                    isFalse: 'is false',\n                    filter: 'Filter',\n                    clear: 'Clear',\n                    operator: 'Operator'\n                },\n                operators: {\n                    string: {\n                        eq: EQ,\n                        neq: NEQ,\n                        startswith: 'Starts with',\n                        contains: 'Contains',\n                        doesnotcontain: 'Does not contain',\n                        endswith: 'Ends with',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null',\n                        isempty: 'Is empty',\n                        isnotempty: 'Is not empty'\n                    },\n                    number: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: 'Is greater than or equal to',\n                        gt: 'Is greater than',\n                        lte: 'Is less than or equal to',\n                        lt: 'Is less than',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    },\n                    date: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: 'Is after or equal to',\n                        gt: 'Is after',\n                        lte: 'Is before or equal to',\n                        lt: 'Is before',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    },\n                    enums: {\n                        eq: EQ,\n                        neq: NEQ,\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    }\n                }\n            }\n        });\n        ui.plugin(FilterCell);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}