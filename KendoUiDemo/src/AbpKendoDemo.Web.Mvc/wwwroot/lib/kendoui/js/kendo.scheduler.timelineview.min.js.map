{"version":3,"sources":["kendo.scheduler.timelineview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","getWorkDays","options","workDays","dayIndex","workWeekStart","push","workWeekEnd","setColspan","columnLevel","i","count","columns","length","colspan","collidingEvents","elements","left","right","idx","startPosition","overlaps","endPosition","rectLeft","rectRight","eventsForSlot","event","events","TimelineView","kendo","window","ui","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","proxy","getDate","MS_PER_DAY","MS_PER_MINUTE","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","SCHEDULER_HEADER_WRAP_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_STRING","TimelineGroupedView","Class","init","view","this","_view","_getTimeSlotByPosition","x","y","groupIndex","group","groups","timeSlotByPosition","_hideHeaders","timesHeader","find","hide","datesHeader","_setColspan","timeColumn","_createRowsLayout","resources","rows","groupHeaderTemplate","_createVerticalColumnsLayout","_createColumnsLayout","_getRowCount","_groupCount","_getGroupsCount","_addContent","dates","columnCount","groupsCount","rowCount","start","end","slotTemplate","isVerticalGrouped","rowIdx","groupIdx","html","appendRow","tmplDate","content","classes","_resourceBySlot","isToday","workDayStart","workDayEnd","_isWorkDay","_forTimeRange","_addTimeSlotsCollections","groupCount","datesCount","tableRows","interval","isVerticallyGrouped","rowMultiplier","time","rowIndex","cellMultiplier","cells","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","cellIndex","Math","floor","children","startTime","_addTimeSlotToCollection","_getVerticalGroupCount","_getVerticalRowCount","eventGroups","maxRowCount","_isVerticallyGrouped","_renderEvent","eventGroup","adjustedEvent","range","container","eventObject","element","_createEventElement","occurrence","head","tail","appendTo","css","top","height","eventHeight","_startTime","_endTime","uid","slotRange","offsetTop","addContinuousEvent","isAllDay","_arrangeRows","_verticalCountForLevel","level","_rowCountForLevel","_horizontalCountForLevel","_columnCountForLevel","_updateCurrentVerticalTimeMarker","ranges","currentTime","elementHtml","headerWrap","round","innerRect","getTime","timesTableMarker","prependTo","addClass","_adjustLeftPosition","prev","position","width","scrollHeight","_changeGroup","_prevGroupSlot","slot","isDay","collection","_collection","last","_nextGroupSlot","first","_verticalSlots","selection","reverse","_verticalMethod","_normalizeVerticalSelection","_horizontalSlots","method","startSlot","endSlot","multiple","result","_isHorizontallyGrouped","_changeVerticalViewPeriod","_changeHorizontalViewPeriod","slots","shift","_changeViewPeriod","_updateDirection","_createMoveHint","rect","hint","snap","offsetHeight","_moveHint","add","_isRtl","scrollWidth","offsetWidth","TimelineGroupedByDateView","times","eq","_createDateLayout","subColumns","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","workDateIndex","tempStart","minorTickCount","msMajorInterval","majorTick","msInterval","_dates","startIndex","endIndex","currentSlot","dateRange","eventObjects","index","_timeSlotCollections","_slots","timeSlotRanges","firstTimesCell","lastTimesCell","markerTopPosition","timesTableMarkerCss","previous","_changeDate","collections","_getCollections","tempSlot","slotIdx","startEnd","offsetLeft","scheduler","that","fn","call","_groupedView","_getGroupedView","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_isGroupedByDate","_getNextEventIndexBySlot","sortedEvents","tempIndex","startDate","_getSelectedSlot","pad","_getSortedEvents","uniqueAllEvents","sort","second","isDaySlot","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","timezone","timezoneOffset","currentGroup","utcCurrentTime","slotElement","remove","_isInDateSlot","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","orientation","toUtcTime","slotByStartDate","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","attr","preventDefault","create","resourceInfo","_slotByPosition","pageX","pageY","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","location","_editUserEvents","eventElement","target","hasClass","browser","mozilla","scrollLeft","msie","webkit","scrollTop","ceil","selectedDateFormat","selectedShortDateFormat","today","endTime","showWorkHours","eventMinWidth","columnWidth","majorTimeHeaderTemplate","eventTemplate","dateHeaderTemplate","footer","command","messages","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_render","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","contentWidth","contentTable","minWidth","calculatedWidth","slotRanges","rangeStart","rangeEnd","slotStartTime","slotEndTime","_slotRanges","min","max","action","verticalByDate","msMin","msMax","startDay","msStart","majorTickDivider","isLastMajorSlot","minorTickIndex","timeColumns","text","groupedView","minorTickSlots","className","minorTicks","middleColumn","lastSlotColumn","minorSlotsCount","slice","groupedResources","_groupOrientation","isWorkDay","columnLevels","rowLevel","rowLevels","day","getDay","append","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_timeSlotInterval","cell","getTimeSlotCollection","currentDate","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","nextDate","nextDay","previousDate","previousDay","render","eventsByResource","_headerColumnCount","data","Query","field","dir","toArray","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","eventIndex","isArray","_positionEvent","rowsCount","rowHeight","timesRow","row","eventBottomOffset","_getBottomRowOffset","verticalGroupCount","_refreshSlots","minOffset","maxOffset","isMobile","slotsCollection","lastSlot","offsetRight","refresh","itemIdx","value","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","_isInTimeSlot","slotIndex","_adjustEvent","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","clone","isMultiDayEvent","_continuousEvents","showDelete","destroy","resizable","resize","eventStartDate","eventEndDate","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","dataItem","rowEvents","j","eventLength","addEvent","createRows","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","rangeIndex","clonedEvent","eventDuraton","duration","_removeMoveHint","_updateResizeHint","startRect","format","_removeResizeHint","_createResizeHint","_resizeHint","toString","toLocalDate","selectionByElement","vertical","collectionIndex","backward","prevGroupSlot","nextGroupSlot","move","key","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","weekStart","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.timelineview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.timelineview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.timelineview',\n        name: 'Scheduler Timeline View',\n        category: 'web',\n        description: 'The Scheduler Timeline View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, getMilliseconds = kendo.date.getMilliseconds, MS_PER_DAY = kendo.date.MS_PER_DAY, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', SCHEDULER_HEADER_WRAP_CLASS = 'k-scheduler-header-wrap', BORDER_SIZE_COEFF = 0.8666, NS = '.kendoTimelineView';\n        var EVENT_TEMPLATE = kendo.template('<div>' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div></div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.format(\\'{0:m}\\', date)#</span>'), EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail) {#' + '<span class=\"k-icon k-i-arrow-w\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '# if(data.head) {#' + '<span class=\"k-icon k-i-arrow-e\"></span>' + '#}#' + '</span>' + '#if(resizable && !data.tail){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !data.head){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart;\n            workDays.push(dayIndex);\n            while (options.workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        function setColspan(columnLevel) {\n            var count = 0;\n            if (columnLevel.columns) {\n                for (var i = 0; i < columnLevel.columns.length; i++) {\n                    count += setColspan(columnLevel.columns[i]);\n                }\n                columnLevel.colspan = count;\n                return count;\n            } else {\n                columnLevel.colspan = 1;\n                return 1;\n            }\n        }\n        function collidingEvents(elements, left, right) {\n            var idx, startPosition, overlaps, endPosition;\n            for (idx = elements.length - 1; idx >= 0; idx--) {\n                startPosition = elements[idx].rectLeft;\n                endPosition = elements[idx].rectRight;\n                overlaps = startPosition <= left && endPosition >= left;\n                if (overlaps || startPosition >= left && endPosition <= right || left <= startPosition && right >= startPosition) {\n                    if (startPosition < left) {\n                        left = startPosition;\n                    }\n                    if (endPosition > right) {\n                        right = endPosition;\n                    }\n                }\n            }\n            return eventsForSlot(elements, left, right);\n        }\n        function eventsForSlot(elements, left, right) {\n            var events = [];\n            for (var idx = 0; idx < elements.length; idx++) {\n                var event = {\n                    rectLeft: elements[idx].rectLeft,\n                    rectRight: elements[idx].rectRight\n                };\n                if (event.rectLeft < left && event.rectRight > left || event.rectLeft >= left && event.rectRight <= right) {\n                    events.push(elements[idx]);\n                }\n            }\n            return events;\n        }\n        var TimelineGroupedView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _getTimeSlotByPosition: function (x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n                return group.timeSlotByPosition(x, y);\n            },\n            _hideHeaders: function () {\n                var view = this._view;\n                view.timesHeader.find('table tr:last').hide();\n                view.datesHeader.find('table tr:last').hide();\n            },\n            _setColspan: function (timeColumn) {\n                setColspan(timeColumn);\n            },\n            _createRowsLayout: function (resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n            },\n            _createVerticalColumnsLayout: function (resources, rows, groupHeaderTemplate, columns) {\n                return columns;\n            },\n            _createColumnsLayout: function (resources, columns, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n            },\n            _getRowCount: function () {\n                var view = this._view;\n                return view._groupCount();\n            },\n            _getGroupsCount: function () {\n                return 1;\n            },\n            _addContent: function (dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n                var view = this._view;\n                var html = '';\n                var options = view.options;\n                var appendRow = function (date) {\n                    var content = '';\n                    var classes = '';\n                    var tmplDate;\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return view._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += 'k-today';\n                    }\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) || !view._isWorkDay(dates[idx])) {\n                        classes += ' k-nonwork-hour';\n                    }\n                    content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                    content += slotTemplate({\n                        date: tmplDate,\n                        resources: resources(isVerticalGrouped ? rowIdx : groupIdx)\n                    });\n                    content += '</td>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        for (var idx = 0, length = columnCount; idx < length; idx++) {\n                            html += view._forTimeRange(start, end, appendRow);\n                        }\n                    }\n                    html += '</tr>';\n                }\n                return html;\n            },\n            _addTimeSlotsCollections: function (groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n                var view = this._view;\n                var rowCount = tableRows.length;\n                if (isVerticallyGrouped) {\n                    rowCount = Math.floor(rowCount / groupCount);\n                }\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group = view.groups[groupIndex];\n                    var time;\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n                    if (!isVerticallyGrouped) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                    var cellsPerDay = cellsPerGroup / datesCount;\n                    for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                        var cellOffset = dateIndex * cellsPerDay + cellsPerGroup * cellMultiplier;\n                        time = getMilliseconds(new Date(+view.startTime()));\n                        for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n                            view._addTimeSlotToCollection(group, cells, cellIndex, cellOffset, dateIndex, time, interval);\n                            time += interval;\n                        }\n                    }\n                }\n            },\n            _getVerticalGroupCount: function (groupsCount) {\n                return groupsCount;\n            },\n            _getVerticalRowCount: function (eventGroups, groupIndex, maxRowCount) {\n                var view = this._view;\n                return view._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n            },\n            _renderEvent: function (eventGroup, event, adjustedEvent, group, range, container) {\n                var view = this._view;\n                var element;\n                element = view._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n                element.appendTo(container).css({\n                    top: 0,\n                    height: view.options.eventHeight\n                });\n                var eventObject = {\n                    start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                    end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                    element: element,\n                    uid: event.uid,\n                    slotRange: range,\n                    rowIndex: 0,\n                    offsetTop: 0\n                };\n                eventGroup.events[event.uid] = eventObject;\n                view.addContinuousEvent(group, range, element, event.isAllDay);\n                view._arrangeRows(eventObject, range, eventGroup);\n            },\n            _verticalCountForLevel: function (level) {\n                var view = this._view;\n                return view._rowCountForLevel(level);\n            },\n            _horizontalCountForLevel: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level);\n            },\n            _updateCurrentVerticalTimeMarker: function (ranges, currentTime) {\n                var view = this._view;\n                var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                var headerWrap = view.datesHeader.find('.' + SCHEDULER_HEADER_WRAP_CLASS);\n                var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                var timesTableMarker = $(elementHtml).prependTo(headerWrap).addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-down');\n                timesTableMarker.css({\n                    left: view._adjustLeftPosition(left - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2),\n                    top: headerWrap.find('tr:last').prev().position().top\n                });\n                $(elementHtml).prependTo(view.content).css({\n                    left: view._adjustLeftPosition(left),\n                    width: '1px',\n                    height: view.content[0].scrollHeight - 1,\n                    top: 0\n                });\n            },\n            _changeGroup: function () {\n                return undefined;\n            },\n            _prevGroupSlot: function (slot, group, isDay) {\n                var view = this._view;\n                if (view._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.last();\n                }\n            },\n            _nextGroupSlot: function (slot, group, isDay) {\n                var view = this._view;\n                if (view._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.first();\n                }\n            },\n            _verticalSlots: function (selection, reverse) {\n                var view = this._view;\n                return view._changeGroup(selection, reverse);\n            },\n            _verticalMethod: function (reverse) {\n                return reverse ? 'leftSlot' : 'rightSlot';\n            },\n            _normalizeVerticalSelection: function () {\n                return undefined;\n            },\n            _horizontalSlots: function (selection, group, method, startSlot, endSlot, multiple, reverse) {\n                var view = this._view;\n                var result = {};\n                result.startSlot = group[method](startSlot);\n                result.endSlot = group[method](endSlot);\n                if (!multiple && view._isHorizontallyGrouped() && (!result.startSlot || !result.endSlot)) {\n                    result.startSlot = result.endSlot = view._changeGroup(selection, reverse);\n                }\n                return result;\n            },\n            _changeVerticalViewPeriod: function () {\n                return false;\n            },\n            _changeHorizontalViewPeriod: function (slots, shift, selection, reverse) {\n                var view = this._view;\n                if ((!slots.startSlot || !slots.endSlot) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                    return true;\n                }\n                return false;\n            },\n            _updateDirection: function (selection, ranges, shift, reverse) {\n                var view = this._view;\n                view._updateDirection(selection, ranges, shift, reverse, true);\n            },\n            _createMoveHint: function (range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var hint = view._createEventElement(adjustedEvent.occurrence, adjustedEvent.occurrence, false, false);\n                hint.addClass('k-event-drag-hint');\n                var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, view.options.snap);\n                var width = rect.right - rect.left - 2;\n                if (width < 0) {\n                    width = 0;\n                }\n                var left = view._adjustLeftPosition(rect.left);\n                var css = {\n                    left: left,\n                    top: startSlot.offsetTop,\n                    height: startSlot.offsetHeight - 2,\n                    width: width\n                };\n                hint.css(css);\n                view._moveHint = view._moveHint.add(hint);\n            },\n            _adjustLeftPosition: function (left) {\n                var view = this._view;\n                if (view._isRtl) {\n                    left -= view.content[0].scrollWidth - view.content[0].offsetWidth;\n                }\n                return left;\n            }\n        });\n        var TimelineGroupedByDateView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _getTimeSlotByPosition: function (x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n                return group.timeSlotByPosition(x, y, true);\n            },\n            _hideHeaders: function () {\n                var view = this._view;\n                if (!view._isVerticallyGrouped()) {\n                    view.timesHeader.find('table tr').eq(2).hide();\n                    view.datesHeader.find('table tr').eq(2).hide();\n                } else {\n                    view.times.find('.k-last').hide();\n                }\n            },\n            _setColspan: function () {\n            },\n            _createRowsLayout: function (resources, rows, groupHeaderTemplate, columns) {\n                var view = this._view;\n                return view._createDateLayout(columns, null, true);\n            },\n            _createVerticalColumnsLayout: function (resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, null, groupHeaderTemplate);\n            },\n            _createColumnsLayout: function (resources, columns, groupHeaderTemplate, subColumns) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n            },\n            _getRowCount: function (level) {\n                var view = this._view;\n                return view._rowCountForLevel(level);\n            },\n            _getGroupsCount: function () {\n                var view = this._view;\n                return view._groupCount();\n            },\n            _addContent: function (dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped) {\n                var view = this._view;\n                var html = '';\n                var options = view.options;\n                var appendRow = function (date, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, groupIdx) {\n                    var content = '';\n                    var classes = '';\n                    var tmplDate;\n                    var workDateIndex = view._isVerticallyGrouped() ? dateIndex : idx;\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return view._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += 'k-today';\n                    }\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) || !view._isWorkDay(dates[workDateIndex])) {\n                        classes += ' k-nonwork-hour';\n                    }\n                    content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                    content += slotTemplate({\n                        date: tmplDate,\n                        resources: resources(groupIdx)\n                    });\n                    content += '</td>';\n                    return content;\n                };\n                var tempStart = new Date(start), minorTickCount = view.options.minorTickCount, msMajorInterval = view.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, dateIndex;\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n                    if (rowIdx % (rowCount / view._dates.length) === 0) {\n                        dateIndex = rowIdx / (rowCount / view._dates.length);\n                        tempStart = new Date(view._dates[dateIndex]);\n                        kendo.date.setTime(tempStart, kendo.date.getMilliseconds(start));\n                    }\n                    for (var idx = 0, length = columnCount; idx < length; idx++) {\n                        html += view._forTimeRange(tempStart, end, appendRow, isVerticalGrouped, groupsCount);\n                        if (isVerticalGrouped) {\n                            setTime(tempStart, msInterval, false);\n                            break;\n                        }\n                    }\n                    html += '</tr>';\n                }\n                return html;\n            },\n            _addTimeSlotsCollections: function (groupCount, datesCount, tableRows, interval, isVerticallyGrouped) {\n                var view = this._view;\n                var rowCount = tableRows.length;\n                if (isVerticallyGrouped) {\n                    rowCount = rowCount / datesCount;\n                }\n                for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                    var rowMultiplier = 0;\n                    var time;\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = dateIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = isVerticallyGrouped ? rowCount : cells.length / (datesCount * groupCount);\n                    var cellsPerDay = cells.length / datesCount;\n                    var cellOffset;\n                    time = getMilliseconds(new Date(+view.startTime()));\n                    for (var cellIndex = 0; cellIndex < cellsPerGroup; cellIndex++) {\n                        if (!isVerticallyGrouped) {\n                            cellOffset = dateIndex * cellsPerDay + groupCount * cellIndex;\n                            cellMultiplier++;\n                        } else {\n                            cellOffset = 0;\n                            cells = tableRows[cellIndex + cellsPerGroup * dateIndex].children;\n                        }\n                        for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                            var group = view.groups[groupIndex];\n                            view._addTimeSlotToCollection(group, cells, groupIndex, cellOffset, dateIndex, time, interval);\n                        }\n                        time += interval;\n                    }\n                }\n            },\n            _getVerticalGroupCount: function () {\n                var view = this._view;\n                return view.content.find('tr').length;\n            },\n            _getVerticalRowCount: function (eventGroups, groupIndex, maxRowCount) {\n                return maxRowCount;\n            },\n            _renderEvent: function (eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex) {\n                var view = this._view;\n                var element;\n                var eventObjects = [];\n                for (var i = range.start.index; i <= range.end.index; i++) {\n                    element = view._createEventElement(adjustedEvent.occurrence, event, i !== endIndex, i !== startIndex);\n                    element.appendTo(container).css({\n                        top: 0,\n                        height: view.options.eventHeight\n                    });\n                    var currentSlot = group._timeSlotCollections[0]._slots[i];\n                    var dateRange = group.timeSlotRanges(currentSlot.start, currentSlot.end, false)[0];\n                    var eventObject = {\n                        start: i === startIndex ? adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start : currentSlot.start,\n                        end: i === endIndex ? adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end : currentSlot.end,\n                        element: element,\n                        uid: event.uid,\n                        slotRange: dateRange,\n                        rowIndex: 0,\n                        offsetTop: 0\n                    };\n                    eventGroup.events[event.uid] = eventObject;\n                    eventObjects.push(eventObject);\n                    view.addContinuousEvent(group, dateRange, element, event.isAllDay);\n                    view._arrangeRows(eventObject, dateRange, eventGroup);\n                }\n                eventGroup.events[event.uid] = eventObjects;\n            },\n            _verticalCountForLevel: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level);\n            },\n            _horizontalCountForLevel: function (level, columnLevel) {\n                var view = this._view;\n                return view._columnCountForLevel(columnLevel) / view._columnCountForLevel(2);\n            },\n            _updateCurrentVerticalTimeMarker: function (ranges, currentTime) {\n                var view = this._view;\n                var firstTimesCell = view.times.find('tr:first th:first');\n                var lastTimesCell = view.times.find('tr:first th:last');\n                var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                var timesTableMarker = $(elementHtml).prependTo(view.times);\n                var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                var timesTableMarkerCss = {};\n                if (this._isRtl) {\n                    timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                    timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-left');\n                } else {\n                    timesTableMarkerCss.left = lastTimesCell.position().left;\n                    timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-right');\n                }\n                timesTableMarkerCss.top = markerTopPosition - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2;\n                timesTableMarker.css(timesTableMarkerCss);\n                $(elementHtml).prependTo(view.content).css({\n                    top: markerTopPosition,\n                    height: '1px',\n                    right: '1px',\n                    width: view.content[0].scrollWidth,\n                    left: 0\n                });\n            },\n            _changeGroup: function (selection, previous, slot) {\n                var view = this._view;\n                if (!slot) {\n                    selection.groupIndex = previous ? view.groups.length - 1 : 0;\n                }\n            },\n            _prevGroupSlot: function (slot) {\n                return slot;\n            },\n            _nextGroupSlot: function (slot) {\n                return slot;\n            },\n            _changeDate: function (selection, reverse, slot) {\n                var view = this._view;\n                var group = view.groups[selection.groupIndex];\n                var collections, index;\n                if (reverse) {\n                    collections = group._getCollections(false);\n                    index = slot.index - 1;\n                    if (index >= 0) {\n                        return collections[0]._slots[index];\n                    }\n                } else {\n                    collections = group._getCollections(false);\n                    index = slot.index + 1;\n                    if (collections[0] && collections[0]._slots[index]) {\n                        return collections[0]._slots[index];\n                    }\n                }\n            },\n            _verticalSlots: function (selection, reverse, slot) {\n                return this._changeDate(selection, reverse, slot);\n            },\n            _verticalMethod: function (reverse, multiple) {\n                if (multiple) {\n                    return reverse ? 'upSlot' : 'downSlot';\n                } else {\n                    return reverse ? 'leftSlot' : 'rightSlot';\n                }\n            },\n            _normalizeVerticalSelection: function (selection, ranges, reverse, multiple) {\n                var view = this._view;\n                if (!multiple) {\n                    return view._normalizeVerticalSelection(selection, ranges, reverse);\n                }\n                return undefined;\n            },\n            _horizontalSlots: function (selection, group, method, startSlot, endSlot, multiple, reverse) {\n                var view = this._view;\n                var tempSlot = view._changeGroup(selection, reverse);\n                var result = {};\n                if (!tempSlot) {\n                    if (!view._isVerticallyGrouped()) {\n                        result.startSlot = group[method](startSlot);\n                        result.endSlot = group[method](endSlot);\n                    }\n                } else {\n                    result.startSlot = result.endSlot = tempSlot;\n                }\n                return result;\n            },\n            _changeVerticalViewPeriod: function (slots, shift, selection, reverse) {\n                var view = this._view;\n                if ((!slots.startSlot || !slots.endSlot) && !shift && view._changeViewPeriod(selection, reverse, view._isVerticallyGrouped())) {\n                    return true;\n                }\n                return false;\n            },\n            _changeHorizontalViewPeriod: function (slots, shift, selection, reverse) {\n                var view = this._view;\n                if (view._isVerticallyGrouped()) {\n                    return false;\n                }\n                if ((!slots.startSlot || !slots.endSlot) && !shift && view._changeViewPeriod(selection, reverse, false)) {\n                    return true;\n                }\n                return false;\n            },\n            _updateDirection: function (selection, ranges, shift, reverse) {\n                var view = this._view;\n                view._updateDirection(selection, ranges, shift, reverse, !view._isVerticallyGrouped());\n            },\n            _createMoveHint: function (range, adjustedEvent) {\n                var view = this._view;\n                var startSlot = range.start;\n                var startEnd = range.end;\n                for (var slotIdx = startSlot.index; slotIdx <= startEnd.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(adjustedEvent.occurrence, adjustedEvent.occurrence, false, false);\n                    hint.addClass('k-event-drag-hint');\n                    var css = {\n                        left: slot.offsetLeft + 2,\n                        top: slot.offsetTop,\n                        height: view.options.eventHeight,\n                        width: slot.offsetWidth\n                    };\n                    hint.css(css);\n                    view._moveHint = view._moveHint.add(hint);\n                }\n            },\n            _adjustLeftPosition: function (left) {\n                var view = this._view;\n                if (view._isRtl && !view._isVerticallyGrouped()) {\n                    left -= view.content[0].scrollWidth - view.content[0].offsetWidth;\n                }\n                return left;\n            }\n        });\n        kendo.ui.scheduler.TimelineGroupedView = TimelineGroupedView;\n        kendo.ui.scheduler.TimelineGroupedByDateView = TimelineGroupedByDateView;\n        var TimelineView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that._groupedView = that._getGroupedView();\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            name: 'timeline',\n            _getGroupedView: function () {\n                if (this._isGroupedByDate()) {\n                    return new kendo.ui.scheduler.TimelineGroupedByDateView(this);\n                } else {\n                    return new kendo.ui.scheduler.TimelineGroupedView(this);\n                }\n            },\n            _getNextEventIndexBySlot: function (slot, sortedEvents, groupIndex) {\n                if (this._isVerticallyGrouped()) {\n                    return kendo.ui.SchedulerView.fn._getNextEventIndexBySlot.call(this, slot, sortedEvents, groupIndex);\n                }\n                var tempIndex = 0;\n                for (var i = 0; i < sortedEvents.length; i++) {\n                    if (slot.startDate() > sortedEvents[i].start.startDate()) {\n                        tempIndex++;\n                        continue;\n                    }\n                    if (slot.startDate().getTime() === sortedEvents[i].start.startDate().getTime() && groupIndex > sortedEvents[i].start.groupIndex) {\n                        tempIndex++;\n                        continue;\n                    }\n                    break;\n                }\n                return tempIndex;\n            },\n            _getSelectedSlot: function (slot, sortedEvents, event, idx, pad, prev) {\n                if (this._isVerticallyGrouped()) {\n                    return kendo.ui.SchedulerView.fn._getSelectedSlot.call(this, slot, sortedEvents, event, idx, pad, prev);\n                }\n                return slot;\n            },\n            _getSortedEvents: function (uniqueAllEvents) {\n                if (this._isVerticallyGrouped()) {\n                    return kendo.ui.SchedulerView.fn._getSortedEvents.call(this, uniqueAllEvents);\n                }\n                return uniqueAllEvents.sort(function (first, second) {\n                    var result = first.start.startDate().getTime() - second.start.startDate().getTime();\n                    if (result === 0) {\n                        if (first.start.isDaySlot && !second.start.isDaySlot) {\n                            result = -1;\n                        }\n                        if (!first.start.isDaySlot && second.start.isDaySlot) {\n                            result = 1;\n                        }\n                    }\n                    if (result === 0) {\n                        result = first.start.groupIndex - second.start.groupIndex;\n                    }\n                    if (result === 0) {\n                        result = $(first.element).index() - $(second.element).index();\n                    }\n                    return result;\n                });\n            },\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options;\n                this.datesHeader.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.times.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                if (!this._isInDateSlot({\n                        start: currentTime,\n                        end: currentTime\n                    })) {\n                    return;\n                }\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                var groupsCount = !options.group || options.group.orientation == 'vertical' ? 1 : this.groups.length;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        if (this._isVerticallyGrouped()) {\n                            this._groupedView._updateCurrentVerticalTimeMarker(ranges, currentTime);\n                        } else {\n                            var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                            var headerWrap = this.datesHeader.find('.' + SCHEDULER_HEADER_WRAP_CLASS);\n                            var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                            var timesTableMarker = $(elementHtml).prependTo(headerWrap).addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-down');\n                            timesTableMarker.css({\n                                left: this._adjustLeftPosition(left - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2),\n                                top: headerWrap.find('tr:last').prev().position().top\n                            });\n                            $(elementHtml).prependTo(this.content).css({\n                                left: this._adjustLeftPosition(left),\n                                width: '1px',\n                                height: this.content[0].scrollHeight - 1,\n                                top: 0\n                            });\n                        }\n                    }\n                }\n            },\n            _adjustLeftPosition: function (left) {\n                return this._groupedView._adjustLeftPosition(left);\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-si-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({\n                                    start: slot.startDate(),\n                                    end: slot.endDate()\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _slotByPosition: function (x, y) {\n                var slot;\n                var content = this.content;\n                var offset = content.offset();\n                var groupIndex;\n                x -= offset.left;\n                y -= offset.top;\n                if (this._isRtl) {\n                    var browser = kendo.support.browser;\n                    if (browser.mozilla) {\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                        x += content[0].scrollLeft;\n                    } else if (browser.msie) {\n                        x -= content.scrollLeft();\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                    } else if (browser.webkit) {\n                        x += content[0].scrollLeft;\n                    }\n                } else {\n                    x += content[0].scrollLeft;\n                }\n                y += content[0].scrollTop;\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            options: {\n                name: 'TimelineView',\n                title: 'Timeline',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                date: kendo.date.today(),\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                showWorkHours: false,\n                minorTickCount: 2,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                majorTick: 60,\n                eventHeight: 25,\n                eventMinWidth: 0,\n                columnWidth: 100,\n                groupHeaderTemplate: '#=text#',\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                slotTemplate: '&nbsp;',\n                eventTemplate: EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                footer: { command: 'workDay' },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                },\n                messages: {\n                    defaultRowText: 'All events',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                that._dates = dates;\n                that._startDate = dates[0];\n                that._endDate = dates[dates.length - 1 || 0];\n                that._calculateSlotRanges();\n                that.createLayout(that._layout(dates));\n                that._content(dates);\n                that._footer();\n                that._setContentWidth();\n                that.refreshLayout();\n                that.datesHeader.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n                    that.trigger('navigate', {\n                        view: 'timeline',\n                        date: slot.startDate()\n                    });\n                });\n                that._groupedView._hideHeaders();\n            },\n            _setContentWidth: function () {\n                var content = this.content;\n                var contentWidth = content.width();\n                var contentTable = this.content.find('table');\n                var columnCount = contentTable.find('tr:first').children().length;\n                var minWidth = 100;\n                var calculatedWidth = columnCount * this.options.columnWidth;\n                if (contentWidth < calculatedWidth) {\n                    minWidth = Math.ceil(calculatedWidth / contentWidth * 100);\n                }\n                contentTable.add(this.datesHeader.find('table')).css('width', minWidth + '%');\n            },\n            _calculateSlotRanges: function () {\n                var dates = this._dates;\n                var slotStartTime = this.startTime();\n                var slotEndTime = this.endTime();\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                var slotRanges = [];\n                for (var i = 0; i < dates.length; i++) {\n                    var rangeStart = getDate(dates[i]);\n                    setTime(rangeStart, slotStartTime);\n                    var rangeEnd = getDate(dates[i]);\n                    setTime(rangeEnd, slotEndTime);\n                    slotRanges.push({\n                        start: kendo.date.toUtcTime(rangeStart),\n                        end: kendo.date.toUtcTime(rangeEnd)\n                    });\n                }\n                this._slotRanges = slotRanges;\n            },\n            _forTimeRange: function (min, max, action, verticalByDate, groupsCount) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = verticalByDate ? 1 : Math.round(length);\n                if (groupsCount) {\n                    length = length * groupsCount;\n                }\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval);\n                    var isMajorTickColumn = majorTickDivider === 0;\n                    var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                    var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                    var minorTickColumns = minorTickCount;\n                    if (length % minorTickCount !== 0) {\n                        var isLastMajorSlot = length - (idx + 1) < minorTickCount;\n                        if (isMajorTickColumn && isLastMajorSlot) {\n                            minorTickColumns = length % minorTickCount;\n                        }\n                    }\n                    html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns, idx % groupsCount);\n                    if (!verticalByDate) {\n                        if (groupsCount) {\n                            if (idx % groupsCount === groupsCount - 1) {\n                                setTime(start, msInterval, false);\n                            }\n                        } else {\n                            setTime(start, msInterval, false);\n                        }\n                    }\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                return html;\n            },\n            _layout: function (dates) {\n                var timeColumns = [];\n                var columns = [];\n                var that = this;\n                var rows = [{ text: that.options.messages.defaultRowText }];\n                var groupedView = that._groupedView;\n                var minorTickSlots = [];\n                for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                    minorTickSlots.push({\n                        text: '',\n                        className: 'k-last',\n                        minorTicks: true\n                    });\n                }\n                this._forTimeRange(that.startTime(), that.endTime(), function (date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                    var template = that.majorTimeHeaderTemplate;\n                    if (majorTick) {\n                        var timeColumn = {\n                            text: template({ date: date }),\n                            className: lastSlotColumn ? 'k-slot-cell' : '',\n                            columns: minorTickSlots.slice(0, minorSlotsCount)\n                        };\n                        groupedView._setColspan(timeColumn);\n                        timeColumns.push(timeColumn);\n                    }\n                });\n                for (var idx = 0; idx < dates.length; idx++) {\n                    columns.push({\n                        text: that.dateHeaderTemplate({ date: dates[idx] }),\n                        className: 'k-slot-cell',\n                        columns: timeColumns.slice(0)\n                    });\n                }\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        rows = groupedView._createRowsLayout(resources, null, this.groupHeaderTemplate, columns);\n                        columns = groupedView._createVerticalColumnsLayout(resources, null, this.groupHeaderTemplate, columns);\n                    } else {\n                        columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _content: function (dates) {\n                var that = this;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGrouped = false;\n                if (resources.length) {\n                    isVerticalGrouped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGrouped) {\n                        rowCount = that._groupedView._getRowCount(this.rowLevels.length - 1);\n                        groupsCount = that._groupedView._getGroupsCount();\n                    } else {\n                        groupsCount = that._groupCount();\n                    }\n                }\n                html += '<tbody>';\n                html += that._groupedView._addContent(dates, columnCount, groupsCount, rowCount, start, end, slotTemplate, isVerticalGrouped);\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var dates = this._dates;\n                var columnCount = dates.length;\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    var start = dates[0];\n                    var end = dates[dates.length - 1 || 0];\n                    view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n            },\n            _isHorizontallyGrouped: function () {\n                return this.groupedResources.length && this._groupOrientation() === 'horizontal';\n            },\n            _timeSlotGroups: function (groupCount, datesCount) {\n                var interval = this._timeSlotInterval();\n                var isVerticallyGrouped = this._isVerticallyGrouped();\n                var tableRows = this.content.find('tr');\n                tableRows.attr('role', 'row');\n                this._groupedView._addTimeSlotsCollections(groupCount, datesCount, tableRows, interval, isVerticallyGrouped);\n            },\n            _addTimeSlotToCollection: function (group, cells, cellIndex, cellOffset, dateIndex, time, interval) {\n                var cell = cells[cellIndex + cellOffset];\n                var collection = group.getTimeSlotCollection(0);\n                var currentDate = this._dates[dateIndex];\n                var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                var start = currentTime + time;\n                var end = start + interval;\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addTimeSlot(cell, start, end, true);\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventGroups = [];\n                var maxRowCount = 0;\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    var eventGroup = {\n                        groupIndex: groupIndex,\n                        maxRowCount: 0,\n                        events: {}\n                    };\n                    eventGroups.push(eventGroup);\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n                    if (maxRowCount < eventGroup.maxRowCount) {\n                        maxRowCount = eventGroup.maxRowCount;\n                    }\n                }\n                this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n                this._positionEvents(eventGroups, eventsByResource.length);\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _positionEvents: function (eventGroups, groupsCount) {\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var eventsForGroup = eventGroups[groupIndex].events;\n                    for (var eventUid in eventsForGroup) {\n                        var eventObject = eventsForGroup[eventUid];\n                        if ($.isArray(eventObject)) {\n                            for (var eventIndex = 0; eventIndex < eventObject.length; eventIndex++) {\n                                this._positionEvent(eventObject[eventIndex]);\n                            }\n                        } else {\n                            this._positionEvent(eventObject);\n                        }\n                    }\n                }\n            },\n            _setRowsHeight: function (eventGroups, groupsCount, maxRowCount) {\n                var eventHeight = this.options.eventHeight + 2;\n                var eventBottomOffset = this._getBottomRowOffset();\n                var groupedView = this._groupedView;\n                var verticalGroupCount = groupedView._getVerticalGroupCount(groupsCount);\n                groupsCount = this._isVerticallyGrouped() ? verticalGroupCount : 1;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var rowsCount = groupedView._getVerticalRowCount(eventGroups, groupIndex, maxRowCount);\n                    rowsCount = rowsCount ? rowsCount : 1;\n                    var rowHeight = (eventHeight + 2) * rowsCount + eventBottomOffset;\n                    var timesRow = $(this.times.find('tr')[groupIndex]);\n                    var row = $(this.content.find('tr')[groupIndex]);\n                    timesRow.height(rowHeight);\n                    row.height(rowHeight);\n                }\n                this._setContentWidth();\n                this.refreshLayout();\n                this._refreshSlots();\n            },\n            _getBottomRowOffset: function () {\n                var eventBottomOffset = this.options.eventHeight * 0.5;\n                var isMobile = this._isMobile();\n                var minOffset;\n                var maxOffset;\n                if (isMobile) {\n                    minOffset = 30;\n                    maxOffset = 60;\n                } else {\n                    minOffset = 15;\n                    maxOffset = 30;\n                }\n                if (eventBottomOffset > maxOffset) {\n                    eventBottomOffset = maxOffset;\n                } else if (eventBottomOffset < minOffset) {\n                    eventBottomOffset = minOffset;\n                }\n                return eventBottomOffset;\n            },\n            _positionEvent: function (eventObject) {\n                var eventHeight = this.options.eventHeight + 2;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var left = this._adjustLeftPosition(rect.left);\n                var width = rect.right - rect.left - 2;\n                if (width < 0) {\n                    width = 0;\n                }\n                if (width < this.options.eventMinWidth) {\n                    var slotsCollection = eventObject.slotRange.collection;\n                    var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                    var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n                    width = this.options.eventMinWidth;\n                    if (offsetRight < left + width) {\n                        width = offsetRight - rect.left - 2;\n                    }\n                }\n                eventObject.element.css({\n                    top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + 2) + 'px',\n                    left: left,\n                    width: width\n                });\n            },\n            _refreshSlots: function () {\n                for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    this.groups[groupIndex].refresh();\n                }\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _isInDateSlot: function (event) {\n                var startTime = event.start;\n                var endTime = event.end;\n                var rangeStart = getDate(this._startDate);\n                var rangeEnd = kendo.date.addDays(getDate(this._endDate), 1);\n                if (startTime < rangeEnd && rangeStart <= endTime) {\n                    return true;\n                }\n                return false;\n            },\n            _isInTimeSlot: function (event) {\n                var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n                var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n                var slotRanges = this._slotRanges;\n                if (startTime === endTime) {\n                    endTime = endTime + 1;\n                }\n                for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                    if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _adjustEvent: function (event) {\n                var start = event.start;\n                var end = event.end;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var adjustedStartDate = null;\n                var adjustedEndDate = null;\n                var occurrence;\n                var head = false;\n                var tail = false;\n                if (event.isAllDay) {\n                    adjustedStartDate = getDate(start);\n                    if (startTime > eventStartTime) {\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    adjustedEndDate = getDate(end);\n                    if (endTime === getMilliseconds(getDate(this.endTime()))) {\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate, 1);\n                    } else {\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                } else {\n                    endTime = endTime === 0 ? MS_PER_DAY : endTime;\n                    if (startTime > eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    } else if (endTime < eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    if (endTime < eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    } else if (startTime > eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate, -1);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                }\n                occurrence = event.clone({\n                    start: adjustedStartDate ? adjustedStartDate : start,\n                    end: adjustedEndDate ? adjustedEndDate : end,\n                    _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                    _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                    isAllDay: false\n                });\n                return {\n                    occurrence: occurrence,\n                    head: head,\n                    tail: tail\n                };\n            },\n            _renderEvents: function (events, groupIndex, eventGroup) {\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.end.getTime() - event.start.getTime() >= MS_PER_DAY;\n                        var container = this.content;\n                        if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                            var adjustedEvent = this._adjustEvent(event);\n                            var group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                            var range = ranges[0];\n                            var startIndex = range.start.index;\n                            var endIndex = range.end.index;\n                            if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                                this._groupedView._renderEvent(eventGroup, event, adjustedEvent, group, range, container, startIndex, endIndex);\n                            }\n                        }\n                    }\n                }\n            },\n            addContinuousEvent: function (group, range, element, isAllDay) {\n                var events = group._continuousEvents;\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            },\n            _createEventElement: function (occurrence, event, head, tail) {\n                var template = this.eventTemplate;\n                var editable = this.options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _arrangeRows: function (eventObject, slotRange, eventGroup) {\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var rectRight = rect.right + this.options.eventMinWidth;\n                var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    rectLeft: rect.left,\n                    rectRight: rectRight,\n                    element: eventObject.element,\n                    uid: eventObject.uid\n                });\n                events.push({\n                    start: startIndex,\n                    end: endIndex,\n                    uid: eventObject.uid\n                });\n                var rows = SchedulerView.createRows(events);\n                if (eventGroup.maxRowCount < rows.length) {\n                    eventGroup.maxRowCount = rows.length;\n                }\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                    }\n                }\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                var groupedView = this._groupedView;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        return groupedView._verticalCountForLevel(resources.length - 1);\n                    } else {\n                        return groupedView._horizontalCountForLevel(resources.length - 1, this.columnLevels.length - 1);\n                    }\n                }\n                return 1;\n            },\n            _updateEventForSelection: function (event) {\n                var adjustedEvent = this._adjustEvent(event.clone());\n                return adjustedEvent.occurrence;\n            },\n            _eventOptionsForMove: function (event) {\n                if (event.isAllDay) {\n                    return { isAllDay: false };\n                }\n                return {};\n            },\n            _updateEventForResize: function (event) {\n                if (event.isAllDay) {\n                    event.set('isAllDay', false);\n                }\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var group = this.groups[groupIndex];\n                var clonedEvent = event.clone({\n                    start: event.start,\n                    end: event.end\n                });\n                var eventDuraton = clonedEvent.duration();\n                clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n                clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n                var adjustedEvent = this._adjustEvent(clonedEvent);\n                var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                this._removeMoveHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    this._groupedView._createMoveHint(ranges[rangeIndex], adjustedEvent);\n                }\n                var content = this.content;\n                this._moveHint.appendTo(content);\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, false, false);\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    var startRect = range.innerRect(startTime, endTime, false);\n                    startRect.top = start.offsetTop;\n                    var width = startRect.right - startRect.left;\n                    var height = range.endSlot().offsetTop + start.offsetHeight - startRect.top;\n                    var left = this._adjustLeftPosition(startRect.left);\n                    var hint = SchedulerView.fn._createResizeHint.call(this, left, startRect.top, width, height);\n                    this._resizeHint = this._resizeHint.add(hint);\n                }\n                var format = 't';\n                var container = this.content;\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple && !vertical) {\n                    if (startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                        selection.backward = reverse;\n                    }\n                }\n            },\n            _changeGroup: function (selection, previous) {\n                var method = previous ? 'prevGroupSlot' : 'nextGroupSlot';\n                var slot = this[method](selection.start, selection.groupIndex, false);\n                if (slot) {\n                    selection.groupIndex += previous ? -1 : 1;\n                }\n                this._groupedView._changeGroup(selection, previous, slot);\n                return slot;\n            },\n            prevGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex <= 0) {\n                    return;\n                }\n                return this._groupedView._prevGroupSlot(slot, group, isDay);\n            },\n            nextGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex >= this.groups.length - 1) {\n                    return;\n                }\n                return this._groupedView._nextGroupSlot(slot, group, isDay);\n            },\n            _verticalSlots: function (selection, ranges, multiple, reverse) {\n                var groupedView = this._groupedView;\n                var method = groupedView._verticalMethod(reverse, multiple);\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                var slot = groupedView._normalizeVerticalSelection(selection, ranges, reverse, multiple);\n                if (slot) {\n                    startSlot = endSlot = slot;\n                }\n                startSlot = group[method](startSlot);\n                endSlot = group[method](endSlot);\n                if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                    startSlot = endSlot = groupedView._verticalSlots(selection, reverse, slot);\n                }\n                return {\n                    startSlot: startSlot,\n                    endSlot: endSlot\n                };\n            },\n            _horizontalSlots: function (selection, ranges, multiple, reverse) {\n                var method = reverse ? 'upSlot' : 'downSlot';\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                var result = {};\n                if (!multiple) {\n                    result = this._groupedView._horizontalSlots(selection, group, method, startSlot, endSlot, multiple, reverse);\n                } else {\n                    result.startSlot = group[method](startSlot);\n                    result.endSlot = group[method](endSlot);\n                    if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                        result.startSlot = result.endSlot = this._changeGroup(selection, reverse);\n                    }\n                }\n                return result;\n            },\n            _changeViewPeriod: function (selection, reverse) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                selection.start = new Date(date);\n                selection.end = new Date(date);\n                if (this._isHorizontallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n                var duration = end - start;\n                if (reverse) {\n                    end = getMilliseconds(this.endTime());\n                    end = end === 0 ? MS_PER_DAY : end;\n                    setTime(selection.start, end - duration);\n                    setTime(selection.end, end);\n                } else {\n                    start = getMilliseconds(this.startTime());\n                    setTime(selection.start, start);\n                    setTime(selection.end, start + duration);\n                }\n                selection.events = [];\n                return true;\n            },\n            move: function (selection, key, shift) {\n                var handled = false;\n                var group = this.groups[selection.groupIndex];\n                var keys = kendo.keys;\n                var groupedView = this._groupedView;\n                var ranges = group.ranges(selection.start, selection.end, false, false);\n                var startSlot, endSlot, reverse, slots;\n                if (key === keys.DOWN || key === keys.UP) {\n                    handled = true;\n                    reverse = key === keys.UP;\n                    groupedView._updateDirection(selection, ranges, shift, reverse);\n                    slots = this._verticalSlots(selection, ranges, shift, reverse);\n                    if (groupedView._changeVerticalViewPeriod(slots, shift, selection, reverse)) {\n                        return handled;\n                    }\n                } else if (key === keys.LEFT || key === keys.RIGHT) {\n                    handled = true;\n                    reverse = key === keys.LEFT;\n                    this._updateDirection(selection, ranges, shift, reverse, false);\n                    slots = this._horizontalSlots(selection, ranges, shift, reverse);\n                    if (groupedView._changeHorizontalViewPeriod(slots, shift, selection, reverse)) {\n                        return handled;\n                    }\n                }\n                if (handled) {\n                    startSlot = slots.startSlot;\n                    endSlot = slots.endSlot;\n                    if (shift) {\n                        var backward = selection.backward;\n                        if (backward && startSlot) {\n                            selection.start = startSlot.startDate();\n                        } else if (!backward && endSlot) {\n                            selection.end = endSlot.endDate();\n                        }\n                    } else if (startSlot && endSlot) {\n                        selection.start = startSlot.startDate();\n                        selection.end = endSlot.endDate();\n                    }\n                    selection.events = [];\n                }\n                return handled;\n            },\n            destroy: function () {\n                var that = this;\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            }\n        });\n        extend(true, ui, {\n            TimelineView: TimelineView,\n            TimelineWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWeekView',\n                    title: 'Timeline Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWeek',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineWorkWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWorkWeekView',\n                    title: 'Timeline Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWorkWeek',\n                nextDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.options.workWeekStart, -1), end = kendo.date.dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineMonthView: TimelineView.extend({\n                options: {\n                    name: 'TimelineMonthView',\n                    title: 'Timeline Month',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                    workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                    footer: false,\n                    majorTick: 1440,\n                    minorTickCount: 1\n                },\n                name: 'timelineMonth',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.firstDayOfMonth(selectedDate), end = kendo.date.lastDayOfMonth(selectedDate), idx, length, dates = [];\n                    for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}