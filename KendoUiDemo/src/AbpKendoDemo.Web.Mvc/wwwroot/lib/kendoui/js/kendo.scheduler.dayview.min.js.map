{"version":3,"sources":["kendo.scheduler.dayview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","idx","events","_continuousEvents","lastEvent","length","startDate","getDate","start","getTime","splice","uid","attr","kendo","end","push","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","window","ui","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","proxy","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","BORDER_SIZE_COEFF","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","ALLDAY_EVENT_WRAPPER_STRING","EVENT_WRAPPER_STRING","MultiDayView","init","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","timezone","timezoneOffset","groupsCount","firstTimesCell","lastTimesCell","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","elementHtml","timesTableMarker","markerTopPosition","timesTableMarkerCss","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","times","find","remove","content","orientation","groups","toUtcTime","timeSlotRanges","slotByStartDate","prependTo","Math","round","innerRect","top","_isRtl","right","position","left","addClass","css","height","width","scrollWidth","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","_updateResizeHint","event","startTime","endTime","hint","rangeIndex","slotIdx","slot","rect","format","container","multiday","isMultiDay","_removeResizeHint","startSlot","_isGroupedByDate","index","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","outerRect","snap","bottom","appendTo","text","first","toString","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","pop","clientWidth","offsetHeight","_createEventElement","clone","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","rowCount","rowMultiplier","cellMultiplier","cells","timeIndex","interval","_timeSlotInterval","verticalViews","tableRows","floor","children","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","columnIndex","_addResourceView","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","resourceInfo","parent","hasClass","pageX","pageY","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","target","location","_allDayUserEvents","_editUserEvents","eventElement","_layout","dates","column","columns","rows","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","_footer","html","isWorkDay","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","majorTickDivider","isMajorTickRow","isMiddleRow","isLastSlotRow","_content","allDayVerticalGroupRow","appendRow","rowIdx","isVerticalGroupped","dateID","rowLevels","columnLevels","result","dateGroupIndex","dateIndex","groupIdx","_addCellsToContent","append","tmplDate","classes","_isWorkDay","i","day","getDay","_render","allDayHeader","_startDate","_endDate","createLayout","refreshLayout","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","_end","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","_timeSlotIndex","eventStartTime","timeSlotInterval","_slotIndex","_dateSlotIndex","slotStart","slotEnd","slots","_positionAllDayEvent","slotRange","rowEvents","j","eventLength","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","leftOffset","rightOffset","eventHeight","addEvent","slotIndex","createRows","_arrangeColumns","eventRightOffset","columnEvents","eventElements","slotEvents","columnWidth","createColumns","style","_positionEvent","_startTime","_endTime","isOneDayEvent","head","tail","middle","eventStartDate","eventEndDate","data","isMobile","showDelete","resizable","resize","_time","eventEndTime","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","firstSlot","lastSlot","_updateAllDayHeaderHeight","allDaySlots","_height","refresh","_renderEvents","isMultiDayEvent","rangeCount","occurrence","newStart","newEnd","dateRange","allDayEventContainer","slotRanges","daySlotRanges","setDate","render","eventsByResource","eventsPerDate","Query","sort","field","dir","toArray","_eventsByResource","map","grep","itemIdx","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","verticalByDate","endMilliseconds","_timeSlotCollections","_getCollections","daySlotCollectionCount","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.dayview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.dayview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.dayview',\n        name: 'Scheduler Day View',\n        category: 'web',\n        description: 'The Scheduler Day View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, MS_PER_DAY = kendo.date.MS_PER_DAY, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', BORDER_SIZE_COEFF = 0.8666, getMilliseconds = kendo.date.getMilliseconds, NS = '.kendoMultiDayView';\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.toString(date, \\'ddd M/dd\\')#</span>'), ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-w\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-e\"></span>' + '#}#' + '</span>' + '#if(resizable && !singleDay && !data.tail && !data.middle){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !singleDay && !data.head && !data.middle){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>', EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\" ' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '</span>' + '<span class=\"k-event-top-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-n\"></span>' + '# } #' + '</span>' + '<span class=\"k-event-bottom-actions\">' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-s\"></span>' + '# } #' + '</span>' + '# if(resizable && !data.tail && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-n\"></span>' + '# } #' + '# if(resizable && !data.head && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-s\"></span>' + '# } #' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n            if (isAllDay && lastEvent && getDate(lastEvent.start.startDate()).getTime() == startDate) {\n                var idx = events.length - 1;\n                for (; idx > -1; idx--) {\n                    if (events[idx].isAllDay || getDate(events[idx].start.startDate()).getTime() < startDate) {\n                        break;\n                    }\n                }\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart;\n            workDays.push(dayIndex);\n            while (options.workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        var MultiDayView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options;\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                this.times.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                var groupsCount = !options.group || options.group.orientation == 'horizontal' ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find('tr:first th:first');\n                var lastTimesCell = this.times.find('tr:first th:last');\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                        var timesTableMarker = $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                        var timesTableMarkerCss = {};\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-left');\n                        } else {\n                            timesTableMarkerCss.left = lastTimesCell.position().left;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-right');\n                        }\n                        timesTableMarkerCss.top = markerTopPosition - outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2;\n                        timesTableMarker.css(timesTableMarkerCss);\n                        $(elementHtml).prependTo(this.content).css({\n                            top: markerTopPosition,\n                            height: '1px',\n                            right: '1px',\n                            width: this.content[0].scrollWidth,\n                            left: 0\n                        });\n                    }\n                }\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n                            hint = SchedulerView.fn._createResizeHint.call(this, slot.offsetLeft, top, width, height);\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n                        hint = SchedulerView.fn._createResizeHint.call(this, start.offsetLeft, top, width, height);\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n                var format = 't';\n                var container = this.content;\n                if (multiday) {\n                    format = 'M/dd';\n                    container = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var start = kendo.date.toUtcTime(event.start) + distance;\n                var end = start + event.duration();\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n                start = kendo.timezone.toLocalDate(start);\n                end = kendo.timezone.toLocalDate(end);\n                this._removeMoveHint();\n                if (!multiday && (getMilliseconds(end) === 0 || getMilliseconds(end) < getMilliseconds(this.startTime()))) {\n                    if (ranges.length > 1) {\n                        ranges.pop();\n                    }\n                }\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 4;\n                            hint = this._createEventElement(event.clone({\n                                start: start,\n                                end: end\n                            }), !multiday);\n                            this._appendMoveHint(hint, css);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                            css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n                        if (multiday) {\n                            css.width = range.innerWidth() - 4;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 4;\n                        }\n                        hint = this._createEventElement(event.clone({\n                            start: start,\n                            end: end\n                        }), !multiday);\n                        this._appendMoveHint(hint, css);\n                    }\n                }\n                var content = this.content;\n                if (multiday) {\n                    content = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n                this._moveHint.appendTo(content);\n            },\n            _appendMoveHint: function (hint, css) {\n                hint.addClass('k-event-drag-hint');\n                hint.css(css);\n                this._moveHint = this._moveHint.add(hint);\n            },\n            _slotByPosition: function (x, y) {\n                var slot, offset;\n                if (this._isVerticallyGrouped()) {\n                    offset = this.content.offset();\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                } else {\n                    offset = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day)').find('>div').offset();\n                }\n                if (offset) {\n                    x -= offset.left;\n                    y -= offset.top;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                var group;\n                var groupIndex;\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                if (offset) {\n                    x += offset.left;\n                    y += offset.top;\n                }\n                offset = this.content.offset();\n                x -= offset.left;\n                y -= offset.top;\n                if (!this._isVerticallyGrouped()) {\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                            return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n            _columnCountInResourceView: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        return this._rowCountForLevel(0);\n                    } else {\n                        return this._columnCountForLevel(0);\n                    }\n                }\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n            _timeSlotGroups: function (groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find('tr:not(.k-scheduler-header-all-day)');\n                var group, time, rowIndex, cellIndex;\n                tableRows.attr('role', 'row');\n                var rowCount = tableRows.length;\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n                    rowIndex = rowMultiplier * rowCount;\n                    while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                        time += interval;\n                        rowIndex++;\n                    }\n                }\n            },\n            _addTimeSlotGroup: function (group, cells, cellIndex, time, interval, timeIndex) {\n                var cell = cells[cellIndex];\n                var collection = group.getTimeSlotCollection(timeIndex);\n                var currentDate = this._dates[timeIndex];\n                var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                var start = currentTime + time;\n                var end = start + interval;\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addTimeSlot(cell, start, end);\n            },\n            _addDaySlotGroup: function (collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n            _daySlotGroups: function (groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find('.k-scheduler-header-all-day');\n                } else {\n                    tableRows = this.element.find('.k-scheduler-header-all-day tr');\n                }\n                tableRows.attr('role', 'row');\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n            options: {\n                name: 'MultiDayView',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                allDaySlot: true,\n                showWorkHours: false,\n                title: '',\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                minorTimeHeaderTemplate: '&nbsp;',\n                groupHeaderTemplate: '#=text#',\n                slotTemplate: '&nbsp;',\n                allDaySlotTemplate: '&nbsp;',\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: { command: 'workDay' },\n                messages: {\n                    allDay: 'all day',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-si-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        if (!$(this).parent().hasClass('k-scheduler-header-all-day')) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    }).on('dblclick' + NS, '.k-scheduler-header-all-day td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({}, {\n                                    isAllDay: true,\n                                    start: kendo.date.getDate(slot.startDate()),\n                                    end: kendo.date.getDate(slot.startDate())\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            if (!$(e.target).parent().hasClass('k-scheduler-header-all-day')) {\n                                var x = e.x.location !== undefined ? e.x.location : e.x;\n                                var y = e.y.location !== undefined ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger('add', {\n                                        eventInfo: extend({\n                                            start: slot.startDate(),\n                                            end: slot.endDate()\n                                        }, resourceInfo)\n                                    });\n                                }\n                                e.preventDefault();\n                            }\n                        }\n                    });\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-header-all-day td',\n                        tap: function (e) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({}, {\n                                        isAllDay: true,\n                                        start: kendo.date.getDate(slot.startDate()),\n                                        end: kendo.date.getDate(slot.startDate())\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _layout: function (dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n                    column.text = that.dateHeaderTemplate({ date: dates[idx] });\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = 'k-today';\n                    }\n                    columns.push(column);\n                }\n                var resources = this.groupedResources;\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay,\n                        allDay: true,\n                        cellContent: function (idx) {\n                            var groupIndex = idx;\n                            idx = resources.length && that._groupOrientation() !== 'vertical' ? idx % dates.length : idx;\n                            return that.allDaySlotTemplate({\n                                date: dates[idx],\n                                resources: function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n                this._forTimeRange(this.startTime(), this.endTime(), function (date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? 'k-slot-cell' : ''\n                    };\n                    rows.push(row);\n                });\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                        if (byDate) {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                        } else {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                        }\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval), isMajorTickRow = majorTickDivider === 0, isMiddleRow = majorTickDivider < minorTickCount - 1, isLastSlotRow = majorTickDivider === minorTickCount - 1;\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var allDaySlotTemplate = this.allDaySlotTemplate;\n                var isVerticalGroupped = false;\n                var allDayVerticalGroupRow;\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                if (resources.length) {\n                    isVerticalGroupped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGroupped) {\n                        rowCount = this._rowCountForLevel(this.rowLevels.length - 2);\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1);\n                        }\n                        if (options.allDaySlot) {\n                            allDayVerticalGroupRow = function (groupIndex) {\n                                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                                var dateGroupIndex = byDate ? 0 : groupIndex;\n                                var resources = function () {\n                                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                                };\n                                if (byDate) {\n                                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[dateID],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                } else {\n                                    for (var idx = 0; idx < dates.length; idx++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[idx],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                }\n                                return result + '</tr>';\n                            };\n                        }\n                    } else {\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1) / this._columnCountForLevel(0);\n                        } else {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 2);\n                        }\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date, majorTick) {\n                    var content = '';\n                    var groupIdx = 0;\n                    var idx, length;\n                    content = '<tr' + (majorTick ? ' class=\"k-middle-row\"' : '') + '>';\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n                            }\n                            if (isVerticalGroupped) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                        }\n                    }\n                    content += '</tr>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += allDayVerticalGroupRow ? allDayVerticalGroupRow(rowIdx) : '';\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                        dateID++;\n                    }\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _addCellsToContent: function (content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = '';\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === 'vertical';\n                var resources = function (groupIndex) {\n                    return function () {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += 'k-today';\n                }\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) || !this._isWorkDay(dates[idx])) {\n                    classes += ' k-nonwork-hour';\n                }\n                content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                content += slotTemplate({\n                    date: tmplDate,\n                    resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx)\n                });\n                content += '</td>';\n                return content;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                this._dates = dates;\n                this._startDate = dates[0];\n                this._endDate = dates[dates.length - 1 || 0];\n                this.createLayout(this._layout(dates));\n                this._content(dates);\n                this._footer();\n                this.refreshLayout();\n                var allDayHeader = this.element.find('.k-scheduler-header-all-day td');\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n                that.element.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = outerHeight(th);\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = outerWidth(that.times);\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = outerHeight(that.datesHeader);\n                        }\n                    }\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n                    that.trigger('navigate', {\n                        view: 'day',\n                        date: slot.startDate()\n                    });\n                });\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            _end: function (isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n                if (isAllDay) {\n                    time = 0;\n                }\n                return new Date(this._endDate.getTime() + time);\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            destroy: function () {\n                var that = this;\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n            inRange: function (options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n                if (options.isAllDay) {\n                    return inRange;\n                }\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n                return inRange && startTime <= start && end <= endTime;\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            _timeSlotIndex: function (date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n                return (eventStartTime - startTime) / timeSlotInterval;\n            },\n            _slotIndex: function (date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n                return this._timeSlotIndex(date);\n            },\n            _dateSlotIndex: function (date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n            _positionAllDayEvent: function (element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var currentColumnCount = this._headerColumnCount || 0;\n                var leftOffset = 2;\n                var rightOffset = startIndex !== endIndex ? 5 : 4;\n                var eventHeight = this._allDayHeaderHeight;\n                var start = slotRange.startSlot();\n                element.css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                allDayEvents.push({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                var rows = SchedulerView.createRows(allDayEvents);\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n                var top = slotRange.start.offsetTop;\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({ top: top + idx * eventHeight });\n                    }\n                }\n            },\n            _arrangeColumns: function (element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n                element = {\n                    element: element,\n                    slotIndex: startSlot.index,\n                    start: top,\n                    end: top + height\n                };\n                var columns, slotWidth = startSlot.clientWidth, eventRightOffset = slotWidth * 0.1, columnEvents, eventElements = slotRange.events(), slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end);\n                slotRange.addEvent(element);\n                slotEvents.push(element);\n                columns = SchedulerView.createColumns(slotEvents);\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        columnEvents[j].element[0].style.width = columnWidth - 4 + 'px';\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + 'px';\n                    }\n                }\n            },\n            _positionEvent: function (event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var rect = slotRange.innerRect(start, end, false);\n                var height = rect.bottom - rect.top - 2;\n                if (height < 0) {\n                    height = 0;\n                }\n                element.css({\n                    top: rect.top,\n                    height: height\n                });\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n            },\n            _createEventElement: function (event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var middle;\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if (!isInDateRange(getDate(eventStartDate), startDate, endDate) && !isInDateRange(eventEndDate, startDate, endDate) || isOneDayEvent && eventStartTime < startTime && eventEndTime > endTime) {\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate || isOneDayEvent && eventStartTime < startTime) {\n                    tail = true;\n                } else if (eventEndDate > endDate && !isOneDayEvent || isOneDayEvent && eventEndTime > endTime) {\n                    head = true;\n                }\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _isInTimeSlot: function (event) {\n                var slotStartTime = this.startTime(), slotEndTime = this.endTime(), startTime = event._startTime || event.start, endTime = event._endTime || event.end;\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                if (event._date('end') > event._date('start')) {\n                    endTime = +event._date('end') + (MS_PER_DAY - 1);\n                }\n                endTime = endTime - event._date('end');\n                startTime = startTime - event._date('start');\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n                var overlaps = startTime !== slotEndTime;\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(slotStartTime, startTime, endTime) || isInTimeRange(slotEndTime, startTime, endTime);\n            },\n            _isInDateSlot: function (event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n                return (isInDateRange(startTime, slotStart, slotEnd) || isInDateRange(endTime, slotStart, slotEnd) || isInDateRange(slotStart, startTime, endTime) || isInDateRange(slotEnd, startTime, endTime)) && (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay);\n            },\n            _updateAllDayHeaderHeight: function (height) {\n                if (this._height !== height) {\n                    this._height = height;\n                    var allDaySlots = this.element.find('.k-scheduler-header-all-day td');\n                    if (allDaySlots.length) {\n                        allDaySlots.parent().add(this.element.find('.k-scheduler-times-all-day').parent()).height(height);\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n            _renderEvents: function (events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find('.k-scheduler-header-wrap > div');\n                var byDate = this._isGroupedByDate();\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.end.getTime() - event.start.getTime() >= MS_PER_DAY;\n                        var container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n                        var element, ranges, range, start, end, group;\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n                                ranges = group.slotRanges(event);\n                                var rangeCount = ranges.length;\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n                                    var occurrence = event.clone({\n                                        start: start,\n                                        end: end,\n                                        _startTime: event._startTime,\n                                        _endTime: event.endTime\n                                    });\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n                                        element.appendTo(container);\n                                        this._positionEvent(occurrence, element, range);\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            ranges = group.slotRanges(event);\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = new Date(start);\n                                    var newEnd = new Date(start);\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newEnd.setDate(newEnd.getDate() + 1);\n                                        newStart.setDate(newStart.getDate() + 1);\n                                        this._positionAllDayEvent(element, dateRange);\n                                        addContinuousEvent(group, dateRange, element, true);\n                                        element.appendTo(container);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n                                    this._positionAllDayEvent(element, ranges[0]);\n                                    addContinuousEvent(group, ranges[0], element, true);\n                                    element.appendTo(container);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventsPerDate = $.map(this._dates, function (date) {\n                    return Math.max.apply(null, $.map(eventsByResource, function (events) {\n                        return $.grep(events, function (event) {\n                            return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                        }).length;\n                    }));\n                });\n                var height = Math.max.apply(null, eventsPerDate);\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n                this.refreshLayout();\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _columnOffsetForResource: function (index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            clearSelection: function () {\n                this.content.add(this.datesHeader).find('.k-state-selected').removeAttr('id').attr('aria-selected', false).removeClass('k-state-selected');\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot && startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    } else {\n                        if (isDaySlot && startSlot.index === endSlot.index || !isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n            _changeViewPeriod: function (selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = !reverse && !group.daySlotCollectionCount() ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    selection.start = new Date(date);\n                    selection.end = new Date(date);\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                    } else {\n                        endMilliseconds = selection.isAllDay || !getMilliseconds(end) ? MS_PER_DAY : getMilliseconds(end);\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n                    selection.events = [];\n                    return true;\n                }\n            }\n        });\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: 'DayView',\n                    title: 'Day'\n                },\n                name: 'day'\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: 'WeekView',\n                    title: 'Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'week',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: 'WorkWeekView',\n                    title: 'Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'workWeek',\n                nextDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, dayOfWeek = kendo.date.dayOfWeek, weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), start = dayOfWeek(weekStart, this.options.workWeekStart, 1), end = dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}