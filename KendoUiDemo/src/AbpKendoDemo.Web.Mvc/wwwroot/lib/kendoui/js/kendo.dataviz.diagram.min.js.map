{"version":3,"sources":["kendo.dataviz.diagram.js"],"names":["f","define","defined","value","UNDEFINED","round","precision","power","pow","math","p","limitValue","min","max","rad","degrees","DEG_TO_RAD","deg","radians","isNumber","val","isNaN","valueOrDefault","defaultValue","sqr","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","hashObject","arrayLimits","arr","MAX_NUM","MIN_NUM","arrayMin","arrayMax","sparseArrayMin","sparseArrayLimits","sparseArrayMax","n","isFinite","undefined","last","array","append","first","second","apply","renderTemplate","text","kendo","template","useWithBlock","paramName","renderAttr","name","renderAllAttr","attrs","output","renderStyle","renderSize","size","renderPos","pos","result","toHyphens","split","isTransparent","color","arabicToRoman","literals","1","10","100","2","20","200","3","30","300","4","40","400","5","50","500","6","60","600","7","70","700","8","80","800","9","90","900","1000","values","roman","shift","romanToArabic","r","digits","prev","v","toLowerCase","x","l","c","d","m","charAt","memoize","cache","Object","create","id","arguments","this","ucs2decode","string","extra","counter","ucs2encode","map","String","fromCharCode","mergeSort","a","cmp","merge","b","ai","bi","slice","left","right","Math","floor","window","deepExtend","PI","Number","MAX_VALUE","now","Date","getTime","util","drawing","dataviz","amd","a1","a2","a3","$","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","loadFonts","fonts","callback","promises","document","font","load","e","logToConsole","Promise","all","then","doc","Class","LRUCache","extend","init","_size","_length","_map","put","lru","entry","_head","_tail","newer","older","get","defaultMeasureBox","options","_cache","_initOptions","baselineMarkerSize","box","styleKey","cacheKey","cachedResult","baselineMarker","_baselineMarker","cloneNode","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","jQuery","encodeBase64","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeUTF8","KEY_STR","inArray","ObserversMixin","observers","_observers","addObserver","element","removeObserver","index","splice","trigger","methodName","event","observer","idx","_suspended","optionsChange","geometryChange","suspend","resume","_observerField","field","mixins","Range","start","stop","step","rangeIntegerScale","k","range","j","Utils","sign","Infinity","abs","findRadian","end","sngXComp","sngYComp","y","atan","Easing","Ticker","diagram","isArray","EPSILON","isNearZero","num","isDefined","obj","isUndefined","isObject","has","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","parseFloat","isEmpty","simpleExtend","destination","source","initArray","serializePoints","points","res","deserializePoints","s","Point","parseInt","randomInteger","lower","upper","random","DFT","el","func","item","childNodes","getMatrixAngle","atan2","getMatrixScaling","sX","sqrt","sY","number","findAngle","center","forEach","iterator","thisRef","any","predicate","remove","what","ax","indexOf","contains","fold","list","acc","context","initial","find","constraint","insert","position","clear","bisort","sortfunc","addRange","easeInOut","cos","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","caller","onStep","seekTo","to","seekFromTo","from","intervalId","setInterval","clearInterval","play","origin","initState","reverse","propagate","update","movement","timePassed","ui","intersectLine","start1","end1","start2","end2","isSegment","num1","num2","tangensdiff","normalVariable","mean","deviation","log","randomId","chars","PathDefiner","Rect","Size","Intersect","RectAlign","Polar","Matrix","MatrixVector","Geometry","HashTable","Dictionary","Queue","Set","Node","Link","Graph","Point2D","isFunction","HITTESTAREA","fn","plus","minus","offset","times","normalize","lengthSquared","middleOf","q","toPolar","useDegrees","halfpi","len","factor","isOnLine","temp","r1","r2","o1","u1","inflate","union","parse","tempStr","xy","point","dx","dy","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","clone","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","delta","scaled","thisCenter","zoom","overlaps","rectBottomRight","Empty","toRect","empty","fromPoints","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","container","align","content","alignment","alignValues","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","applyRect","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","nums","trim","substr","fromMatrix","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","p1","p2","minimum","_buckets","add","_createGetBucket","_bucketExists","set","containsKey","hashId","_hash","bucket","hashes","_hashes","ht","_hashString","_objectHashId","ch","_hashId","Observable","dictionary","that","_hashTable","Error","forEachValue","forEachKey","keys","enqueue","next","dequeue","resource","kv","toArray","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","child","level","root","found","getConnectedComponents","componentId","components","graph","componentIndex","setItemIndices","_collectConnectedNodes","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","remaining","levelCount","ni","cn","newLink","treeLevels","tree","_addNode","pop","addLink","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","foundSource","foundTarget","addExistingLink","getNode","addNode","removeAllLinks","t","hasLink","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneLink","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","sourceStack","targetStack","intensity","targets","li","targetLink","sources","si","sourceLink","maxdiff","ri","ril","u","vertexOrder","kk","reversedEdges","unshift","concat","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","previous","g","graphString","previousLink","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","connect","createDiagramFromGraph","doLayout","randomSize","opt","gli","sourceShape","targetShape","shi","clientWidth","clientHeight","SpringLayout","layoutGraph","limitToView","lastAdded","news","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","diffNumericOptions","fields","elementOptions","hasChanges","sizeOptionsOrDefault","normalizeDrawingOptions","drawingOptions","getColor","TRANSPARENT","Color","toHex","lineAngle","xDiff","yDiff","createSegment","Segment","toDrawingRect","Scale","Translation","Rotation","CompositeTransform","AutoSizeableMixin","Element","VisualBase","TextBlock","Rectangle","MarkerBase","CircleMarker","ArrowMarker","MarkerPathMixin","Path","Line","Polyline","Image","Group","Layout","Circle","Canvas","geometry","Markers","none","arrowStart","filledCircle","arrowEnd","FULL_CIRCLE_ANGLE","START","END","WIDTH","HEIGHT","X","Y","toMatrix","format","invert","toMatrixVector","Length","ZERO","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","startPoint","_measured","_boundingBox","rawBBox","stroke","opacity","_fill","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","_textColor","_font","_initText","fontSize","fontFamily","Text","fontOptions","fontStyle","fontWeight","sizeChanged","textOptions","_initPath","_setPosition","_drawPath","closed","sizeOptions","elements","anchor","createElement","_transformToPath","path","transformCopy","positionMarker","targetSegment","_linePoints","endPoint","nextSegment","prevSegment","controlOut","controlIn","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","marker","_markers","_createMarkers","_createMarker","markerType","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","_createElements","_setData","multipath","_updatePath","_pointsDiffer","currentPoints","differ","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","testKey","toUpperCase","hitToOppositeSide","hit","canDrag","editable","drag","hitTestShapeConnectors","connector","connectors","HIT_TEST_DISTANCE","noMeta","meta","ctrlKey","altKey","shiftKey","PositionAdapter","LayoutUndoUnit","CompositeUnit","ConnectionEditUnit","ConnectionEditUndoUnit","DeleteConnectionUnit","DeleteShapeUnit","TransformUnit","AddConnectionUnit","AddShapeUnit","PanUndoUnit","RotateUnit","ToFrontUnit","ToBackUnit","UndoRedoService","EmptyTool","ScrollerTool","PointerTool","SelectionTool","ConnectionTool","ConnectionEditTool","ToolService","ConnectionRouterBase","LinearConnectionRouter","PolylineRouter","CascadingRouter","AdornerBase","ConnectionEditAdorner","ConnectorsAdorner","ResizingAdorner","Selector","ConnectorVisual","Movable","browser","support","proxy","Cursors","arrow","grip","cross","select","south","east","west","north","rowresize","colresize","AUTO","TOP","RIGHT","LEFT","BOTTOM","DEFAULT_SNAP_SIZE","DEFAULT_SNAP_ANGLE","DRAG_START","DRAG","DRAG_END","ITEMROTATE","ITEMBOUNDSCHANGE","MIN_SNAP_SIZE","MIN_SNAP_ANGLE","MOUSE_ENTER","MOUSE_LEAVE","ZOOM_START","ZOOM_END","SCROLL_MIN","SCROLL_MAX","FRICTION","FRICTION_MOBILE","VELOCITY_MULTIPLIER","PAN","ROTATED","SOURCE","TARGET","HANDLE_NAMES","-1","layoutState","pusher","getShapeById","subjects","froms","tos","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","ticker","conn","units","undoUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","undoSource","undoTarget","targetConnector","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","deselect","initialPosition","finalPosition","finalPos","pan","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","items","initialIndices","_toIndex","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","toolService","tryActivate","getCursor","canvas","scroller","virtualScroll","tool","friction","mobileOS","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","dimension","makeVirtual","virtualSize","dimensions","disable","pannable","enabled","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","selectSingle","handle","_hitTest","_resizingAdorner","isDragHandle","connections","undoRedoService","_getCursor","selectable","multiple","selector","isSelected","selectArea","_createConnection","_c","connectionHandle","_connectionManipulation","_removeHover","activeConnection","_cachedTouchTarget","cachedTouchTarget","sourceConnector","Shape","getConnector","_syncConnectionChanges","_connectorsAdorner","isActive","handleName","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","suspendTracking","updateHovered","resumeTracking","keyDown","toRemove","metaKey","_triggerRemove","_syncChanges","_destroyToolBar","_discardNewConnection","selectAll","cut","paste","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","addToSelection","newConnection","cursor","css","msie","version","cssText","disabledShape","isNew","selectedConnections","_visible","_selectedItems","Connection","_hitTestItems","_hitTestElements","mainLayer","shapeIdx","connectionIdx","shapeHit","connectionHit","hitTest","rec","getBounds","allPoints","route","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","sideDistance","minSide","side","shapeBounds","sides","_sameSideDistance","pointX","pointY","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","shiftX","shiftY","cascadeStartHorizontal","_startHorizontal","sourceSide","horizontal","_adorners","sp","tp","_ts","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","radiusX","radiusY","sourcePointDistance","distanceTo","targetPointDistance","sourceHandle","targetHandle","modelToLayer","_refreshHandler","ctr","_clearVisual","_keepCachedTouchTarget","visualChildren","childrenCount","unbind","each","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","newBounds","staticPoint","thr","newCenter","oldBounds","dtl","dbr","changed","_truncateAngle","_rotating","shouldSnap","_truncateDistance","_displaceBounds","minWidth","minHeight","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","_diffStates","_syncShapeChanges","thumb","rotationThumb","_rotationThumbBounds","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","HyperTree","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","startY","resultLinkSet","resultNodeSet","boundingRect","currentHeight","currentWidth","moveToOffset","nodeBounds","newpoints","pt","deltax","deltay","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","newEdge","areConnectedAlready","adapter","finalNodeSet","LayoutState","initialTemperature","guessBounds","temperature","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","wn","hn","wm","hm","_SquareForce","distance","av","squareSize","ratio","multiplier","area","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","startAngle","endAngle","previousRoot","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","pl","nl","col","basevalue","normalizeAngle","childNode","cp","childAngleFraction","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","layoutComponents","getTree","givenRootShape","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","targetLayer","sortedNodes","minLayer","layerMap","layerCount","o2","o1layer","o2layer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","classNodes","rightSibling","D","neighbor","leftPos","placeLeft","POSITIVE_INFINITY","nodeLeftClass","upNodes","downNodes","intDiv","placeRightToLeft","rightClasses","leftSibling","rightPos","placeRight","NEGATIVE_INFINITY","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","ndsinl","vnode","wings","currentWing","wing","_nodesInLink","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","maximumHeight","ctx","MIN_VALUE","currentNode","currDown","downNode","order","placed","sequenceStart","sequenceEnd","directions","fromLayerIndex","reachedFinalLayerIndex","layerIncrement","_gridPositionComparer","dest","virtualStartIndex","virtualStart","sequence","virtualEnd","virtualEndIndex","_firstVirtualNode","_sequencer","nextVirtualNode","adjustDirections","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","clayer","j1","j2","getNeighborOnLayer","dir","_sequenceSingle","combineSequences","pair","rightHeap","leftRes","rightRes","leftHeap","_positionDescendingComparer","_positionAscendingComparer","leftClass","_getComposite","rightClass","maxLayoutIterations","it","gridPos","layoutLayer","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","o","oLayer","dLayer","oPos","dPos","upLayer","downLayer","depthOfDumminess","prevLink","dedum","moves","maxIterations","iter","optimizeLayerCrossings","sum","total","presorted","inode","compareValue","n1BaryCenter","n2BaryCenter","compareByIndex","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","node1","node2","node1GridPos","node2GridPos","crossAfter","revert","countLinksCrossingBetweenTwoLayers","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","n11gp","n12gp","n21gp","n22gp","crossings","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","Array","GraphAdapter","mwDelta","origEvent","originalEvent","wheelDelta","detail","isAutoConnector","closestConnector","resCtr","minimumDistance","MAXINT","indicesOfItems","filterShapeDataItem","dataItem","filterConnectionDataItem","fromConnector","fromX","fromY","toConnector","toX","toY","connectionSelector","textField","model","dataSource","reader","idField","appendTo","kendoDropDownList","dataValueField","dataTextField","toJSON","optionLabel","valuePrimitive","InactiveItem","callbacks","InactiveItemsCollection","cloneDataItem","Model","_defaultId","splitDiagramElements","createModel","ObservableObject","clearField","copyDefaultOptions","mainOptions","translateToOrigin","bbox","preventDefault","defaultButtons","DiagramElement","Connector","Diagram","DiagramToolBar","Editor","PopupEditor","QuadRoot","QuadNode","ShapesQuadTree","geom","Widget","outerWidth","_outerWidth","outerHeight","_outerHeight","HierarchicalDataSource","isPlainObject","NS","CASCADING","CHANGE","CLICK","ERROR","SELECT","NONE","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","DEFAULT_SHAPE_TYPE","DEFAULT_SHAPE_WIDTH","DEFAULT_SHAPE_HEIGHT","DEFAULT_SHAPE_MINWIDTH","DEFAULT_SHAPE_MINHEIGHT","DEFAULT_SHAPE_POSITION","DEFAULT_CONNECTION_BACKGROUND","ABSOLUTE","TRANSFORMED","MOUSEWHEEL_NS","MOBILE_ZOOM_RATE","MOBILE_PAN_DISTANCE","BUTTON_TEMPLATE","CONNECTION_CONTENT_OFFSET","DefaultConnectors","getPosition","imageClass","className","iconClass","defaults","_template","serializable","serialize","json","_content","contentOptions","contentVisual","_contentVisual","_updateContentVisual","_createContentVisual","elementTemplate","_canSelect","shapeId","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","modelOptions","redrawVisual","_isEditable","_redrawVisual","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","containerRect","aligner","contentBounds","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","deselected","_internalSelection","_selectionChanged","sc","deltaAngle","newPosition","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","shapeOptions","boundsChange","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","toConenctor","dataMap","_dataMap","connectionsDataSource","getByUid","uid","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","definition","pts","_resolveConnectors","_refreshPath","sourceConnectors","targetConnectors","_resolveAutoConnectors","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","minNonConflict","_testRoutePoints","router","passRoute","_shapesQuadTree","hitTestRect","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_interactionDefaults","_initCanvas","adornerLayer","_createHandlers","_clipboard","pauseMouseHandlers","_fetchFreshData","_createGlobalToolBar","_createOptionElements","theme","draggable","autoBind","tooltip","connectionDefaults","toolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","view","editor","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","editors","connectionSelectorHandler","cancelEdit","shapeEditors","shapeTemplate","connectionEditors","connectionTemplate","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","userShapeDefaults","mobile","canvasContainer","viewPort","viewport","on","_wheel","_keydown","_userEvents","UserEvents","multiTouch","fastTap","tap","_tap","_dragStart","_drag","_dragEnd","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","_mouseover","_mouseout","_mouseMove","_mouseDown","_mouseUp","_syncHandler","_resizeHandler","onResize","_pauseMouseHandlers","_eventPositions","_meta","_createToolBar","ctrlPressed","focused","keyCode","touch","pageX","pageY","documentToModel","initialCenter","eventArgs","_gesture","_initialCenter","zoomedPoint","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","_panTransform","_updateAdorners","_kendoNode","srcElement","themes","themeName","themeOptions","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","scrollHeight","setOptions","added","removed","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","viewportVector","raw","hideTooltip","_getPan","animatedScrollTo","scrollTo","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","getShapeByModelId","getShapeByModelUid","getConnectionByModelId","getConnectionByModelUid","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_addItem","preventClosing","padding","popupWidth","popupHeight","connectionBounds","singleToolBar","_popup","showAt","one","_normalizePointZoom","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","attributes","_setAttributes","open","newGroup","editTool","spriteCssClass","showText","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","selectedElemens","rotateClockwise","rotateAnticlockwise","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","deffered","Deferred","deferred","resolve","_add","_quadNode","_testRect","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","childIdx","halfWidth","halfHeight","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","plugin"],"mappings":"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","file":"kendo.dataviz.diagram.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/main', ['kendo.core'], f);\n}(function () {\n    (function () {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend;\n        var DEG_TO_RAD = math.PI / 180, MAX_NUM = Number.MAX_VALUE, MIN_NUM = -Number.MAX_VALUE, UNDEFINED = 'undefined';\n        function defined(value) {\n            return typeof value !== UNDEFINED;\n        }\n        function round(value, precision) {\n            var power = pow(precision);\n            return math.round(value * power) / power;\n        }\n        function pow(p) {\n            if (p) {\n                return math.pow(10, p);\n            } else {\n                return 1;\n            }\n        }\n        function limitValue(value, min, max) {\n            return math.max(math.min(value, max), min);\n        }\n        function rad(degrees) {\n            return degrees * DEG_TO_RAD;\n        }\n        function deg(radians) {\n            return radians / DEG_TO_RAD;\n        }\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function valueOrDefault(value, defaultValue) {\n            return defined(value) ? value : defaultValue;\n        }\n        function sqr(value) {\n            return value * value;\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function hashObject(object) {\n            return hashKey(objectKey(object));\n        }\n        var now = Date.now;\n        if (!now) {\n            now = function () {\n                return new Date().getTime();\n            };\n        }\n        function arrayLimits(arr) {\n            var length = arr.length, i, min = MAX_NUM, max = MIN_NUM;\n            for (i = 0; i < length; i++) {\n                max = math.max(max, arr[i]);\n                min = math.min(min, arr[i]);\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        function arrayMin(arr) {\n            return arrayLimits(arr).min;\n        }\n        function arrayMax(arr) {\n            return arrayLimits(arr).max;\n        }\n        function sparseArrayMin(arr) {\n            return sparseArrayLimits(arr).min;\n        }\n        function sparseArrayMax(arr) {\n            return sparseArrayLimits(arr).max;\n        }\n        function sparseArrayLimits(arr) {\n            var min = MAX_NUM, max = MIN_NUM;\n            for (var i = 0, length = arr.length; i < length; i++) {\n                var n = arr[i];\n                if (n !== null && isFinite(n)) {\n                    min = math.min(min, n);\n                    max = math.max(max, n);\n                }\n            }\n            return {\n                min: min === MAX_NUM ? undefined : min,\n                max: max === MIN_NUM ? undefined : max\n            };\n        }\n        function last(array) {\n            if (array) {\n                return array[array.length - 1];\n            }\n        }\n        function append(first, second) {\n            first.push.apply(first, second);\n            return first;\n        }\n        function renderTemplate(text) {\n            return kendo.template(text, {\n                useWithBlock: false,\n                paramName: 'd'\n            });\n        }\n        function renderAttr(name, value) {\n            return defined(value) && value !== null ? ' ' + name + '=\\'' + value + '\\' ' : '';\n        }\n        function renderAllAttr(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                output += renderAttr(attrs[i][0], attrs[i][1]);\n            }\n            return output;\n        }\n        function renderStyle(attrs) {\n            var output = '';\n            for (var i = 0; i < attrs.length; i++) {\n                var value = attrs[i][1];\n                if (defined(value)) {\n                    output += attrs[i][0] + ':' + value + ';';\n                }\n            }\n            if (output !== '') {\n                return output;\n            }\n        }\n        function renderSize(size) {\n            if (typeof size !== 'string') {\n                size += 'px';\n            }\n            return size;\n        }\n        function renderPos(pos) {\n            var result = [];\n            if (pos) {\n                var parts = kendo.toHyphens(pos).split('-');\n                for (var i = 0; i < parts.length; i++) {\n                    result.push('k-pos-' + parts[i]);\n                }\n            }\n            return result.join(' ');\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        function arabicToRoman(n) {\n            var literals = {\n                1: 'i',\n                10: 'x',\n                100: 'c',\n                2: 'ii',\n                20: 'xx',\n                200: 'cc',\n                3: 'iii',\n                30: 'xxx',\n                300: 'ccc',\n                4: 'iv',\n                40: 'xl',\n                400: 'cd',\n                5: 'v',\n                50: 'l',\n                500: 'd',\n                6: 'vi',\n                60: 'lx',\n                600: 'dc',\n                7: 'vii',\n                70: 'lxx',\n                700: 'dcc',\n                8: 'viii',\n                80: 'lxxx',\n                800: 'dccc',\n                9: 'ix',\n                90: 'xc',\n                900: 'cm',\n                1000: 'm'\n            };\n            var values = [\n                1000,\n                900,\n                800,\n                700,\n                600,\n                500,\n                400,\n                300,\n                200,\n                100,\n                90,\n                80,\n                70,\n                60,\n                50,\n                40,\n                30,\n                20,\n                10,\n                9,\n                8,\n                7,\n                6,\n                5,\n                4,\n                3,\n                2,\n                1\n            ];\n            var roman = '';\n            while (n > 0) {\n                if (n < values[0]) {\n                    values.shift();\n                } else {\n                    roman += literals[values[0]];\n                    n -= values[0];\n                }\n            }\n            return roman;\n        }\n        function romanToArabic(r) {\n            r = r.toLowerCase();\n            var digits = {\n                i: 1,\n                v: 5,\n                x: 10,\n                l: 50,\n                c: 100,\n                d: 500,\n                m: 1000\n            };\n            var value = 0, prev = 0;\n            for (var i = 0; i < r.length; ++i) {\n                var v = digits[r.charAt(i)];\n                if (!v) {\n                    return null;\n                }\n                value += v;\n                if (v > prev) {\n                    value -= 2 * prev;\n                }\n                prev = v;\n            }\n            return value;\n        }\n        function memoize(f) {\n            var cache = Object.create(null);\n            return function () {\n                var id = '';\n                for (var i = arguments.length; --i >= 0;) {\n                    id += ':' + arguments[i];\n                }\n                return id in cache ? cache[id] : cache[id] = f.apply(this, arguments);\n            };\n        }\n        function ucs2decode(string) {\n            var output = [], counter = 0, length = string.length, value, extra;\n            while (counter < length) {\n                value = string.charCodeAt(counter++);\n                if (value >= 55296 && value <= 56319 && counter < length) {\n                    extra = string.charCodeAt(counter++);\n                    if ((extra & 64512) == 56320) {\n                        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n                    } else {\n                        output.push(value);\n                        counter--;\n                    }\n                } else {\n                    output.push(value);\n                }\n            }\n            return output;\n        }\n        function ucs2encode(array) {\n            return array.map(function (value) {\n                var output = '';\n                if (value > 65535) {\n                    value -= 65536;\n                    output += String.fromCharCode(value >>> 10 & 1023 | 55296);\n                    value = 56320 | value & 1023;\n                }\n                output += String.fromCharCode(value);\n                return output;\n            }).join('');\n        }\n        function mergeSort(a, cmp) {\n            if (a.length < 2) {\n                return a.slice();\n            }\n            function merge(a, b) {\n                var r = [], ai = 0, bi = 0, i = 0;\n                while (ai < a.length && bi < b.length) {\n                    if (cmp(a[ai], b[bi]) <= 0) {\n                        r[i++] = a[ai++];\n                    } else {\n                        r[i++] = b[bi++];\n                    }\n                }\n                if (ai < a.length) {\n                    r.push.apply(r, a.slice(ai));\n                }\n                if (bi < b.length) {\n                    r.push.apply(r, b.slice(bi));\n                }\n                return r;\n            }\n            return function sort(a) {\n                if (a.length <= 1) {\n                    return a;\n                }\n                var m = Math.floor(a.length / 2);\n                var left = a.slice(0, m);\n                var right = a.slice(m);\n                left = sort(left);\n                right = sort(right);\n                return merge(left, right);\n            }(a);\n        }\n        deepExtend(kendo, {\n            util: {\n                MAX_NUM: MAX_NUM,\n                MIN_NUM: MIN_NUM,\n                append: append,\n                arrayLimits: arrayLimits,\n                arrayMin: arrayMin,\n                arrayMax: arrayMax,\n                defined: defined,\n                deg: deg,\n                hashKey: hashKey,\n                hashObject: hashObject,\n                isNumber: isNumber,\n                isTransparent: isTransparent,\n                last: last,\n                limitValue: limitValue,\n                now: now,\n                objectKey: objectKey,\n                round: round,\n                rad: rad,\n                renderAttr: renderAttr,\n                renderAllAttr: renderAllAttr,\n                renderPos: renderPos,\n                renderSize: renderSize,\n                renderStyle: renderStyle,\n                renderTemplate: renderTemplate,\n                sparseArrayLimits: sparseArrayLimits,\n                sparseArrayMin: sparseArrayMin,\n                sparseArrayMax: sparseArrayMax,\n                sqr: sqr,\n                valueOrDefault: valueOrDefault,\n                romanToArabic: romanToArabic,\n                arabicToRoman: arabicToRoman,\n                memoize: memoize,\n                ucs2encode: ucs2encode,\n                ucs2decode: ucs2decode,\n                mergeSort: mergeSort\n            }\n        });\n        kendo.drawing.util = kendo.util;\n        kendo.dataviz.util = kendo.util;\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/text-metrics', [\n        'kendo.core',\n        'util/main'\n    ], f);\n}(function () {\n    (function ($) {\n        var doc = document, kendo = window.kendo, Class = kendo.Class, util = kendo.util, defined = util.defined;\n        var LRUCache = Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var lru = this, map = lru._map, entry = {\n                        key: key,\n                        value: value\n                    };\n                map[key] = entry;\n                if (!lru._head) {\n                    lru._head = lru._tail = entry;\n                } else {\n                    lru._tail.newer = entry;\n                    entry.older = lru._tail;\n                    lru._tail = entry;\n                }\n                if (lru._length >= lru._size) {\n                    map[lru._head.key] = null;\n                    lru._head = lru._head.newer;\n                    lru._head.older = null;\n                } else {\n                    lru._length++;\n                }\n            },\n            get: function (key) {\n                var lru = this, entry = lru._map[key];\n                if (entry) {\n                    if (entry === lru._head && entry !== lru._tail) {\n                        lru._head = entry.newer;\n                        lru._head.older = null;\n                    }\n                    if (entry !== lru._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = lru._tail;\n                        entry.newer = null;\n                        lru._tail.newer = entry;\n                        lru._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var defaultMeasureBox = $('<div style=\\'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: nowrap!important;\\' />')[0];\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var TextMetrics = Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this._initOptions(options);\n            },\n            options: { baselineMarkerSize: 1 },\n            measure: function (text, style, box) {\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = util.objectKey(style), cacheKey = util.hashKey(text + styleKey), cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = box ? box : defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (defined(value)) {\n                        measureBox.style[key] = value;\n                    }\n                }\n                $(measureBox).text(text);\n                measureBox.appendChild(baselineMarker);\n                doc.body.appendChild(measureBox);\n                if ((text + '').length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                return $('<div class=\\'k-baseline-marker\\' ' + 'style=\\'display: inline-block; vertical-align: baseline;' + 'width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;' + 'overflow: hidden;\\' />')[0];\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        function loadFonts(fonts, callback) {\n            var promises = [];\n            if (fonts.length > 0 && document.fonts) {\n                try {\n                    promises = fonts.map(function (font) {\n                        return document.fonts.load(font);\n                    });\n                } catch (e) {\n                    kendo.logToConsole(e);\n                }\n                Promise.all(promises).then(callback, callback);\n            } else {\n                callback();\n            }\n        }\n        kendo.util.TextMetrics = TextMetrics;\n        kendo.util.LRUCache = LRUCache;\n        kendo.util.loadFonts = loadFonts;\n        kendo.util.measureText = measureText;\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('util/base64', ['util/main'], f);\n}(function () {\n    (function () {\n        var kendo = window.kendo, deepExtend = kendo.deepExtend, fromCharCode = String.fromCharCode;\n        var KEY_STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        function encodeBase64(input) {\n            var output = '';\n            var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n            var i = 0;\n            input = encodeUTF8(input);\n            while (i < input.length) {\n                chr1 = input.charCodeAt(i++);\n                chr2 = input.charCodeAt(i++);\n                chr3 = input.charCodeAt(i++);\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);\n            }\n            return output;\n        }\n        function encodeUTF8(input) {\n            var output = '';\n            for (var i = 0; i < input.length; i++) {\n                var c = input.charCodeAt(i);\n                if (c < 128) {\n                    output += fromCharCode(c);\n                } else if (c < 2048) {\n                    output += fromCharCode(192 | c >>> 6);\n                    output += fromCharCode(128 | c & 63);\n                } else if (c < 65536) {\n                    output += fromCharCode(224 | c >>> 12);\n                    output += fromCharCode(128 | c >>> 6 & 63);\n                    output += fromCharCode(128 | c & 63);\n                }\n            }\n            return output;\n        }\n        deepExtend(kendo.util, {\n            encodeBase64: encodeBase64,\n            encodeUTF8: encodeUTF8\n        });\n    }());\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('mixins/observers', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        var math = Math, kendo = window.kendo, deepExtend = kendo.deepExtend, inArray = $.inArray;\n        var ObserversMixin = {\n            observers: function () {\n                this._observers = this._observers || [];\n                return this._observers;\n            },\n            addObserver: function (element) {\n                if (!this._observers) {\n                    this._observers = [element];\n                } else {\n                    this._observers.push(element);\n                }\n                return this;\n            },\n            removeObserver: function (element) {\n                var observers = this.observers();\n                var index = inArray(element, observers);\n                if (index != -1) {\n                    observers.splice(index, 1);\n                }\n                return this;\n            },\n            trigger: function (methodName, event) {\n                var observers = this._observers;\n                var observer;\n                var idx;\n                if (observers && !this._suspended) {\n                    for (idx = 0; idx < observers.length; idx++) {\n                        observer = observers[idx];\n                        if (observer[methodName]) {\n                            observer[methodName](event);\n                        }\n                    }\n                }\n                return this;\n            },\n            optionsChange: function (e) {\n                e = e || {};\n                e.element = this;\n                this.trigger('optionsChange', e);\n            },\n            geometryChange: function () {\n                this.trigger('geometryChange', { element: this });\n            },\n            suspend: function () {\n                this._suspended = (this._suspended || 0) + 1;\n                return this;\n            },\n            resume: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n                return this;\n            },\n            _observerField: function (field, value) {\n                if (this[field]) {\n                    this[field].removeObserver(this);\n                }\n                this[field] = value;\n                value.addObserver(this);\n            }\n        };\n        deepExtend(kendo, { mixins: { ObserversMixin: ObserversMixin } });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/utils', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram = {}, deepExtend = kendo.deepExtend, isArray = $.isArray, EPSILON = 0.000001;\n        var Utils = {};\n        deepExtend(Utils, {\n            isNearZero: function (num) {\n                return Math.abs(num) < EPSILON;\n            },\n            isDefined: function (obj) {\n                return typeof obj !== 'undefined';\n            },\n            isUndefined: function (obj) {\n                return typeof obj === 'undefined' || obj === null;\n            },\n            isObject: function (obj) {\n                return obj === Object(obj);\n            },\n            has: function (obj, key) {\n                return Object.hasOwnProperty.call(obj, key);\n            },\n            isString: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object String]';\n            },\n            isBoolean: function (obj) {\n                return Object.prototype.toString.call(obj) == '[object Boolean]';\n            },\n            isType: function (obj, type) {\n                return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n            },\n            isNumber: function (obj) {\n                return !isNaN(parseFloat(obj)) && isFinite(obj);\n            },\n            isEmpty: function (obj) {\n                if (obj === null) {\n                    return true;\n                }\n                if (isArray(obj) || Utils.isString(obj)) {\n                    return obj.length === 0;\n                }\n                for (var key in obj) {\n                    if (Utils.has(obj, key)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            simpleExtend: function (destination, source) {\n                if (!Utils.isObject(source)) {\n                    return;\n                }\n                for (var name in source) {\n                    destination[name] = source[name];\n                }\n            },\n            initArray: function createIdArray(size, value) {\n                var array = [];\n                for (var i = 0; i < size; ++i) {\n                    array[i] = value;\n                }\n                return array;\n            },\n            serializePoints: function (points) {\n                var res = [];\n                for (var i = 0; i < points.length; i++) {\n                    var p = points[i];\n                    res.push(p.x + ';' + p.y);\n                }\n                return res.join(';');\n            },\n            deserializePoints: function (s) {\n                var v = s.split(';'), points = [];\n                if (v.length % 2 !== 0) {\n                    throw 'Not an array of points.';\n                }\n                for (var i = 0; i < v.length; i += 2) {\n                    points.push(new diagram.Point(parseInt(v[i], 10), parseInt(v[i + 1], 10)));\n                }\n                return points;\n            },\n            randomInteger: function (lower, upper) {\n                return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n            },\n            DFT: function (el, func) {\n                func(el);\n                if (el.childNodes) {\n                    for (var i = 0; i < el.childNodes.length; i++) {\n                        var item = el.childNodes[i];\n                        this.DFT(item, func);\n                    }\n                }\n            },\n            getMatrixAngle: function (m) {\n                if (m === null || m.d === 0) {\n                    return 0;\n                }\n                return Math.atan2(m.b, m.d) * 180 / Math.PI;\n            },\n            getMatrixScaling: function (m) {\n                var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n                var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n                return [\n                    sX,\n                    sY\n                ];\n            }\n        });\n        function Range(start, stop, step) {\n            if (typeof start == 'undefined' || typeof stop == 'undefined') {\n                return [];\n            }\n            if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n                throw 'The sign of the increment should allow to reach the stop-value.';\n            }\n            step = step || 1;\n            start = start || 0;\n            stop = stop || start;\n            if ((stop - start) / step === Infinity) {\n                throw 'Infinite range defined.';\n            }\n            var range = [], i = -1, j;\n            function rangeIntegerScale(x) {\n                var k = 1;\n                while (x * k % 1) {\n                    k *= 10;\n                }\n                return k;\n            }\n            var k = rangeIntegerScale(Math.abs(step));\n            start *= k;\n            stop *= k;\n            step *= k;\n            if (start > stop && step > 0) {\n                step = -step;\n            }\n            if (step < 0) {\n                while ((j = start + step * ++i) >= stop) {\n                    range.push(j / k);\n                }\n            } else {\n                while ((j = start + step * ++i) <= stop) {\n                    range.push(j / k);\n                }\n            }\n            return range;\n        }\n        function findRadian(start, end) {\n            if (start == end) {\n                return 0;\n            }\n            var sngXComp = end.x - start.x, sngYComp = start.y - end.y, atan = Math.atan(sngXComp / sngYComp);\n            if (sngYComp >= 0) {\n                return sngXComp < 0 ? atan + 2 * Math.PI : atan;\n            }\n            return atan + Math.PI;\n        }\n        Utils.sign = function (number) {\n            return number ? number < 0 ? -1 : 1 : 0;\n        };\n        Utils.findAngle = function (center, end) {\n            return findRadian(center, end) * 180 / Math.PI;\n        };\n        Utils.forEach = function (arr, iterator, thisRef) {\n            for (var i = 0; i < arr.length; i++) {\n                iterator.call(thisRef, arr[i], i, arr);\n            }\n        };\n        Utils.any = function (arr, predicate) {\n            for (var i = 0; i < arr.length; ++i) {\n                if (predicate(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        Utils.remove = function (arr, what) {\n            var ax;\n            while ((ax = Utils.indexOf(arr, what)) !== -1) {\n                arr.splice(ax, 1);\n            }\n            return arr;\n        };\n        Utils.contains = function (arr, obj) {\n            return Utils.indexOf(arr, obj) !== -1;\n        };\n        Utils.indexOf = function (arr, what) {\n            return $.inArray(what, arr);\n        };\n        Utils.fold = function (list, iterator, acc, context) {\n            var initial = arguments.length > 2;\n            for (var i = 0; i < list.length; i++) {\n                var value = list[i];\n                if (!initial) {\n                    acc = value;\n                    initial = true;\n                } else {\n                    acc = iterator.call(context, acc, value, i, list);\n                }\n            }\n            if (!initial) {\n                throw 'Reduce of empty array with no initial value';\n            }\n            return acc;\n        };\n        Utils.find = function (arr, iterator, context) {\n            var result;\n            Utils.any(arr, function (value, index, list) {\n                if (iterator.call(context, value, index, list)) {\n                    result = value;\n                    return true;\n                }\n                return false;\n            });\n            return result;\n        };\n        Utils.first = function (arr, constraint, context) {\n            if (arr.length === 0) {\n                return null;\n            }\n            if (Utils.isUndefined(constraint)) {\n                return arr[0];\n            }\n            return Utils.find(arr, constraint, context);\n        };\n        Utils.insert = function (arr, element, position) {\n            arr.splice(position, 0, element);\n            return arr;\n        };\n        Utils.all = function (arr, iterator, context) {\n            var result = true;\n            var value;\n            for (var i = 0; i < arr.length; i++) {\n                value = arr[i];\n                result = result && iterator.call(context, value, i, arr);\n                if (!result) {\n                    break;\n                }\n            }\n            return result;\n        };\n        Utils.clear = function (arr) {\n            arr.splice(0, arr.length);\n        };\n        Utils.bisort = function (a, b, sortfunc) {\n            if (Utils.isUndefined(a)) {\n                throw 'First array is not specified.';\n            }\n            if (Utils.isUndefined(b)) {\n                throw 'Second array is not specified.';\n            }\n            if (a.length != b.length) {\n                throw 'The two arrays should have equal length';\n            }\n            var all = [], i;\n            for (i = 0; i < a.length; i++) {\n                all.push({\n                    'x': a[i],\n                    'y': b[i]\n                });\n            }\n            if (Utils.isUndefined(sortfunc)) {\n                all.sort(function (m, n) {\n                    return m.x - n.x;\n                });\n            } else {\n                all.sort(function (m, n) {\n                    return sortfunc(m.x, n.x);\n                });\n            }\n            Utils.clear(a);\n            Utils.clear(b);\n            for (i = 0; i < all.length; i++) {\n                a.push(all[i].x);\n                b.push(all[i].y);\n            }\n        };\n        Utils.addRange = function (arr, range) {\n            arr.push.apply(arr, range);\n        };\n        var Easing = {\n            easeInOut: function (pos) {\n                return -Math.cos(pos * Math.PI) / 2 + 0.5;\n            }\n        };\n        var Ticker = kendo.Class.extend({\n            init: function () {\n                this.adapters = [];\n                this.target = 0;\n                this.tick = 0;\n                this.interval = 20;\n                this.duration = 800;\n                this.lastTime = null;\n                this.handlers = [];\n                var _this = this;\n                this.transition = Easing.easeInOut;\n                this.timerDelegate = function () {\n                    _this.onTimerEvent();\n                };\n            },\n            addAdapter: function (a) {\n                this.adapters.push(a);\n            },\n            onComplete: function (handler) {\n                this.handlers.push(handler);\n            },\n            removeHandler: function (handler) {\n                this.handlers = $.grep(this.handlers, function (h) {\n                    return h !== handler;\n                });\n            },\n            trigger: function () {\n                var _this = this;\n                if (this.handlers) {\n                    Utils.forEach(this.handlers, function (h) {\n                        return h.call(_this.caller !== null ? _this.caller : _this);\n                    });\n                }\n            },\n            onStep: function () {\n            },\n            seekTo: function (to) {\n                this.seekFromTo(this.tick, to);\n            },\n            seekFromTo: function (from, to) {\n                this.target = Math.max(0, Math.min(1, to));\n                this.tick = Math.max(0, Math.min(1, from));\n                this.lastTime = new Date().getTime();\n                if (!this.intervalId) {\n                    this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n                }\n            },\n            stop: function () {\n                if (this.intervalId) {\n                    window.clearInterval(this.intervalId);\n                    this.intervalId = null;\n                    this.trigger();\n                }\n            },\n            play: function (origin) {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                if (origin !== null) {\n                    this.caller = origin;\n                }\n                this.initState();\n                this.seekFromTo(0, 1);\n            },\n            reverse: function () {\n                this.seekFromTo(1, 0);\n            },\n            initState: function () {\n                if (this.adapters.length === 0) {\n                    return;\n                }\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].initState();\n                }\n            },\n            propagate: function () {\n                var value = this.transition(this.tick);\n                for (var i = 0; i < this.adapters.length; i++) {\n                    this.adapters[i].update(value);\n                }\n            },\n            onTimerEvent: function () {\n                var now = new Date().getTime();\n                var timePassed = now - this.lastTime;\n                this.lastTime = now;\n                var movement = timePassed / this.duration * (this.tick < this.target ? 1 : -1);\n                if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                    this.tick = this.target;\n                } else {\n                    this.tick += movement;\n                }\n                try {\n                    this.propagate();\n                } finally {\n                    this.onStep.call(this);\n                    if (this.target == this.tick) {\n                        this.stop();\n                    }\n                }\n            }\n        });\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Utils: Utils,\n            Range: Range,\n            Ticker: Ticker\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/math', [\n        'dataviz/diagram/utils',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, dataviz = kendo.dataviz, Utils = diagram.Utils, Point = dataviz.Point2D, isFunction = kendo.isFunction, contains = Utils.contains, map = $.map;\n        var HITTESTAREA = 3, EPSILON = 0.000001;\n        deepExtend(Point.fn, {\n            plus: function (p) {\n                return new Point(this.x + p.x, this.y + p.y);\n            },\n            minus: function (p) {\n                return new Point(this.x - p.x, this.y - p.y);\n            },\n            offset: function (value) {\n                return new Point(this.x - value, this.y - value);\n            },\n            times: function (s) {\n                return new Point(this.x * s, this.y * s);\n            },\n            normalize: function () {\n                if (this.length() === 0) {\n                    return new Point();\n                }\n                return this.times(1 / this.length());\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            toString: function () {\n                return '(' + this.x + ',' + this.y + ')';\n            },\n            lengthSquared: function () {\n                return this.x * this.x + this.y * this.y;\n            },\n            middleOf: function MiddleOf(p, q) {\n                return new Point(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n            },\n            toPolar: function (useDegrees) {\n                var factor = 1;\n                if (useDegrees) {\n                    factor = 180 / Math.PI;\n                }\n                var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n                var halfpi = Math.PI / 2;\n                var len = this.length();\n                if (this.x === 0) {\n                    if (this.y === 0) {\n                        return new Polar(0, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * halfpi);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * 3 * halfpi);\n                    }\n                } else if (this.x > 0) {\n                    if (this.y === 0) {\n                        return new Polar(len, 0);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * a);\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (4 * halfpi - a));\n                    }\n                } else {\n                    if (this.y === 0) {\n                        return new Polar(len, 2 * halfpi);\n                    }\n                    if (this.y > 0) {\n                        return new Polar(len, factor * (2 * halfpi - a));\n                    }\n                    if (this.y < 0) {\n                        return new Polar(len, factor * (2 * halfpi + a));\n                    }\n                }\n            },\n            isOnLine: function (from, to) {\n                if (from.x > to.x) {\n                    var temp = to;\n                    to = from;\n                    from = temp;\n                }\n                var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA), r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n                if (r1.union(r2).contains(this)) {\n                    if (from.x === to.x || from.y === to.y) {\n                        return true;\n                    } else if (from.y < to.y) {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - r1.y) / (r2.y - r1.y);\n                    } else {\n                        o1 = r1.x + (r2.x - r1.x) * (this.y - r1.y) / (r2.y - r1.y);\n                        u1 = r1.x + r1.width + (r2.x + r2.width - (r1.x + r1.width)) * (this.y - (r1.y + r1.height)) / (r2.y + r2.height - (r1.y + r1.height));\n                    }\n                    return this.x > o1 && this.x < u1;\n                }\n                return false;\n            }\n        });\n        deepExtend(Point, {\n            parse: function (str) {\n                var tempStr = str.slice(1, str.length - 1), xy = tempStr.split(','), x = parseInt(xy[0], 10), y = parseInt(xy[1], 10);\n                if (!isNaN(x) && !isNaN(y)) {\n                    return new Point(x, y);\n                }\n            }\n        });\n        var PathDefiner = Class.extend({\n            init: function (p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        });\n        var Rect = Class.extend({\n            init: function (x, y, width, height) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.width = width || 0;\n                this.height = height || 0;\n            },\n            contains: function (point) {\n                return point.x >= this.x && point.x <= this.x + this.width && point.y >= this.y && point.y <= this.y + this.height;\n            },\n            inflate: function (dx, dy) {\n                if (dy === undefined) {\n                    dy = dx;\n                }\n                this.x -= dx;\n                this.y -= dy;\n                this.width += 2 * dx + 1;\n                this.height += 2 * dy + 1;\n                return this;\n            },\n            offset: function (dx, dy) {\n                var x = dx, y = dy;\n                if (dx instanceof Point) {\n                    x = dx.x;\n                    y = dx.y;\n                }\n                this.x += x;\n                this.y += y;\n                return this;\n            },\n            union: function (r) {\n                var x1 = Math.min(this.x, r.x);\n                var y1 = Math.min(this.y, r.y);\n                var x2 = Math.max(this.x + this.width, r.x + r.width);\n                var y2 = Math.max(this.y + this.height, r.y + r.height);\n                return new Rect(x1, y1, x2 - x1, y2 - y1);\n            },\n            center: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height / 2);\n            },\n            top: function () {\n                return new Point(this.x + this.width / 2, this.y);\n            },\n            right: function () {\n                return new Point(this.x + this.width, this.y + this.height / 2);\n            },\n            bottom: function () {\n                return new Point(this.x + this.width / 2, this.y + this.height);\n            },\n            left: function () {\n                return new Point(this.x, this.y + this.height / 2);\n            },\n            topLeft: function () {\n                return new Point(this.x, this.y);\n            },\n            topRight: function () {\n                return new Point(this.x + this.width, this.y);\n            },\n            bottomLeft: function () {\n                return new Point(this.x, this.y + this.height);\n            },\n            bottomRight: function () {\n                return new Point(this.x + this.width, this.y + this.height);\n            },\n            clone: function () {\n                return new Rect(this.x, this.y, this.width, this.height);\n            },\n            isEmpty: function () {\n                return !this.width && !this.height;\n            },\n            equals: function (rect) {\n                return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n            },\n            rotatedBounds: function (angle) {\n                var rect = this.clone(), points = this.rotatedPoints(angle), tl = points[0], tr = points[1], br = points[2], bl = points[3];\n                rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n                rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n                rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n                rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n                return rect;\n            },\n            rotatedPoints: function (angle) {\n                var rect = this, c = rect.center(), br = rect.bottomRight().rotate(c, 360 - angle), tl = rect.topLeft().rotate(c, 360 - angle), tr = rect.topRight().rotate(c, 360 - angle), bl = rect.bottomLeft().rotate(c, 360 - angle);\n                return [\n                    tl,\n                    tr,\n                    br,\n                    bl\n                ];\n            },\n            toString: function (delimiter) {\n                delimiter = delimiter || ' ';\n                return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n            },\n            scale: function (scaleX, scaleY, staicPoint, adornerCenter, angle) {\n                var tl = this.topLeft();\n                var thisCenter = this.center();\n                tl.rotate(thisCenter, 360 - angle).rotate(adornerCenter, angle);\n                var delta = staicPoint.minus(tl);\n                var scaled = new Point(delta.x * scaleX, delta.y * scaleY);\n                var position = delta.minus(scaled);\n                tl = tl.plus(position);\n                tl.rotate(adornerCenter, 360 - angle).rotate(thisCenter, angle);\n                this.x = tl.x;\n                this.y = tl.y;\n                this.width *= scaleX;\n                this.height *= scaleY;\n            },\n            zoom: function (zoom) {\n                this.x *= zoom;\n                this.y *= zoom;\n                this.width *= zoom;\n                this.height *= zoom;\n                return this;\n            },\n            overlaps: function (rect) {\n                var bottomRight = this.bottomRight();\n                var rectBottomRight = rect.bottomRight();\n                var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y || rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n                return overlaps;\n            }\n        });\n        var Size = Class.extend({\n            init: function (width, height) {\n                this.width = width;\n                this.height = height;\n            }\n        });\n        Size.prototype.Empty = new Size(0, 0);\n        Rect.toRect = function (rect) {\n            if (!(rect instanceof Rect)) {\n                rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n            }\n            return rect;\n        };\n        Rect.empty = function () {\n            return new Rect(0, 0, 0, 0);\n        };\n        Rect.fromPoints = function (p, q) {\n            if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n                throw 'Some values are NaN.';\n            }\n            return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n        };\n        function isNearZero(num) {\n            return Math.abs(num) < EPSILON;\n        }\n        function intersectLine(start1, end1, start2, end2, isSegment) {\n            var tangensdiff = (end1.x - start1.x) * (end2.y - start2.y) - (end1.y - start1.y) * (end2.x - start2.x);\n            if (isNearZero(tangensdiff)) {\n                return;\n            }\n            var num1 = (start1.y - start2.y) * (end2.x - start2.x) - (start1.x - start2.x) * (end2.y - start2.y);\n            var num2 = (start1.y - start2.y) * (end1.x - start1.x) - (start1.x - start2.x) * (end1.y - start1.y);\n            var r = num1 / tangensdiff;\n            var s = num2 / tangensdiff;\n            if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n                return;\n            }\n            return new Point(start1.x + r * (end1.x - start1.x), start1.y + r * (end1.y - start1.y));\n        }\n        var Intersect = {\n            lines: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2);\n            },\n            segments: function (start1, end1, start2, end2) {\n                return intersectLine(start1, end1, start2, end2, true);\n            },\n            rectWithLine: function (rect, start, end) {\n                return Intersect.segments(start, end, rect.topLeft(), rect.topRight()) || Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) || Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) || Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n            },\n            rects: function (rect1, rect2, angle) {\n                var tl = rect2.topLeft(), tr = rect2.topRight(), bl = rect2.bottomLeft(), br = rect2.bottomRight();\n                var center = rect2.center();\n                if (angle) {\n                    tl = tl.rotate(center, angle);\n                    tr = tr.rotate(center, angle);\n                    bl = bl.rotate(center, angle);\n                    br = br.rotate(center, angle);\n                }\n                var intersect = rect1.contains(tl) || rect1.contains(tr) || rect1.contains(bl) || rect1.contains(br) || Intersect.rectWithLine(rect1, tl, tr) || Intersect.rectWithLine(rect1, tl, bl) || Intersect.rectWithLine(rect1, tr, br) || Intersect.rectWithLine(rect1, bl, br);\n                if (!intersect) {\n                    tl = rect1.topLeft();\n                    tr = rect1.topRight();\n                    bl = rect1.bottomLeft();\n                    br = rect1.bottomRight();\n                    if (angle) {\n                        var reverseAngle = 360 - angle;\n                        tl = tl.rotate(center, reverseAngle);\n                        tr = tr.rotate(center, reverseAngle);\n                        bl = bl.rotate(center, reverseAngle);\n                        br = br.rotate(center, reverseAngle);\n                    }\n                    intersect = rect2.contains(tl) || rect2.contains(tr) || rect2.contains(bl) || rect2.contains(br);\n                }\n                return intersect;\n            }\n        };\n        var RectAlign = Class.extend({\n            init: function (container) {\n                this.container = Rect.toRect(container);\n            },\n            align: function (content, alignment) {\n                var alignValues = alignment.toLowerCase().split(' ');\n                for (var i = 0; i < alignValues.length; i++) {\n                    content = this._singleAlign(content, alignValues[i]);\n                }\n                return content;\n            },\n            _singleAlign: function (content, alignment) {\n                if (isFunction(this[alignment])) {\n                    return this[alignment](content);\n                } else {\n                    return content;\n                }\n            },\n            left: function (content) {\n                return this._align(content, this._left);\n            },\n            center: function (content) {\n                return this._align(content, this._center);\n            },\n            right: function (content) {\n                return this._align(content, this._right);\n            },\n            stretch: function (content) {\n                return this._align(content, this._stretch);\n            },\n            top: function (content) {\n                return this._align(content, this._top);\n            },\n            middle: function (content) {\n                return this._align(content, this._middle);\n            },\n            bottom: function (content) {\n                return this._align(content, this._bottom);\n            },\n            _left: function (container, content) {\n                content.x = container.x;\n            },\n            _center: function (container, content) {\n                content.x = (container.width - content.width) / 2 || 0;\n            },\n            _right: function (container, content) {\n                content.x = container.width - content.width;\n            },\n            _top: function (container, content) {\n                content.y = container.y;\n            },\n            _middle: function (container, content) {\n                content.y = (container.height - content.height) / 2 || 0;\n            },\n            _bottom: function (container, content) {\n                content.y = container.height - content.height;\n            },\n            _stretch: function (container, content) {\n                content.x = 0;\n                content.y = 0;\n                content.height = container.height;\n                content.width = container.width;\n            },\n            _align: function (content, alignCalc) {\n                content = Rect.toRect(content);\n                alignCalc(this.container, content);\n                return content;\n            }\n        });\n        var Polar = Class.extend({\n            init: function (r, a) {\n                this.r = r;\n                this.angle = a;\n            }\n        });\n        var Matrix = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            plus: function (m) {\n                this.a += m.a;\n                this.b += m.b;\n                this.c += m.c;\n                this.d += m.d;\n                this.e += m.e;\n                this.f += m.f;\n            },\n            minus: function (m) {\n                this.a -= m.a;\n                this.b -= m.b;\n                this.c -= m.c;\n                this.d -= m.d;\n                this.e -= m.e;\n                this.f -= m.f;\n            },\n            times: function (m) {\n                return new Matrix(this.a * m.a + this.c * m.b, this.b * m.a + this.d * m.b, this.a * m.c + this.c * m.d, this.b * m.c + this.d * m.d, this.a * m.e + this.c * m.f + this.e, this.b * m.e + this.d * m.f + this.f);\n            },\n            apply: function (p) {\n                return new Point(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n            },\n            applyRect: function (r) {\n                return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n            },\n            toString: function () {\n                return 'matrix(' + this.a + ' ' + this.b + ' ' + this.c + ' ' + this.d + ' ' + this.e + ' ' + this.f + ')';\n            }\n        });\n        deepExtend(Matrix, {\n            fromSVGMatrix: function (vm) {\n                var m = new Matrix();\n                m.a = vm.a;\n                m.b = vm.b;\n                m.c = vm.c;\n                m.d = vm.d;\n                m.e = vm.e;\n                m.f = vm.f;\n                return m;\n            },\n            fromMatrixVector: function (v) {\n                var m = new Matrix();\n                m.a = v.a;\n                m.b = v.b;\n                m.c = v.c;\n                m.d = v.d;\n                m.e = v.e;\n                m.f = v.f;\n                return m;\n            },\n            fromList: function (v) {\n                if (v.length !== 6) {\n                    throw 'The given list should consist of six elements.';\n                }\n                var m = new Matrix();\n                m.a = v[0];\n                m.b = v[1];\n                m.c = v[2];\n                m.d = v[3];\n                m.e = v[4];\n                m.f = v[5];\n                return m;\n            },\n            translation: function (x, y) {\n                var m = new Matrix();\n                m.a = 1;\n                m.b = 0;\n                m.c = 0;\n                m.d = 1;\n                m.e = x;\n                m.f = y;\n                return m;\n            },\n            unit: function () {\n                return new Matrix(1, 0, 0, 1, 0, 0);\n            },\n            rotation: function (angle, x, y) {\n                var m = new Matrix();\n                m.a = Math.cos(angle * Math.PI / 180);\n                m.b = Math.sin(angle * Math.PI / 180);\n                m.c = -m.b;\n                m.d = m.a;\n                m.e = x - x * m.a + y * m.b || 0;\n                m.f = y - y * m.a - x * m.b || 0;\n                return m;\n            },\n            scaling: function (scaleX, scaleY) {\n                var m = new Matrix();\n                m.a = scaleX;\n                m.b = 0;\n                m.c = 0;\n                m.d = scaleY;\n                m.e = 0;\n                m.f = 0;\n                return m;\n            },\n            parse: function (v) {\n                var parts, nums;\n                if (v) {\n                    v = v.trim();\n                    if (v.slice(0, 6).toLowerCase() === 'matrix') {\n                        nums = v.slice(7, v.length - 1).trim();\n                        parts = nums.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                        parts = nums.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.slice(0, 1) === '(' && v.slice(v.length - 1) === ')') {\n                        v = v.substr(1, v.length - 1);\n                    }\n                    if (v.indexOf(',') > 0) {\n                        parts = v.split(',');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                    if (v.indexOf(' ') > 0) {\n                        parts = v.split(' ');\n                        if (parts.length === 6) {\n                            return Matrix.fromList(map(parts, function (p) {\n                                return parseFloat(p);\n                            }));\n                        }\n                    }\n                }\n                return parts;\n            }\n        });\n        var MatrixVector = Class.extend({\n            init: function (a, b, c, d, e, f) {\n                this.a = a || 0;\n                this.b = b || 0;\n                this.c = c || 0;\n                this.d = d || 0;\n                this.e = e || 0;\n                this.f = f || 0;\n            },\n            fromMatrix: function FromMatrix(m) {\n                var v = new MatrixVector();\n                v.a = m.a;\n                v.b = m.b;\n                v.c = m.c;\n                v.d = m.d;\n                v.e = m.e;\n                v.f = m.f;\n                return v;\n            }\n        });\n        function normalVariable(mean, deviation) {\n            var x, y, r;\n            do {\n                x = Math.random() * 2 - 1;\n                y = Math.random() * 2 - 1;\n                r = x * x + y * y;\n            } while (!r || r > 1);\n            return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n        }\n        function randomId(length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            var result = '';\n            var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n            for (var i = length; i > 0; --i) {\n                result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n            }\n            return result;\n        }\n        var Geometry = {\n            _distanceToLineSquared: function (p, a, b) {\n                function d2(pt1, pt2) {\n                    return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n                }\n                if (a === b) {\n                    return d2(p, a);\n                }\n                var vx = b.x - a.x, vy = b.y - a.y, dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n                if (dot < 0) {\n                    return d2(a, p);\n                }\n                dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n                if (dot < 0) {\n                    return d2(b, p);\n                }\n                dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n                return dot * dot / (vx * vx + vy * vy);\n            },\n            distanceToLine: function (p, a, b) {\n                return Math.sqrt(this._distanceToLineSquared(p, a, b));\n            },\n            distanceToPolyline: function (p, points) {\n                var minimum = Number.MAX_VALUE;\n                if (Utils.isUndefined(points) || points.length === 0) {\n                    return Number.MAX_VALUE;\n                }\n                for (var s = 0; s < points.length - 1; s++) {\n                    var p1 = points[s];\n                    var p2 = points[s + 1];\n                    var d = this._distanceToLineSquared(p, p1, p2);\n                    if (d < minimum) {\n                        minimum = d;\n                    }\n                }\n                return Math.sqrt(minimum);\n            }\n        };\n        var HashTable = kendo.Class.extend({\n            init: function () {\n                this._buckets = [];\n                this.length = 0;\n            },\n            add: function (key, value) {\n                var obj = this._createGetBucket(key);\n                if (Utils.isDefined(value)) {\n                    obj.value = value;\n                }\n                return obj;\n            },\n            get: function (key) {\n                if (this._bucketExists(key)) {\n                    return this._createGetBucket(key);\n                }\n                return null;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            containsKey: function (key) {\n                return this._bucketExists(key);\n            },\n            remove: function (key) {\n                if (this._bucketExists(key)) {\n                    var hashId = this._hash(key);\n                    delete this._buckets[hashId];\n                    this.length--;\n                    return key;\n                }\n            },\n            forEach: function (func) {\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    func(bucket);\n                }\n            },\n            clone: function () {\n                var ht = new HashTable();\n                var hashes = this._hashes();\n                for (var i = 0, len = hashes.length; i < len; i++) {\n                    var hash = hashes[i];\n                    var bucket = this._buckets[hash];\n                    if (Utils.isUndefined(bucket)) {\n                        continue;\n                    }\n                    ht.add(bucket.key, bucket.value);\n                }\n                return ht;\n            },\n            _hashes: function () {\n                var hashes = [];\n                for (var hash in this._buckets) {\n                    if (this._buckets.hasOwnProperty(hash)) {\n                        hashes.push(hash);\n                    }\n                }\n                return hashes;\n            },\n            _bucketExists: function (key) {\n                var hashId = this._hash(key);\n                return Utils.isDefined(this._buckets[hashId]);\n            },\n            _createGetBucket: function (key) {\n                var hashId = this._hash(key);\n                var bucket = this._buckets[hashId];\n                if (Utils.isUndefined(bucket)) {\n                    bucket = { key: key };\n                    this._buckets[hashId] = bucket;\n                    this.length++;\n                }\n                return bucket;\n            },\n            _hash: function (key) {\n                if (Utils.isNumber(key)) {\n                    return key;\n                }\n                if (Utils.isString(key)) {\n                    return this._hashString(key);\n                }\n                if (Utils.isObject(key)) {\n                    return this._objectHashId(key);\n                }\n                throw 'Unsupported key type.';\n            },\n            _hashString: function (s) {\n                var result = 0;\n                if (s.length === 0) {\n                    return result;\n                }\n                for (var i = 0; i < s.length; i++) {\n                    var ch = s.charCodeAt(i);\n                    result = result * 32 - result + ch;\n                }\n                return result;\n            },\n            _objectHashId: function (key) {\n                var id = key._hashId;\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                    key._hashId = id;\n                }\n                return id;\n            }\n        });\n        var Dictionary = kendo.Observable.extend({\n            init: function (dictionary) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(dictionary)) {\n                    if ($.isArray(dictionary)) {\n                        for (var i = 0; i < dictionary.length; i++) {\n                            this.add(dictionary[i]);\n                        }\n                    } else {\n                        dictionary.forEach(function (k, v) {\n                            this.add(k, v);\n                        }, this);\n                    }\n                }\n            },\n            add: function (key, value) {\n                var entry = this._hashTable.get(key);\n                if (!entry) {\n                    entry = this._hashTable.add(key);\n                    this.length++;\n                    this.trigger('changed');\n                }\n                entry.value = value;\n            },\n            set: function (key, value) {\n                this.add(key, value);\n            },\n            get: function (key) {\n                var entry = this._hashTable.get(key);\n                if (entry) {\n                    return entry.value;\n                }\n                throw new Error('Cannot find key ' + key);\n            },\n            containsKey: function (key) {\n                return this._hashTable.containsKey(key);\n            },\n            remove: function (key) {\n                if (this.containsKey(key)) {\n                    this.trigger('changed');\n                    this.length--;\n                    return this._hashTable.remove(key);\n                }\n            },\n            forEach: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key, entry.value);\n                });\n            },\n            forEachValue: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.value);\n                });\n            },\n            forEachKey: function (func, thisRef) {\n                this._hashTable.forEach(function (entry) {\n                    func.call(thisRef, entry.key);\n                });\n            },\n            keys: function () {\n                var keys = [];\n                this.forEachKey(function (key) {\n                    keys.push(key);\n                });\n                return keys;\n            }\n        });\n        var Queue = kendo.Class.extend({\n            init: function () {\n                this._tail = null;\n                this._head = null;\n                this.length = 0;\n            },\n            enqueue: function (value) {\n                var entry = {\n                    value: value,\n                    next: null\n                };\n                if (!this._head) {\n                    this._head = entry;\n                    this._tail = this._head;\n                } else {\n                    this._tail.next = entry;\n                    this._tail = this._tail.next;\n                }\n                this.length++;\n            },\n            dequeue: function () {\n                if (this.length < 1) {\n                    throw new Error('The queue is empty.');\n                }\n                var value = this._head.value;\n                this._head = this._head.next;\n                this.length--;\n                return value;\n            },\n            contains: function (item) {\n                var current = this._head;\n                while (current) {\n                    if (current.value === item) {\n                        return true;\n                    }\n                    current = current.next;\n                }\n                return false;\n            }\n        });\n        var Set = kendo.Observable.extend({\n            init: function (resource) {\n                var that = this;\n                kendo.Observable.fn.init.call(that);\n                this._hashTable = new HashTable();\n                this.length = 0;\n                if (Utils.isDefined(resource)) {\n                    if (resource instanceof HashTable) {\n                        resource.forEach(function (d) {\n                            this.add(d);\n                        });\n                    } else if (resource instanceof Dictionary) {\n                        resource.forEach(function (k, v) {\n                            this.add({\n                                key: k,\n                                value: v\n                            });\n                        }, this);\n                    }\n                }\n            },\n            contains: function (item) {\n                return this._hashTable.containsKey(item);\n            },\n            add: function (item) {\n                var entry = this._hashTable.get(item);\n                if (!entry) {\n                    this._hashTable.add(item, item);\n                    this.length++;\n                    this.trigger('changed');\n                }\n            },\n            get: function (item) {\n                if (this.contains(item)) {\n                    return this._hashTable.get(item).value;\n                } else {\n                    return null;\n                }\n            },\n            hash: function (item) {\n                return this._hashTable._hash(item);\n            },\n            remove: function (item) {\n                if (this.contains(item)) {\n                    this._hashTable.remove(item);\n                    this.length--;\n                    this.trigger('changed');\n                }\n            },\n            forEach: function (func, context) {\n                this._hashTable.forEach(function (kv) {\n                    func(kv.value);\n                }, context);\n            },\n            toArray: function () {\n                var r = [];\n                this.forEach(function (d) {\n                    r.push(d);\n                });\n                return r;\n            }\n        });\n        var Node = kendo.Class.extend({\n            init: function (id, shape) {\n                this.links = [];\n                this.outgoing = [];\n                this.incoming = [];\n                this.weight = 1;\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(shape)) {\n                    this.associatedShape = shape;\n                    var b = shape.bounds();\n                    this.width = b.width;\n                    this.height = b.height;\n                    this.x = b.x;\n                    this.y = b.y;\n                } else {\n                    this.associatedShape = null;\n                }\n                this.data = null;\n                this.type = 'Node';\n                this.shortForm = 'Node \\'' + this.id + '\\'';\n                this.isVirtual = false;\n            },\n            isIsolated: function () {\n                return Utils.isEmpty(this.links);\n            },\n            bounds: function (r) {\n                if (!Utils.isDefined(r)) {\n                    return new diagram.Rect(this.x, this.y, this.width, this.height);\n                }\n                this.x = r.x;\n                this.y = r.y;\n                this.width = r.width;\n                this.height = r.height;\n            },\n            isLinkedTo: function (node) {\n                var that = this;\n                return Utils.any(that.links, function (link) {\n                    return link.getComplement(that) === node;\n                });\n            },\n            getChildren: function () {\n                if (this.outgoing.length === 0) {\n                    return [];\n                }\n                var children = [];\n                for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                    var link = this.outgoing[i];\n                    children.push(link.getComplement(this));\n                }\n                return children;\n            },\n            getParents: function () {\n                if (this.incoming.length === 0) {\n                    return [];\n                }\n                var parents = [];\n                for (var i = 0, len = this.incoming.length; i < len; i++) {\n                    var link = this.incoming[i];\n                    parents.push(link.getComplement(this));\n                }\n                return parents;\n            },\n            clone: function () {\n                var copy = new Node();\n                if (Utils.isDefined(this.weight)) {\n                    copy.weight = this.weight;\n                }\n                if (Utils.isDefined(this.balance)) {\n                    copy.balance = this.balance;\n                }\n                if (Utils.isDefined(this.owner)) {\n                    copy.owner = this.owner;\n                }\n                copy.associatedShape = this.associatedShape;\n                copy.x = this.x;\n                copy.y = this.y;\n                copy.width = this.width;\n                copy.height = this.height;\n                return copy;\n            },\n            adjacentTo: function (node) {\n                return this.isLinkedTo(node) !== null;\n            },\n            removeLink: function (link) {\n                if (link.source === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.outgoing, link);\n                    link.source = null;\n                }\n                if (link.target === this) {\n                    Utils.remove(this.links, link);\n                    Utils.remove(this.incoming, link);\n                    link.target = null;\n                }\n            },\n            hasLinkTo: function (node) {\n                return Utils.any(this.outgoing, function (link) {\n                    return link.target === node;\n                });\n            },\n            degree: function () {\n                return this.links.length;\n            },\n            incidentWith: function (link) {\n                return contains(this.links, link);\n            },\n            getLinksWith: function (node) {\n                return Utils.all(this.links, function (link) {\n                    return link.getComplement(this) === node;\n                }, this);\n            },\n            getNeighbors: function () {\n                var neighbors = [];\n                Utils.forEach(this.incoming, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                Utils.forEach(this.outgoing, function (e) {\n                    neighbors.push(e.getComplement(this));\n                }, this);\n                return neighbors;\n            }\n        });\n        var Link = kendo.Class.extend({\n            init: function (source, target, id, connection) {\n                if (Utils.isUndefined(source)) {\n                    throw 'The source of the new link is not set.';\n                }\n                if (Utils.isUndefined(target)) {\n                    throw 'The target of the new link is not set.';\n                }\n                var sourceFound, targetFound;\n                if (Utils.isString(source)) {\n                    sourceFound = new Node(source);\n                } else {\n                    sourceFound = source;\n                }\n                if (Utils.isString(target)) {\n                    targetFound = new Node(target);\n                } else {\n                    targetFound = target;\n                }\n                this.source = sourceFound;\n                this.target = targetFound;\n                this.source.links.push(this);\n                this.target.links.push(this);\n                this.source.outgoing.push(this);\n                this.target.incoming.push(this);\n                if (Utils.isDefined(id)) {\n                    this.id = id;\n                } else {\n                    this.id = randomId();\n                }\n                if (Utils.isDefined(connection)) {\n                    this.associatedConnection = connection;\n                } else {\n                    this.associatedConnection = null;\n                }\n                this.type = 'Link';\n                this.shortForm = 'Link \\'' + this.source.id + '->' + this.target.id + '\\'';\n            },\n            getComplement: function (node) {\n                if (this.source !== node && this.target !== node) {\n                    throw 'The given node is not incident with this link.';\n                }\n                return this.source === node ? this.target : this.source;\n            },\n            getCommonNode: function (link) {\n                if (this.source === link.source || this.source === link.target) {\n                    return this.source;\n                }\n                if (this.target === link.source || this.target === link.target) {\n                    return this.target;\n                }\n                return null;\n            },\n            isBridging: function (v1, v2) {\n                return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n            },\n            getNodes: function () {\n                return [\n                    this.source,\n                    this.target\n                ];\n            },\n            incidentWith: function (node) {\n                return this.source === node || this.target === node;\n            },\n            adjacentTo: function (link) {\n                return contains(this.source.links, link) || contains(this.target.links, link);\n            },\n            changeSource: function (node) {\n                Utils.remove(this.source.links, this);\n                Utils.remove(this.source.outgoing, this);\n                node.links.push(this);\n                node.outgoing.push(this);\n                this.source = node;\n            },\n            changeTarget: function (node) {\n                Utils.remove(this.target.links, this);\n                Utils.remove(this.target.incoming, this);\n                node.links.push(this);\n                node.incoming.push(this);\n                this.target = node;\n            },\n            changesNodes: function (v, w) {\n                if (this.source === v) {\n                    this.changeSource(w);\n                } else if (this.target === v) {\n                    this.changeTarget(w);\n                }\n            },\n            reverse: function () {\n                var oldSource = this.source;\n                var oldTarget = this.target;\n                this.source = oldTarget;\n                Utils.remove(oldSource.outgoing, this);\n                this.source.outgoing.push(this);\n                this.target = oldSource;\n                Utils.remove(oldTarget.incoming, this);\n                this.target.incoming.push(this);\n                return this;\n            },\n            directTo: function (target) {\n                if (this.source !== target && this.target !== target) {\n                    throw 'The given node is not incident with this link.';\n                }\n                if (this.target !== target) {\n                    this.reverse();\n                }\n            },\n            createReverseEdge: function () {\n                var r = this.clone();\n                r.reverse();\n                r.reversed = true;\n                return r;\n            },\n            clone: function () {\n                var clone = new Link(this.source, this.target);\n                return clone;\n            }\n        });\n        var Graph = kendo.Class.extend({\n            init: function (idOrDiagram) {\n                this.links = [];\n                this.nodes = [];\n                this._nodeMap = new Dictionary();\n                this.diagram = null;\n                this._root = null;\n                if (Utils.isDefined(idOrDiagram)) {\n                    if (Utils.isString(idOrDiagram)) {\n                        this.id = idOrDiagram;\n                    } else {\n                        this.diagram = idOrDiagram;\n                        this.id = idOrDiagram.id;\n                    }\n                } else {\n                    this.id = randomId();\n                }\n                this.bounds = new Rect();\n                this._hasCachedRelationships = false;\n                this.type = 'Graph';\n            },\n            cacheRelationships: function (forceRebuild) {\n                if (Utils.isUndefined(forceRebuild)) {\n                    forceRebuild = false;\n                }\n                if (this._hasCachedRelationships && !forceRebuild) {\n                    return;\n                }\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    node.children = this.getChildren(node);\n                    node.parents = this.getParents(node);\n                }\n                this._hasCachedRelationships = true;\n            },\n            assignLevels: function (startNode, offset, visited) {\n                if (!startNode) {\n                    throw 'Start node not specified.';\n                }\n                if (Utils.isUndefined(offset)) {\n                    offset = 0;\n                }\n                this.cacheRelationships();\n                if (Utils.isUndefined(visited)) {\n                    visited = new Dictionary();\n                    Utils.forEach(this.nodes, function (n) {\n                        visited.add(n, false);\n                    });\n                }\n                visited.set(startNode, true);\n                startNode.level = offset;\n                var children = startNode.children;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (!child || visited.get(child)) {\n                        continue;\n                    }\n                    this.assignLevels(child, offset + 1, visited);\n                }\n            },\n            root: function (value) {\n                if (Utils.isUndefined(value)) {\n                    if (!this._root) {\n                        var found = Utils.first(this.nodes, function (n) {\n                            return n.incoming.length === 0;\n                        });\n                        if (found) {\n                            return found;\n                        }\n                        return Utils.first(this.nodes);\n                    } else {\n                        return this._root;\n                    }\n                } else {\n                    this._root = value;\n                }\n            },\n            getConnectedComponents: function () {\n                this.componentIndex = 0;\n                this.setItemIndices();\n                var componentId = Utils.initArray(this.nodes.length, -1);\n                for (var v = 0; v < this.nodes.length; v++) {\n                    if (componentId[v] === -1) {\n                        this._collectConnectedNodes(componentId, v);\n                        this.componentIndex++;\n                    }\n                }\n                var components = [], i;\n                for (i = 0; i < this.componentIndex; ++i) {\n                    components[i] = new Graph();\n                }\n                for (i = 0; i < componentId.length; ++i) {\n                    var graph = components[componentId[i]];\n                    graph.addNodeAndOutgoings(this.nodes[i]);\n                }\n                components.sort(function (a, b) {\n                    return b.nodes.length - a.nodes.length;\n                });\n                return components;\n            },\n            _collectConnectedNodes: function (setIds, nodeIndex) {\n                setIds[nodeIndex] = this.componentIndex;\n                var node = this.nodes[nodeIndex];\n                Utils.forEach(node.links, function (link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n            },\n            calcBounds: function () {\n                if (this.isEmpty()) {\n                    this.bounds = new Rect();\n                    return this.bounds;\n                }\n                var b = null;\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (!b) {\n                        b = node.bounds();\n                    } else {\n                        b = b.union(node.bounds());\n                    }\n                }\n                this.bounds = b;\n                return this.bounds;\n            },\n            getSpanningTree: function (root) {\n                var tree = new Graph();\n                var map = new Dictionary(), source, target;\n                tree.root = root.clone();\n                tree.root.level = 0;\n                tree.root.id = root.id;\n                map.add(root, tree.root);\n                root.level = 0;\n                var visited = [];\n                var remaining = [];\n                tree._addNode(tree.root);\n                visited.push(root);\n                remaining.push(root);\n                var levelCount = 1;\n                while (remaining.length > 0) {\n                    var next = remaining.pop();\n                    for (var ni = 0; ni < next.links.length; ni++) {\n                        var link = next.links[ni];\n                        var cn = link.getComplement(next);\n                        if (contains(visited, cn)) {\n                            continue;\n                        }\n                        cn.level = next.level + 1;\n                        if (levelCount < cn.level + 1) {\n                            levelCount = cn.level + 1;\n                        }\n                        if (!contains(remaining, cn)) {\n                            remaining.push(cn);\n                        }\n                        if (!contains(visited, cn)) {\n                            visited.push(cn);\n                        }\n                        if (map.containsKey(next)) {\n                            source = map.get(next);\n                        } else {\n                            source = next.clone();\n                            source.level = next.level;\n                            source.id = next.id;\n                            map.add(next, source);\n                        }\n                        if (map.containsKey(cn)) {\n                            target = map.get(cn);\n                        } else {\n                            target = cn.clone();\n                            target.level = cn.level;\n                            target.id = cn.id;\n                            map.add(cn, target);\n                        }\n                        var newLink = new Link(source, target);\n                        tree.addLink(newLink);\n                    }\n                }\n                var treeLevels = [];\n                for (var i = 0; i < levelCount; i++) {\n                    treeLevels.push([]);\n                }\n                Utils.forEach(tree.nodes, function (node) {\n                    treeLevels[node.level].push(node);\n                });\n                tree.treeLevels = treeLevels;\n                tree.cacheRelationships();\n                return tree;\n            },\n            takeRandomNode: function (excludedNodes, incidenceLessThan) {\n                if (Utils.isUndefined(excludedNodes)) {\n                    excludedNodes = [];\n                }\n                if (Utils.isUndefined(incidenceLessThan)) {\n                    incidenceLessThan = 4;\n                }\n                if (this.nodes.length === 0) {\n                    return null;\n                }\n                if (this.nodes.length === 1) {\n                    return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n                }\n                var pool = $.grep(this.nodes, function (node) {\n                    return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n                });\n                if (Utils.isEmpty(pool)) {\n                    return null;\n                }\n                return pool[Utils.randomInteger(0, pool.length)];\n            },\n            isEmpty: function () {\n                return Utils.isEmpty(this.nodes);\n            },\n            isHealthy: function () {\n                return Utils.all(this.links, function (link) {\n                    return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n                }, this);\n            },\n            getParents: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getParents();\n            },\n            getChildren: function (n) {\n                if (!this.hasNode(n)) {\n                    throw 'The given node is not part of this graph.';\n                }\n                return n.getChildren();\n            },\n            addLink: function (sourceOrLink, target, owner) {\n                if (Utils.isUndefined(sourceOrLink)) {\n                    throw 'The source of the link is not defined.';\n                }\n                if (Utils.isUndefined(target)) {\n                    if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === 'Link') {\n                        this.addExistingLink(sourceOrLink);\n                        return;\n                    } else {\n                        throw 'The target of the link is not defined.';\n                    }\n                }\n                var foundSource = this.getNode(sourceOrLink);\n                if (Utils.isUndefined(foundSource)) {\n                    foundSource = this.addNode(sourceOrLink);\n                }\n                var foundTarget = this.getNode(target);\n                if (Utils.isUndefined(foundTarget)) {\n                    foundTarget = this.addNode(target);\n                }\n                var newLink = new Link(foundSource, foundTarget);\n                if (Utils.isDefined(owner)) {\n                    newLink.owner = owner;\n                }\n                this.links.push(newLink);\n                return newLink;\n            },\n            removeAllLinks: function () {\n                while (this.links.length > 0) {\n                    var link = this.links[0];\n                    this.removeLink(link);\n                }\n            },\n            addExistingLink: function (link) {\n                if (this.hasLink(link)) {\n                    return;\n                }\n                this.links.push(link);\n                if (this.hasNode(link.source.id)) {\n                    var s = this.getNode(link.source.id);\n                    link.changeSource(s);\n                } else {\n                    this.addNode(link.source);\n                }\n                if (this.hasNode(link.target.id)) {\n                    var t = this.getNode(link.target.id);\n                    link.changeTarget(t);\n                } else {\n                    this.addNode(link.target);\n                }\n            },\n            hasLink: function (linkOrId) {\n                if (Utils.isString(linkOrId)) {\n                    return Utils.any(this.links, function (link) {\n                        return link.id === linkOrId;\n                    });\n                }\n                if (linkOrId.type === 'Link') {\n                    return contains(this.links, linkOrId);\n                }\n                throw 'The given object is neither an identifier nor a Link.';\n            },\n            getNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                if (this._nodeMap.containsKey(id)) {\n                    return this._nodeMap.get(id);\n                }\n            },\n            hasNode: function (nodeOrId) {\n                var id = nodeOrId.id || nodeOrId;\n                return this._nodeMap.containsKey(id);\n            },\n            _addNode: function (node) {\n                this.nodes.push(node);\n                this._nodeMap.add(node.id, node);\n            },\n            _removeNode: function (node) {\n                Utils.remove(this.nodes, node);\n                this._nodeMap.remove(node.id);\n            },\n            removeNode: function (nodeOrId) {\n                var n = nodeOrId;\n                if (Utils.isString(nodeOrId)) {\n                    n = this.getNode(nodeOrId);\n                }\n                if (Utils.isDefined(n)) {\n                    var links = n.links;\n                    n.links = [];\n                    for (var i = 0, len = links.length; i < len; i++) {\n                        var link = links[i];\n                        this.removeLink(link);\n                    }\n                    this._removeNode(n);\n                } else {\n                    throw 'The identifier should be a Node or the Id (string) of a node.';\n                }\n            },\n            areConnected: function (n1, n2) {\n                return Utils.any(this.links, function (link) {\n                    return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n                });\n            },\n            removeLink: function (link) {\n                Utils.remove(this.links, link);\n                Utils.remove(link.source.outgoing, link);\n                Utils.remove(link.source.links, link);\n                Utils.remove(link.target.incoming, link);\n                Utils.remove(link.target.links, link);\n            },\n            addNode: function (nodeOrId, layoutRect, owner) {\n                var newNode = null;\n                if (!Utils.isDefined(nodeOrId)) {\n                    throw 'No Node or identifier for a new Node is given.';\n                }\n                if (Utils.isString(nodeOrId)) {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = new Node(nodeOrId);\n                } else {\n                    if (this.hasNode(nodeOrId)) {\n                        return this.getNode(nodeOrId);\n                    }\n                    newNode = nodeOrId;\n                }\n                if (Utils.isDefined(layoutRect)) {\n                    newNode.bounds(layoutRect);\n                }\n                if (Utils.isDefined(owner)) {\n                    newNode.owner = owner;\n                }\n                this._addNode(newNode);\n                return newNode;\n            },\n            addNodeAndOutgoings: function (node) {\n                if (!this.hasNode(node)) {\n                    this._addNode(node);\n                }\n                var newLinks = node.outgoing;\n                node.outgoing = [];\n                Utils.forEach(newLinks, function (link) {\n                    this.addExistingLink(link);\n                }, this);\n            },\n            setItemIndices: function () {\n                var i;\n                for (i = 0; i < this.nodes.length; ++i) {\n                    this.nodes[i].index = i;\n                }\n                for (i = 0; i < this.links.length; ++i) {\n                    this.links[i].index = i;\n                }\n            },\n            clone: function (saveMapping) {\n                var copy = new Graph();\n                var save = Utils.isDefined(saveMapping) && saveMapping === true;\n                if (save) {\n                    copy.nodeMap = new Dictionary();\n                    copy.linkMap = new Dictionary();\n                }\n                var map = new Dictionary();\n                Utils.forEach(this.nodes, function (nOriginal) {\n                    var nCopy = nOriginal.clone();\n                    map.set(nOriginal, nCopy);\n                    copy._addNode(nCopy);\n                    if (save) {\n                        copy.nodeMap.set(nCopy, nOriginal);\n                    }\n                });\n                Utils.forEach(this.links, function (linkOriginal) {\n                    if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                        var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                        if (save) {\n                            copy.linkMap.set(linkCopy, linkOriginal);\n                        }\n                    }\n                });\n                return copy;\n            },\n            linearize: function (addIds) {\n                return Graph.Utils.linearize(this, addIds);\n            },\n            depthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var visited = [];\n                this._dftIterator(foundNode, action, visited);\n            },\n            _dftIterator: function (node, action, visited) {\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child)) {\n                        continue;\n                    }\n                    this._dftIterator(child, action, visited);\n                }\n            },\n            breadthFirstTraversal: function (startNode, action) {\n                if (Utils.isUndefined(startNode)) {\n                    throw 'You need to supply a starting node.';\n                }\n                if (Utils.isUndefined(action)) {\n                    throw 'You need to supply an action.';\n                }\n                if (!this.hasNode(startNode)) {\n                    throw 'The given start-node is not part of this graph';\n                }\n                var foundNode = this.getNode(startNode);\n                var queue = new Queue();\n                var visited = [];\n                queue.enqueue(foundNode);\n                while (queue.length > 0) {\n                    var node = queue.dequeue();\n                    action(node);\n                    visited.push(node);\n                    var children = node.getChildren();\n                    for (var i = 0, len = children.length; i < len; i++) {\n                        var child = children[i];\n                        if (contains(visited, child) || contains(queue, child)) {\n                            continue;\n                        }\n                        queue.enqueue(child);\n                    }\n                }\n            },\n            _stronglyConnectedComponents: function (excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n                indices.add(node, index);\n                lowLinks.add(node, index);\n                index++;\n                stack.push(node);\n                var children = node.getChildren(), next;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    next = children[i];\n                    if (!indices.containsKey(next)) {\n                        this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                        lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                    } else if (contains(stack, next)) {\n                        lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                    }\n                }\n                if (lowLinks.get(node) === indices.get(node)) {\n                    var component = [];\n                    do {\n                        next = stack.pop();\n                        component.push(next);\n                    } while (next !== node);\n                    if (!excludeSingleItems || component.length > 1) {\n                        connected.push(component);\n                    }\n                }\n            },\n            findCycles: function (excludeSingleItems) {\n                if (Utils.isUndefined(excludeSingleItems)) {\n                    excludeSingleItems = true;\n                }\n                var indices = new Dictionary();\n                var lowLinks = new Dictionary();\n                var connected = [];\n                var stack = [];\n                for (var i = 0, len = this.nodes.length; i < len; i++) {\n                    var node = this.nodes[i];\n                    if (indices.containsKey(node)) {\n                        continue;\n                    }\n                    this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n                }\n                return connected;\n            },\n            isAcyclic: function () {\n                return Utils.isEmpty(this.findCycles());\n            },\n            isSubGraph: function (other) {\n                var otherArray = other.linearize();\n                var thisArray = this.linearize();\n                return Utils.all(otherArray, function (s) {\n                    return contains(thisArray, s);\n                });\n            },\n            makeAcyclic: function () {\n                if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                    return [];\n                }\n                if (this.nodes.length == 2) {\n                    var result = [];\n                    if (this.links.length > 1) {\n                        var oneLink = this.links[0];\n                        var oneNode = oneLink.source;\n                        for (var i = 0, len = this.links.length; i < len; i++) {\n                            var link = this.links[i];\n                            if (link.source == oneNode) {\n                                continue;\n                            }\n                            var rev = link.reverse();\n                            result.push(rev);\n                        }\n                    }\n                    return result;\n                }\n                var copy = this.clone(true);\n                var N = this.nodes.length;\n                var intensityCatalog = new Dictionary();\n                var flowIntensity = function (node) {\n                    if (node.outgoing.length === 0) {\n                        return 2 - N;\n                    } else if (node.incoming.length === 0) {\n                        return N - 2;\n                    } else {\n                        return node.outgoing.length - node.incoming.length;\n                    }\n                };\n                var catalogEqualIntensity = function (node, intensityCatalog) {\n                    var intensity = flowIntensity(node, N);\n                    if (!intensityCatalog.containsKey(intensity)) {\n                        intensityCatalog.set(intensity, []);\n                    }\n                    intensityCatalog.get(intensity).push(node);\n                };\n                Utils.forEach(copy.nodes, function (v) {\n                    catalogEqualIntensity(v, intensityCatalog);\n                });\n                var sourceStack = [];\n                var targetStack = [];\n                while (copy.nodes.length > 0) {\n                    var source, target, intensity;\n                    if (intensityCatalog.containsKey(2 - N)) {\n                        var targets = intensityCatalog.get(2 - N);\n                        while (targets.length > 0) {\n                            target = targets.pop();\n                            for (var li = 0; li < target.links.length; li++) {\n                                var targetLink = target.links[li];\n                                source = targetLink.getComplement(target);\n                                intensity = flowIntensity(source, N);\n                                Utils.remove(intensityCatalog.get(intensity), source);\n                                source.removeLink(targetLink);\n                                catalogEqualIntensity(source, intensityCatalog);\n                            }\n                            copy._removeNode(target);\n                            targetStack.unshift(target);\n                        }\n                    }\n                    if (intensityCatalog.containsKey(N - 2)) {\n                        var sources = intensityCatalog.get(N - 2);\n                        while (sources.length > 0) {\n                            source = sources.pop();\n                            for (var si = 0; si < source.links.length; si++) {\n                                var sourceLink = source.links[si];\n                                target = sourceLink.getComplement(source);\n                                intensity = flowIntensity(target, N);\n                                Utils.remove(intensityCatalog.get(intensity), target);\n                                target.removeLink(sourceLink);\n                                catalogEqualIntensity(target, intensityCatalog);\n                            }\n                            sourceStack.push(source);\n                            copy._removeNode(source);\n                        }\n                    }\n                    if (copy.nodes.length > 0) {\n                        for (var k = N - 3; k > 2 - N; k--) {\n                            if (intensityCatalog.containsKey(k) && intensityCatalog.get(k).length > 0) {\n                                var maxdiff = intensityCatalog.get(k);\n                                var v = maxdiff.pop();\n                                for (var ri = 0; ri < v.links.length; ri++) {\n                                    var ril = v.links[ri];\n                                    var u = ril.getComplement(v);\n                                    intensity = flowIntensity(u, N);\n                                    Utils.remove(intensityCatalog.get(intensity), u);\n                                    u.removeLink(ril);\n                                    catalogEqualIntensity(u, intensityCatalog);\n                                }\n                                sourceStack.push(v);\n                                copy._removeNode(v);\n                                break;\n                            }\n                        }\n                    }\n                }\n                sourceStack = sourceStack.concat(targetStack);\n                var vertexOrder = new Dictionary();\n                for (var kk = 0; kk < this.nodes.length; kk++) {\n                    vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n                }\n                var reversedEdges = [];\n                Utils.forEach(this.links, function (link) {\n                    if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                        link.reverse();\n                        reversedEdges.push(link);\n                    }\n                });\n                return reversedEdges;\n            }\n        });\n        Graph.Predefined = {\n            EightGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->4',\n                    '4->1',\n                    '3->5',\n                    '5->6',\n                    '6->7',\n                    '7->3'\n                ]);\n            },\n            Mindmap: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '0->2',\n                    '0->3',\n                    '0->4',\n                    '0->5',\n                    '1->6',\n                    '1->7',\n                    '7->8',\n                    '2->9',\n                    '9->10',\n                    '9->11',\n                    '3->12',\n                    '12->13',\n                    '13->14',\n                    '4->15',\n                    '4->16',\n                    '15->17',\n                    '15->18',\n                    '18->19',\n                    '18->20',\n                    '14->21',\n                    '14->22',\n                    '5->23',\n                    '23->24',\n                    '23->25',\n                    '6->26'\n                ]);\n            },\n            ThreeGraph: function () {\n                return Graph.Utils.parse([\n                    '1->2',\n                    '2->3',\n                    '3->1'\n                ]);\n            },\n            BinaryTree: function (levels) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 5;\n                }\n                return Graph.Utils.createBalancedTree(levels, 2);\n            },\n            Linear: function (length) {\n                if (Utils.isUndefined(length)) {\n                    length = 10;\n                }\n                return Graph.Utils.createBalancedTree(length, 1);\n            },\n            Tree: function (levels, siblingsCount) {\n                return Graph.Utils.createBalancedTree(levels, siblingsCount);\n            },\n            Forest: function (levels, siblingsCount, trees) {\n                return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n            },\n            Workflow: function () {\n                return Graph.Utils.parse([\n                    '0->1',\n                    '1->2',\n                    '2->3',\n                    '1->4',\n                    '4->3',\n                    '3->5',\n                    '5->6',\n                    '6->3',\n                    '6->7',\n                    '5->4'\n                ]);\n            },\n            Grid: function (n, m) {\n                var g = new diagram.Graph();\n                if (n <= 0 && m <= 0) {\n                    return g;\n                }\n                for (var i = 0; i < n + 1; i++) {\n                    var previous = null;\n                    for (var j = 0; j < m + 1; j++) {\n                        var node = new Node(i.toString() + '.' + j.toString());\n                        g.addNode(node);\n                        if (previous) {\n                            g.addLink(previous, node);\n                        }\n                        if (i > 0) {\n                            var left = g.getNode((i - 1).toString() + '.' + j.toString());\n                            g.addLink(left, node);\n                        }\n                        previous = node;\n                    }\n                }\n                return g;\n            }\n        };\n        Graph.Utils = {\n            parse: function (graphString) {\n                var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n                for (var i = 0, len = parts.length; i < len; i++) {\n                    var part = parts[i];\n                    if (Utils.isString(part)) {\n                        if (part.indexOf('->') < 0) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        var p = part.split('->');\n                        if (p.length != 2) {\n                            throw 'The link should be specified as \\'a->b\\'.';\n                        }\n                        previousLink = new Link(p[0], p[1]);\n                        graph.addLink(previousLink);\n                    }\n                    if (Utils.isObject(part)) {\n                        if (!previousLink) {\n                            throw 'Specification found before Link definition.';\n                        }\n                        kendo.deepExtend(previousLink, part);\n                    }\n                }\n                return graph;\n            },\n            linearize: function (graph, addIds) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'Expected an instance of a Graph object in slot one.';\n                }\n                if (Utils.isUndefined(addIds)) {\n                    addIds = false;\n                }\n                var lin = [];\n                for (var i = 0, len = graph.links.length; i < len; i++) {\n                    var link = graph.links[i];\n                    lin.push(link.source.id + '->' + link.target.id);\n                    if (addIds) {\n                        lin.push({ id: link.id });\n                    }\n                }\n                return lin;\n            },\n            _addShape: function (kendoDiagram, p, id, shapeDefaults) {\n                if (Utils.isUndefined(p)) {\n                    p = new diagram.Point(0, 0);\n                }\n                if (Utils.isUndefined(id)) {\n                    id = randomId();\n                }\n                shapeDefaults = kendo.deepExtend({\n                    width: 20,\n                    height: 20,\n                    id: id,\n                    radius: 10,\n                    fill: '#778899',\n                    data: 'circle',\n                    undoable: false,\n                    x: p.x,\n                    y: p.y\n                }, shapeDefaults);\n                return kendoDiagram.addShape(shapeDefaults);\n            },\n            _addConnection: function (diagram, from, to, options) {\n                return diagram.connect(from, to, options);\n            },\n            createDiagramFromGraph: function (diagram, graph, doLayout, randomSize) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'The diagram surface is undefined.';\n                }\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph specification defined.';\n                }\n                if (Utils.isUndefined(doLayout)) {\n                    doLayout = true;\n                }\n                if (Utils.isUndefined(randomSize)) {\n                    randomSize = false;\n                }\n                var width = diagram.element.clientWidth || 200;\n                var height = diagram.element.clientHeight || 200;\n                var map = [], node, shape;\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    node = graph.nodes[i];\n                    var p = node.position;\n                    if (Utils.isUndefined(p)) {\n                        if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                            p = new Point(node.x, node.y);\n                        } else {\n                            p = new Point(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                        }\n                    }\n                    var opt = {};\n                    if (node.id === '0') {\n                    } else if (randomSize) {\n                        kendo.deepExtend(opt, {\n                            width: Math.random() * 150 + 20,\n                            height: Math.random() * 80 + 50,\n                            data: 'rectangle',\n                            fill: { color: '#778899' }\n                        });\n                    }\n                    shape = this._addShape(diagram, p, node.id, opt);\n                    var bounds = shape.bounds();\n                    if (Utils.isDefined(bounds)) {\n                        node.x = bounds.x;\n                        node.y = bounds.y;\n                        node.width = bounds.width;\n                        node.height = bounds.height;\n                    }\n                    map[node.id] = shape;\n                }\n                for (var gli = 0; gli < graph.links.length; gli++) {\n                    var link = graph.links[gli];\n                    var sourceShape = map[link.source.id];\n                    if (Utils.isUndefined(sourceShape)) {\n                        continue;\n                    }\n                    var targetShape = map[link.target.id];\n                    if (Utils.isUndefined(targetShape)) {\n                        continue;\n                    }\n                    this._addConnection(diagram, sourceShape, targetShape, { id: link.id });\n                }\n                if (doLayout) {\n                    var l = new diagram.SpringLayout(diagram);\n                    l.layoutGraph(graph, { limitToView: false });\n                    for (var shi = 0; shi < graph.nodes.length; shi++) {\n                        node = graph.nodes[shi];\n                        shape = map[node.id];\n                        shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            },\n            createBalancedTree: function (levels, siblingsCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                g.root = root;\n                lastAdded.push(root);\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n                return g;\n            },\n            createBalancedForest: function (levels, siblingsCount, treeCount) {\n                if (Utils.isUndefined(levels)) {\n                    levels = 3;\n                }\n                if (Utils.isUndefined(siblingsCount)) {\n                    siblingsCount = 3;\n                }\n                if (Utils.isUndefined(treeCount)) {\n                    treeCount = 5;\n                }\n                var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n                if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                    return g;\n                }\n                for (var t = 0; t < treeCount; t++) {\n                    var root = new Node((++counter).toString());\n                    g.addNode(root);\n                    lastAdded = [root];\n                    for (var i = 0; i < levels; i++) {\n                        news = [];\n                        for (var j = 0; j < lastAdded.length; j++) {\n                            var parent = lastAdded[j];\n                            for (var k = 0; k < siblingsCount; k++) {\n                                var item = new Node((++counter).toString());\n                                g.addLink(parent, item);\n                                news.push(item);\n                            }\n                        }\n                        lastAdded = news;\n                    }\n                }\n                return g;\n            },\n            createRandomConnectedGraph: function (nodeCount, maxIncidence, isTree) {\n                if (Utils.isUndefined(nodeCount)) {\n                    nodeCount = 40;\n                }\n                if (Utils.isUndefined(maxIncidence)) {\n                    maxIncidence = 4;\n                }\n                if (Utils.isUndefined(isTree)) {\n                    isTree = false;\n                }\n                var g = new diagram.Graph(), counter = -1;\n                if (nodeCount <= 0) {\n                    return g;\n                }\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                if (nodeCount === 1) {\n                    return g;\n                }\n                if (nodeCount > 1) {\n                    for (var i = 1; i < nodeCount; i++) {\n                        var poolNode = g.takeRandomNode([], maxIncidence);\n                        if (!poolNode) {\n                            break;\n                        }\n                        var newNode = g.addNode(i.toString());\n                        g.addLink(poolNode, newNode);\n                    }\n                    if (!isTree && nodeCount > 1) {\n                        var randomAdditions = Utils.randomInteger(1, nodeCount);\n                        for (var ri = 0; ri < randomAdditions; ri++) {\n                            var n1 = g.takeRandomNode([], maxIncidence);\n                            var n2 = g.takeRandomNode([], maxIncidence);\n                            if (n1 && n2 && !g.areConnected(n1, n2)) {\n                                g.addLink(n1, n2);\n                            }\n                        }\n                    }\n                    return g;\n                }\n            },\n            randomDiagram: function (diagram, shapeCount, maxIncidence, isTree, randomSize) {\n                var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n                Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n            }\n        };\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            Point: Point,\n            Intersect: Intersect,\n            Geometry: Geometry,\n            Rect: Rect,\n            Size: Size,\n            RectAlign: RectAlign,\n            Matrix: Matrix,\n            MatrixVector: MatrixVector,\n            normalVariable: normalVariable,\n            randomId: randomId,\n            Dictionary: Dictionary,\n            HashTable: HashTable,\n            Queue: Queue,\n            Set: Set,\n            Node: Node,\n            Link: Link,\n            Graph: Graph,\n            PathDefiner: PathDefiner\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/svg', [\n        'kendo.drawing',\n        'dataviz/diagram/math'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Class = kendo.Class, deepExtend = kendo.deepExtend, Point = diagram.Point, Rect = diagram.Rect, Matrix = diagram.Matrix, Utils = diagram.Utils, isNumber = Utils.isNumber, isString = Utils.isString, MatrixVector = diagram.MatrixVector, g = kendo.geometry, d = kendo.drawing, defined = kendo.util.defined, inArray = $.inArray;\n        var TRANSPARENT = 'transparent', Markers = {\n                none: 'none',\n                arrowStart: 'ArrowStart',\n                filledCircle: 'FilledCircle',\n                arrowEnd: 'ArrowEnd'\n            }, FULL_CIRCLE_ANGLE = 360, START = 'start', END = 'end', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y';\n        diagram.Markers = Markers;\n        function diffNumericOptions(options, fields) {\n            var elementOptions = this.options;\n            var hasChanges = false;\n            var value, field;\n            for (var i = 0; i < fields.length; i++) {\n                field = fields[i];\n                value = options[field];\n                if (isNumber(value) && elementOptions[field] !== value) {\n                    elementOptions[field] = value;\n                    hasChanges = true;\n                }\n            }\n            return hasChanges;\n        }\n        var Scale = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrix: function () {\n                return Matrix.scaling(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('scale({0},{1})', this.x, this.y);\n            },\n            invert: function () {\n                return new Scale(1 / this.x, 1 / this.y);\n            }\n        });\n        var Translation = Class.extend({\n            init: function (x, y) {\n                this.x = x;\n                this.y = y;\n            },\n            toMatrixVector: function () {\n                return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n            },\n            toMatrix: function () {\n                return Matrix.translation(this.x, this.y);\n            },\n            toString: function () {\n                return kendo.format('translate({0},{1})', this.x, this.y);\n            },\n            plus: function (delta) {\n                this.x += delta.x;\n                this.y += delta.y;\n            },\n            times: function (factor) {\n                this.x *= factor;\n                this.y *= factor;\n            },\n            length: function () {\n                return Math.sqrt(this.x * this.x + this.y * this.y);\n            },\n            normalize: function () {\n                if (this.Length === 0) {\n                    return;\n                }\n                this.times(1 / this.length());\n            },\n            invert: function () {\n                return new Translation(-this.x, -this.y);\n            }\n        });\n        var Rotation = Class.extend({\n            init: function (angle, x, y) {\n                this.x = x || 0;\n                this.y = y || 0;\n                this.angle = angle;\n            },\n            toString: function () {\n                if (this.x && this.y) {\n                    return kendo.format('rotate({0},{1},{2})', this.angle, this.x, this.y);\n                } else {\n                    return kendo.format('rotate({0})', this.angle);\n                }\n            },\n            toMatrix: function () {\n                return Matrix.rotation(this.angle, this.x, this.y);\n            },\n            center: function () {\n                return new Point(this.x, this.y);\n            },\n            invert: function () {\n                return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n            }\n        });\n        Rotation.ZERO = new Rotation(0);\n        Rotation.create = function (rotation) {\n            return new Rotation(rotation.angle, rotation.x, rotation.y);\n        };\n        Rotation.parse = function (str) {\n            var values = str.slice(1, str.length - 1).split(','), angle = values[0], x = values[1], y = values[2];\n            var rotation = new Rotation(angle, x, y);\n            return rotation;\n        };\n        var CompositeTransform = Class.extend({\n            init: function (x, y, scaleX, scaleY, angle, center) {\n                this.translate = new Translation(x, y);\n                if (scaleX !== undefined && scaleY !== undefined) {\n                    this.scale = new Scale(scaleX, scaleY);\n                }\n                if (angle !== undefined) {\n                    this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n                }\n            },\n            toString: function () {\n                var toString = function (transform) {\n                    return transform ? transform.toString() : '';\n                };\n                return toString(this.translate) + toString(this.rotate) + toString(this.scale);\n            },\n            render: function (visual) {\n                visual._transform = this;\n                visual._renderTransform();\n            },\n            toMatrix: function () {\n                var m = Matrix.unit();\n                if (this.translate) {\n                    m = m.times(this.translate.toMatrix());\n                }\n                if (this.rotate) {\n                    m = m.times(this.rotate.toMatrix());\n                }\n                if (this.scale) {\n                    m = m.times(this.scale.toMatrix());\n                }\n                return m;\n            },\n            invert: function () {\n                var rotate = this.rotate ? this.rotate.invert() : undefined, rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(), scale = this.scale ? this.scale.invert() : undefined, scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n                var translatePoint = new Point(-this.translate.x, -this.translate.y);\n                translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n                var translate = new Translation(translatePoint.x, translatePoint.y);\n                var transform = new CompositeTransform();\n                transform.translate = translate;\n                transform.rotate = rotate;\n                transform.scale = scale;\n                return transform;\n            }\n        });\n        var AutoSizeableMixin = {\n            _setScale: function () {\n                var options = this.options;\n                var originWidth = this._originWidth;\n                var originHeight = this._originHeight;\n                var scaleX = options.width / originWidth;\n                var scaleY = options.height / originHeight;\n                if (!isNumber(scaleX)) {\n                    scaleX = 1;\n                }\n                if (!isNumber(scaleY)) {\n                    scaleY = 1;\n                }\n                this._transform.scale = new Scale(scaleX, scaleY);\n            },\n            _setTranslate: function () {\n                var options = this.options;\n                var x = options.x || 0;\n                var y = options.y || 0;\n                this._transform.translate = new Translation(x, y);\n            },\n            _initSize: function () {\n                var options = this.options;\n                var transform = false;\n                if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                    this._measure(true);\n                    this._setScale();\n                    transform = true;\n                }\n                if (defined(options.x) || defined(options.y)) {\n                    this._setTranslate();\n                    transform = true;\n                }\n                if (transform) {\n                    this._renderTransform();\n                }\n            },\n            _updateSize: function (options) {\n                var update = false;\n                if (this.options.autoSize !== false && this._diffNumericOptions(options, [\n                        WIDTH,\n                        HEIGHT\n                    ])) {\n                    update = true;\n                    this._measure(true);\n                    this._setScale();\n                }\n                if (this._diffNumericOptions(options, [\n                        X,\n                        Y\n                    ])) {\n                    update = true;\n                    this._setTranslate();\n                }\n                if (update) {\n                    this._renderTransform();\n                }\n                return update;\n            }\n        };\n        var Element = Class.extend({\n            init: function (options) {\n                var element = this;\n                element.options = deepExtend({}, element.options, options);\n                element.id = element.options.id;\n                element._originSize = Rect.empty();\n                element._transform = new CompositeTransform();\n            },\n            visible: function (value) {\n                return this.drawingContainer().visible(value);\n            },\n            redraw: function (options) {\n                if (options && options.id) {\n                    this.id = options.id;\n                }\n            },\n            position: function (x, y) {\n                var options = this.options;\n                if (!defined(x)) {\n                    return new Point(options.x, options.y);\n                }\n                if (defined(y)) {\n                    options.x = x;\n                    options.y = y;\n                } else if (x instanceof Point) {\n                    options.x = x.x;\n                    options.y = x.y;\n                }\n                this._transform.translate = new Translation(options.x, options.y);\n                this._renderTransform();\n            },\n            rotate: function (angle, center) {\n                if (defined(angle)) {\n                    this._transform.rotate = new Rotation(angle, center.x, center.y);\n                    this._renderTransform();\n                }\n                return this._transform.rotate || Rotation.ZERO;\n            },\n            drawingContainer: function () {\n                return this.drawingElement;\n            },\n            _renderTransform: function () {\n                var matrix = this._transform.toMatrix();\n                this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n            },\n            _hover: function () {\n            },\n            _diffNumericOptions: diffNumericOptions,\n            _measure: function (force) {\n                var rect;\n                if (!this._measured || force) {\n                    var box = this._boundingBox() || new g.Rect();\n                    var startPoint = box.topLeft();\n                    rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                    this._originSize = rect;\n                    this._originWidth = rect.width;\n                    this._originHeight = rect.height;\n                    this._measured = true;\n                } else {\n                    rect = this._originSize;\n                }\n                return rect;\n            },\n            _boundingBox: function () {\n                return this.drawingElement.rawBBox();\n            }\n        });\n        var VisualBase = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                options = this.options;\n                options.fill = normalizeDrawingOptions(options.fill);\n                options.stroke = normalizeDrawingOptions(options.stroke);\n            },\n            options: {\n                stroke: {\n                    color: 'gray',\n                    width: 1\n                },\n                fill: { color: TRANSPARENT }\n            },\n            fill: function (color, opacity) {\n                this._fill({\n                    color: getColor(color),\n                    opacity: opacity\n                });\n            },\n            stroke: function (color, width, opacity) {\n                this._stroke({\n                    color: getColor(color),\n                    width: width,\n                    opacity: opacity\n                });\n            },\n            redraw: function (options) {\n                if (options) {\n                    var stroke = options.stroke;\n                    var fill = options.fill;\n                    if (stroke) {\n                        this._stroke(normalizeDrawingOptions(stroke));\n                    }\n                    if (fill) {\n                        this._fill(normalizeDrawingOptions(fill));\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _hover: function (show) {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var hover = options.hover;\n                if (hover && hover.fill) {\n                    var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                    drawingElement.fill(fill.color, fill.opacity);\n                }\n            },\n            _stroke: function (strokeOptions) {\n                var options = this.options;\n                deepExtend(options, { stroke: strokeOptions });\n                strokeOptions = options.stroke;\n                var stroke = null;\n                if (strokeOptions.width > 0) {\n                    stroke = {\n                        color: strokeOptions.color,\n                        width: strokeOptions.width,\n                        opacity: strokeOptions.opacity,\n                        dashType: strokeOptions.dashType\n                    };\n                }\n                this.drawingElement.options.set('stroke', stroke);\n            },\n            _fill: function (fillOptions) {\n                var options = this.options;\n                deepExtend(options, { fill: fillOptions || {} });\n                var fill = options.fill;\n                if (fill.gradient) {\n                    var gradient = fill.gradient;\n                    var GradientClass = gradient.type === 'radial' ? d.RadialGradient : d.LinearGradient;\n                    this.drawingElement.fill(new GradientClass(gradient));\n                } else {\n                    this.drawingElement.fill(fill.color, fill.opacity);\n                }\n            }\n        });\n        var TextBlock = VisualBase.extend({\n            init: function (options) {\n                options = this._textColor(options);\n                VisualBase.fn.init.call(this, options);\n                this._font();\n                this._initText();\n                this._initSize();\n            },\n            options: {\n                fontSize: 15,\n                fontFamily: 'sans-serif',\n                stroke: { width: 0 },\n                fill: { color: 'black' },\n                autoSize: true\n            },\n            _initText: function () {\n                var options = this.options;\n                this.drawingElement = new d.Text(defined(options.text) ? options.text : '', new g.Point(), { font: options.font });\n                this._fill();\n                this._stroke();\n            },\n            _textColor: function (options) {\n                if (options && options.color) {\n                    options = deepExtend({}, options, { fill: { color: options.color } });\n                }\n                return options;\n            },\n            _font: function () {\n                var options = this.options;\n                if (options.fontFamily && defined(options.fontSize)) {\n                    var fontOptions = [];\n                    if (options.fontStyle) {\n                        fontOptions.push(options.fontStyle);\n                    }\n                    if (options.fontWeight) {\n                        fontOptions.push(options.fontWeight);\n                    }\n                    fontOptions.push(options.fontSize + (isNumber(options.fontSize) ? 'px' : ''));\n                    fontOptions.push(options.fontFamily);\n                    options.font = fontOptions.join(' ');\n                } else {\n                    delete options.font;\n                }\n            },\n            content: function (text) {\n                return this.drawingElement.content(text);\n            },\n            redraw: function (options) {\n                if (options) {\n                    var sizeChanged = false;\n                    var textOptions = this.options;\n                    options = this._textColor(options);\n                    VisualBase.fn.redraw.call(this, options);\n                    if (options.fontFamily || defined(options.fontSize) || options.fontStyle || options.fontWeight) {\n                        deepExtend(textOptions, {\n                            fontFamily: options.fontFamily,\n                            fontSize: options.fontSize,\n                            fontStyle: options.fontStyle,\n                            fontWeight: options.fontWeight\n                        });\n                        this._font();\n                        this.drawingElement.options.set('font', textOptions.font);\n                        sizeChanged = true;\n                    }\n                    if (options.text) {\n                        this.content(options.text);\n                        sizeChanged = true;\n                    }\n                    if (!this._updateSize(options) && sizeChanged) {\n                        this._initSize();\n                    }\n                }\n            }\n        });\n        deepExtend(TextBlock.fn, AutoSizeableMixin);\n        var Rectangle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initPath();\n                this._setPosition();\n            },\n            _setPosition: function () {\n                var options = this.options;\n                var x = options.x;\n                var y = options.y;\n                if (defined(x) || defined(y)) {\n                    this.position(x || 0, y || 0);\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT\n                        ])) {\n                        this._drawPath();\n                    }\n                    if (this._diffNumericOptions(options, [\n                            X,\n                            Y\n                        ])) {\n                        this._setPosition();\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({\n                    stroke: options.stroke,\n                    closed: true\n                });\n                this._fill();\n                this._drawPath();\n            },\n            _drawPath: function () {\n                var drawingElement = this.drawingElement;\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var width = sizeOptions.width;\n                var height = sizeOptions.height;\n                drawingElement.segments.elements([\n                    createSegment(0, 0),\n                    createSegment(width, 0),\n                    createSegment(width, height),\n                    createSegment(0, height)\n                ]);\n            }\n        });\n        var MarkerBase = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                var anchor = this.options.anchor;\n                this.anchor = new g.Point(anchor.x, anchor.y);\n                this.createElement();\n            },\n            options: {\n                stroke: {\n                    color: TRANSPARENT,\n                    width: 0\n                },\n                fill: { color: 'black' }\n            },\n            _transformToPath: function (point, path) {\n                var transform = path.transform();\n                if (point && transform) {\n                    point = point.transformCopy(transform);\n                }\n                return point;\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.position) {\n                        this.options.position = options.position;\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            }\n        });\n        var CircleMarker = MarkerBase.extend({\n            options: {\n                radius: 4,\n                anchor: {\n                    x: 0,\n                    y: 0\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var options = this.options;\n                var position = options.position;\n                var segments = path.segments;\n                var targetSegment;\n                var point;\n                if (position == START) {\n                    targetSegment = segments[0];\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                }\n                if (targetSegment) {\n                    point = this._transformToPath(targetSegment.anchor(), path);\n                    this.drawingElement.transform(g.transform().translate(point.x, point.y));\n                }\n            }\n        });\n        var ArrowMarker = MarkerBase.extend({\n            options: {\n                path: 'M 0 0 L 10 5 L 0 10 L 3 5 z',\n                anchor: {\n                    x: 10,\n                    y: 5\n                }\n            },\n            createElement: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.path, {\n                    fill: options.fill,\n                    stroke: options.stroke\n                });\n            },\n            positionMarker: function (path) {\n                var points = this._linePoints(path);\n                var start = points.start;\n                var end = points.end;\n                var transform = g.transform();\n                if (start) {\n                    transform.rotate(lineAngle(start, end), end);\n                }\n                if (end) {\n                    var anchor = this.anchor;\n                    var translate = end.clone().translate(-anchor.x, -anchor.y);\n                    transform.translate(translate.x, translate.y);\n                }\n                this.drawingElement.transform(transform);\n            },\n            _linePoints: function (path) {\n                var options = this.options;\n                var segments = path.segments;\n                var startPoint, endPoint, targetSegment;\n                if (options.position == START) {\n                    targetSegment = segments[0];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlOut();\n                        var nextSegment = segments[1];\n                        if (!startPoint && nextSegment) {\n                            startPoint = nextSegment.anchor();\n                        }\n                    }\n                } else {\n                    targetSegment = segments[segments.length - 1];\n                    if (targetSegment) {\n                        endPoint = targetSegment.anchor();\n                        startPoint = targetSegment.controlIn();\n                        var prevSegment = segments[segments.length - 2];\n                        if (!startPoint && prevSegment) {\n                            startPoint = prevSegment.anchor();\n                        }\n                    }\n                }\n                if (endPoint) {\n                    return {\n                        start: this._transformToPath(startPoint, path),\n                        end: this._transformToPath(endPoint, path)\n                    };\n                }\n            }\n        });\n        var MarkerPathMixin = {\n            _getPath: function (position) {\n                var path = this.drawingElement;\n                if (path instanceof d.MultiPath) {\n                    if (position == START) {\n                        path = path.paths[0];\n                    } else {\n                        path = path.paths[path.paths.length - 1];\n                    }\n                }\n                if (path && path.segments.length) {\n                    return path;\n                }\n            },\n            _normalizeMarkerOptions: function (options) {\n                var startCap = options.startCap;\n                var endCap = options.endCap;\n                if (isString(startCap)) {\n                    options.startCap = { type: startCap };\n                }\n                if (isString(endCap)) {\n                    options.endCap = { type: endCap };\n                }\n            },\n            _removeMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    this.drawingContainer().remove(marker.drawingElement);\n                    delete this._markers[position];\n                }\n            },\n            _createMarkers: function () {\n                var options = this.options;\n                this._normalizeMarkerOptions(options);\n                this._markers = {};\n                this._markers[START] = this._createMarker(options.startCap, START);\n                this._markers[END] = this._createMarker(options.endCap, END);\n            },\n            _createMarker: function (options, position) {\n                var type = (options || {}).type;\n                var path = this._getPath(position);\n                var markerType, marker;\n                if (!path) {\n                    this._removeMarker(position);\n                    return;\n                }\n                if (type == Markers.filledCircle) {\n                    markerType = CircleMarker;\n                } else if (type == Markers.arrowStart || type == Markers.arrowEnd) {\n                    markerType = ArrowMarker;\n                } else {\n                    this._removeMarker(position);\n                }\n                if (markerType) {\n                    marker = new markerType(deepExtend({}, options, { position: position }));\n                    marker.positionMarker(path);\n                    this.drawingContainer().append(marker.drawingElement);\n                    return marker;\n                }\n            },\n            _positionMarker: function (position) {\n                var marker = this._markers[position];\n                if (marker) {\n                    var path = this._getPath(position);\n                    if (path) {\n                        marker.positionMarker(path);\n                    } else {\n                        this._removeMarker(position);\n                    }\n                }\n            },\n            _capMap: {\n                start: 'startCap',\n                end: 'endCap'\n            },\n            _redrawMarker: function (pathChange, position, options) {\n                this._normalizeMarkerOptions(options);\n                var pathOptions = this.options;\n                var cap = this._capMap[position];\n                var pathCapType = (pathOptions[cap] || {}).type;\n                var optionsCap = options[cap];\n                var created = false;\n                if (optionsCap) {\n                    pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                    if (optionsCap.type && pathCapType != optionsCap.type) {\n                        this._removeMarker(position);\n                        this._markers[position] = this._createMarker(pathOptions[cap], position);\n                        created = true;\n                    } else if (this._markers[position]) {\n                        this._markers[position].redraw(optionsCap);\n                    }\n                } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created = true;\n                }\n                return created;\n            },\n            _redrawMarkers: function (pathChange, options) {\n                if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                    this._positionMarker(START);\n                }\n                if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                    this._positionMarker(END);\n                }\n            }\n        };\n        var Path = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._createElements();\n                this._initSize();\n            },\n            options: { autoSize: true },\n            drawingContainer: function () {\n                return this.container;\n            },\n            data: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (options.data != value) {\n                        options.data = value;\n                        this._setData(value);\n                        this._initSize();\n                        this._redrawMarkers(true, {});\n                    }\n                } else {\n                    return options.data;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    VisualBase.fn.redraw.call(this, options);\n                    var pathOptions = this.options;\n                    var data = options.data;\n                    if (defined(data) && pathOptions.data != data) {\n                        pathOptions.data = data;\n                        this._setData(data);\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._updateSize(options);\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _createElements: function () {\n                var options = this.options;\n                this.drawingElement = d.Path.parse(options.data || '', { stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                this._createMarkers();\n            },\n            _setData: function (data) {\n                var drawingElement = this.drawingElement;\n                var multipath = d.Path.parse(data || '');\n                var paths = multipath.paths.slice(0);\n                multipath.paths.elements([]);\n                drawingElement.paths.elements(paths);\n            }\n        });\n        deepExtend(Path.fn, AutoSizeableMixin);\n        deepExtend(Path.fn, MarkerPathMixin);\n        var Line = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            redraw: function (options) {\n                if (options) {\n                    options = options || {};\n                    var from = options.from;\n                    var to = options.to;\n                    if (from) {\n                        this.options.from = from;\n                    }\n                    if (to) {\n                        this.options.to = to;\n                    }\n                    if (from || to) {\n                        this._drawPath();\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this._drawPath();\n                this.container.append(drawingElement);\n            },\n            _drawPath: function () {\n                var options = this.options;\n                var drawingElement = this.drawingElement;\n                var from = options.from || new Point();\n                var to = options.to || new Point();\n                drawingElement.segments.elements([\n                    createSegment(from.x, from.y),\n                    createSegment(to.x, to.y)\n                ]);\n            }\n        });\n        deepExtend(Line.fn, MarkerPathMixin);\n        var Polyline = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this.container = new d.Group();\n                this._initPath();\n                this._createMarkers();\n            },\n            drawingContainer: function () {\n                return this.container;\n            },\n            points: function (points) {\n                var options = this.options;\n                if (points) {\n                    options.points = points;\n                    this._updatePath();\n                } else {\n                    return options.points;\n                }\n            },\n            redraw: function (options) {\n                if (options) {\n                    var points = options.points;\n                    VisualBase.fn.redraw.call(this, options);\n                    if (points && this._pointsDiffer(points)) {\n                        this.points(points);\n                        this._redrawMarkers(true, options);\n                    } else {\n                        this._redrawMarkers(false, options);\n                    }\n                }\n            },\n            _initPath: function () {\n                var options = this.options;\n                this.drawingElement = new d.Path({ stroke: options.stroke });\n                this._fill();\n                this.container.append(this.drawingElement);\n                if (options.points) {\n                    this._updatePath();\n                }\n            },\n            _pointsDiffer: function (points) {\n                var currentPoints = this.options.points;\n                var differ = currentPoints.length !== points.length;\n                if (!differ) {\n                    for (var i = 0; i < points.length; i++) {\n                        if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                            differ = true;\n                            break;\n                        }\n                    }\n                }\n                return differ;\n            },\n            _updatePath: function () {\n                var drawingElement = this.drawingElement;\n                var options = this.options;\n                var points = options.points;\n                var segments = [];\n                var point;\n                for (var i = 0; i < points.length; i++) {\n                    point = points[i];\n                    segments.push(createSegment(point.x, point.y));\n                }\n                drawingElement.segments.elements(segments);\n            },\n            options: { points: [] }\n        });\n        deepExtend(Polyline.fn, MarkerPathMixin);\n        var Image = Element.extend({\n            init: function (options) {\n                Element.fn.init.call(this, options);\n                this._initImage();\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (options.source) {\n                        this.drawingElement.src(options.source);\n                    }\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.drawingElement.rect(this._rect());\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _initImage: function () {\n                var options = this.options;\n                var rect = this._rect();\n                this.drawingElement = new d.Image(options.source, rect, {});\n            },\n            _rect: function () {\n                var sizeOptions = sizeOptionsOrDefault(this.options);\n                var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n                var size = new g.Size(sizeOptions.width, sizeOptions.height);\n                return new g.Rect(origin, size);\n            }\n        });\n        var Group = Element.extend({\n            init: function (options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Group();\n                this._initSize();\n            },\n            options: { autoSize: false },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                this.children.push(visual);\n                this._childrenChange = true;\n            },\n            remove: function (visual) {\n                if (this._remove(visual)) {\n                    this._childrenChange = true;\n                }\n            },\n            _remove: function (visual) {\n                var index = inArray(visual, this.children);\n                if (index >= 0) {\n                    this.drawingElement.removeAt(index);\n                    this.children.splice(index, 1);\n                    return true;\n                }\n            },\n            clear: function () {\n                this.drawingElement.clear();\n                this.children = [];\n                this._childrenChange = true;\n            },\n            toFront: function (visuals) {\n                var visual;\n                for (var i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    if (this._remove(visual)) {\n                        this.append(visual);\n                    }\n                }\n            },\n            toBack: function (visuals) {\n                this._reorderChildren(visuals, 0);\n            },\n            toIndex: function (visuals, indices) {\n                this._reorderChildren(visuals, indices);\n            },\n            _reorderChildren: function (visuals, indices) {\n                var group = this.drawingElement;\n                var drawingChildren = group.children.slice(0);\n                var children = this.children;\n                var fixedPosition = isNumber(indices);\n                var i, index, toIndex, drawingElement, visual;\n                for (i = 0; i < visuals.length; i++) {\n                    visual = visuals[i];\n                    drawingElement = visual.drawingContainer();\n                    index = inArray(visual, children);\n                    if (index >= 0) {\n                        drawingChildren.splice(index, 1);\n                        children.splice(index, 1);\n                        toIndex = fixedPosition ? indices : indices[i];\n                        drawingChildren.splice(toIndex, 0, drawingElement);\n                        children.splice(toIndex, 0, visual);\n                    }\n                }\n                group.clear();\n                group.append.apply(group, drawingChildren);\n            },\n            redraw: function (options) {\n                if (options) {\n                    if (this._childrenChange) {\n                        this._childrenChange = false;\n                        if (!this._updateSize(options)) {\n                            this._initSize();\n                        }\n                    } else {\n                        this._updateSize(options);\n                    }\n                    Element.fn.redraw.call(this, options);\n                }\n            },\n            _boundingBox: function () {\n                var children = this.children;\n                var boundingBox;\n                var visual, childBoundingBox;\n                for (var i = 0; i < children.length; i++) {\n                    visual = children[i];\n                    if (visual.visible() && visual._includeInBBox !== false) {\n                        childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                        if (childBoundingBox) {\n                            if (boundingBox) {\n                                boundingBox = g.Rect.union(boundingBox, childBoundingBox);\n                            } else {\n                                boundingBox = childBoundingBox;\n                            }\n                        }\n                    }\n                }\n                return boundingBox;\n            }\n        });\n        deepExtend(Group.fn, AutoSizeableMixin);\n        var Layout = Group.extend({\n            init: function (rect, options) {\n                this.children = [];\n                Element.fn.init.call(this, options);\n                this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n                this._initSize();\n            },\n            rect: function (rect) {\n                if (rect) {\n                    this.drawingElement.rect(toDrawingRect(rect));\n                } else {\n                    var drawingRect = this.drawingElement.rect();\n                    if (drawingRect) {\n                        return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                    }\n                }\n            },\n            reflow: function () {\n                this.drawingElement.reflow();\n            },\n            redraw: function (options) {\n                kendo.deepExtend(this.drawingElement.options, options);\n                Group.fn.redraw.call(this, options);\n            }\n        });\n        var Circle = VisualBase.extend({\n            init: function (options) {\n                VisualBase.fn.init.call(this, options);\n                this._initCircle();\n                this._initSize();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var circleOptions = this.options;\n                    if (options.center) {\n                        deepExtend(circleOptions, { center: options.center });\n                        this._center.move(circleOptions.center.x, circleOptions.center.y);\n                    }\n                    if (this._diffNumericOptions(options, ['radius'])) {\n                        this._circle.setRadius(circleOptions.radius);\n                    }\n                    this._updateSize(options);\n                    VisualBase.fn.redraw.call(this, options);\n                }\n            },\n            _initCircle: function () {\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var radius = options.radius;\n                if (!defined(radius)) {\n                    if (!defined(width)) {\n                        width = height;\n                    }\n                    if (!defined(height)) {\n                        height = width;\n                    }\n                    options.radius = radius = Math.min(width, height) / 2;\n                }\n                var center = options.center || {\n                    x: radius,\n                    y: radius\n                };\n                this._center = new g.Point(center.x, center.y);\n                this._circle = new g.Circle(this._center, radius);\n                this.drawingElement = new d.Circle(this._circle, { stroke: options.stroke });\n                this._fill();\n            }\n        });\n        deepExtend(Circle.fn, AutoSizeableMixin);\n        var Canvas = Class.extend({\n            init: function (element, options) {\n                options = options || {};\n                this.element = element;\n                this.surface = d.Surface.create(element, options);\n                if (kendo.isFunction(this.surface.translate)) {\n                    this.translate = this._translate;\n                }\n                this.drawingElement = new d.Group();\n                this._viewBox = new Rect(0, 0, options.width, options.height);\n                this.size(this._viewBox);\n            },\n            bounds: function () {\n                var box = this.drawingElement.clippedBBox();\n                return new Rect(0, 0, box.width(), box.height());\n            },\n            size: function (size) {\n                var viewBox = this._viewBox;\n                if (defined(size)) {\n                    viewBox.width = size.width;\n                    viewBox.height = size.height;\n                    this.surface.setSize(size);\n                }\n                return {\n                    width: viewBox.width,\n                    height: viewBox.height\n                };\n            },\n            _translate: function (x, y) {\n                var viewBox = this._viewBox;\n                if (defined(x) && defined(y)) {\n                    viewBox.x = x;\n                    viewBox.y = y;\n                    this.surface.translate({\n                        x: x,\n                        y: y\n                    });\n                }\n                return {\n                    x: viewBox.x,\n                    y: viewBox.y\n                };\n            },\n            draw: function () {\n                this.surface.draw(this.drawingElement);\n            },\n            append: function (visual) {\n                this.drawingElement.append(visual.drawingContainer());\n                return this;\n            },\n            remove: function (visual) {\n                this.drawingElement.remove(visual.drawingContainer());\n            },\n            insertBefore: function () {\n            },\n            clear: function () {\n                this.drawingElement.clear();\n            },\n            destroy: function (clearHtml) {\n                this.surface.destroy();\n                if (clearHtml) {\n                    $(this.element).remove();\n                }\n            }\n        });\n        function sizeOptionsOrDefault(options) {\n            return {\n                x: options.x || 0,\n                y: options.y || 0,\n                width: options.width || 0,\n                height: options.height || 0\n            };\n        }\n        function normalizeDrawingOptions(options) {\n            if (options) {\n                var drawingOptions = options;\n                if (isString(drawingOptions)) {\n                    drawingOptions = { color: drawingOptions };\n                }\n                if (drawingOptions.color) {\n                    drawingOptions.color = getColor(drawingOptions.color);\n                }\n                return drawingOptions;\n            }\n        }\n        function getColor(value) {\n            var color;\n            if (value != TRANSPARENT) {\n                color = new d.Color(value).toHex();\n            } else {\n                color = value;\n            }\n            return color;\n        }\n        function lineAngle(p1, p2) {\n            var xDiff = p2.x - p1.x;\n            var yDiff = p2.y - p1.y;\n            var angle = kendo.util.deg(Math.atan2(yDiff, xDiff));\n            return angle;\n        }\n        function createSegment(x, y) {\n            return new d.Segment(new g.Point(x, y));\n        }\n        function toDrawingRect(rect) {\n            if (rect) {\n                return new g.Rect([\n                    rect.x,\n                    rect.y\n                ], [\n                    rect.width,\n                    rect.height\n                ]);\n            }\n        }\n        kendo.deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            diffNumericOptions: diffNumericOptions,\n            Element: Element,\n            Scale: Scale,\n            Translation: Translation,\n            Rotation: Rotation,\n            Circle: Circle,\n            Group: Group,\n            Rectangle: Rectangle,\n            Canvas: Canvas,\n            Path: Path,\n            Layout: Layout,\n            Line: Line,\n            MarkerBase: MarkerBase,\n            ArrowMarker: ArrowMarker,\n            CircleMarker: CircleMarker,\n            Polyline: Polyline,\n            CompositeTransform: CompositeTransform,\n            TextBlock: TextBlock,\n            Image: Image,\n            VisualBase: VisualBase\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/services', [\n        'kendo.drawing',\n        'dataviz/diagram/svg'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, dataviz = kendo.dataviz, diagram = dataviz.diagram, Class = kendo.Class, Group = diagram.Group, Rect = diagram.Rect, Rectangle = diagram.Rectangle, Utils = diagram.Utils, isUndefined = Utils.isUndefined, Point = diagram.Point, Circle = diagram.Circle, Ticker = diagram.Ticker, deepExtend = kendo.deepExtend, Movable = kendo.ui.Movable, browser = kendo.support.browser, defined = kendo.util.defined, inArray = $.inArray, proxy = $.proxy;\n        var Cursors = {\n                arrow: 'default',\n                grip: 'pointer',\n                cross: 'pointer',\n                add: 'pointer',\n                move: 'move',\n                select: 'pointer',\n                south: 's-resize',\n                east: 'e-resize',\n                west: 'w-resize',\n                north: 'n-resize',\n                rowresize: 'row-resize',\n                colresize: 'col-resize'\n            }, HIT_TEST_DISTANCE = 10, AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', DEFAULT_SNAP_SIZE = 10, DEFAULT_SNAP_ANGLE = 10, DRAG_START = 'dragStart', DRAG = 'drag', DRAG_END = 'dragEnd', ITEMROTATE = 'itemRotate', ITEMBOUNDSCHANGE = 'itemBoundsChange', MIN_SNAP_SIZE = 5, MIN_SNAP_ANGLE = 5, MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', SCROLL_MIN = -20000, SCROLL_MAX = 20000, FRICTION = 0.9, FRICTION_MOBILE = 0.93, VELOCITY_MULTIPLIER = 5, TRANSPARENT = 'transparent', PAN = 'pan', ROTATED = 'rotated', SOURCE = 'source', TARGET = 'target', HANDLE_NAMES = {\n                '-1': SOURCE,\n                '1': TARGET\n            };\n        diagram.Cursors = Cursors;\n        var PositionAdapter = kendo.Class.extend({\n            init: function (layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function () {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function (tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    this.subjects[i].position(new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick));\n                }\n            }\n        });\n        var LayoutUndoUnit = Class.extend({\n            init: function (initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                } else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = 'Diagram layout';\n            },\n            undo: function () {\n                this.setState(this._initialState);\n            },\n            redo: function () {\n                this.setState(this._finalState);\n            },\n            setState: function (state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        conn.visible(false);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function () {\n                        state.linkMap.forEach(function (id) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(true);\n                        });\n                    });\n                    ticker.play();\n                } else {\n                    state.nodeMap.forEach(function (id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(function (id, points) {\n                        var conn = diagram.getShapeById(id);\n                        if (conn) {\n                            conn.points(points);\n                        }\n                    });\n                }\n            }\n        });\n        var CompositeUnit = Class.extend({\n            init: function (unit) {\n                this.units = [];\n                this.title = 'Composite unit';\n                if (unit !== undefined) {\n                    this.units.push(unit);\n                }\n            },\n            add: function (undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n        var ConnectionEditUnit = Class.extend({\n            init: function (item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                if (this._undoSource !== undefined) {\n                    this.item._updateConnector(this._undoSource, 'source');\n                }\n                if (this._undoTarget !== undefined) {\n                    this.item._updateConnector(this._undoTarget, 'target');\n                }\n                this.item.updateModel();\n            },\n            redo: function () {\n                if (this._redoSource !== undefined) {\n                    this.item._updateConnector(this._redoSource, 'source');\n                }\n                if (this._redoTarget !== undefined) {\n                    this.item._updateConnector(this._redoTarget, 'target');\n                }\n                this.item.updateModel();\n            }\n        });\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function (item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = 'Connection Editing';\n            },\n            undo: function () {\n                this.item._updateConnector(this._undoSource, 'source');\n                this.item._updateConnector(this._undoTarget, 'target');\n                this.item.updateModel();\n            },\n            redo: function () {\n                this.item._updateConnector(this._redoSource, 'source');\n                this.item._updateConnector(this._redoTarget, 'target');\n                this.item.updateModel();\n            }\n        });\n        var DeleteConnectionUnit = Class.extend({\n            init: function (connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = 'Delete connection';\n            },\n            undo: function () {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function () {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n        var DeleteShapeUnit = Class.extend({\n            init: function (shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = 'Deletion';\n            },\n            undo: function () {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function () {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        var TransformUnit = Class.extend({\n            init: function (shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = 'Transformation';\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var AddConnectionUnit = Class.extend({\n            init: function (connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = 'New connection';\n            },\n            undo: function () {\n                this.diagram.remove(this.connection, false);\n            },\n            redo: function () {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n        var AddShapeUnit = Class.extend({\n            init: function (shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = 'New shape';\n            },\n            undo: function () {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n            redo: function () {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n        var PanUndoUnit = Class.extend({\n            init: function (initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = 'Pan Unit';\n            },\n            undo: function () {\n                this.diagram.pan(this.initial);\n            },\n            redo: function () {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n        var RotateUnit = Class.extend({\n            init: function (adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = 'Rotation';\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty('layout')) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n        var ToFrontUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n        var ToBackUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = 'Rotate Unit';\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n        var UndoRedoService = kendo.Observable.extend({\n            init: function (options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n            events: [\n                'undone',\n                'redone'\n            ],\n            begin: function () {\n                this.composite = new CompositeUnit();\n            },\n            cancel: function () {\n                this.composite = undefined;\n            },\n            commit: function (execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined;\n            },\n            addCompositeItem: function (undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n            add: function (undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n            pop: function () {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n            count: function () {\n                return this.stack.length;\n            },\n            undo: function () {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger('undone');\n                }\n            },\n            redo: function () {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger('redone');\n                }\n            },\n            _restart: function (composite, execute) {\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity;\n                }\n            },\n            clear: function () {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n        var EmptyTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            start: function () {\n            },\n            move: function () {\n            },\n            end: function () {\n            },\n            tryActivate: function () {\n                return false;\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ScrollerTool = EmptyTool.extend({\n            init: function (toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n                var diagram = tool.toolService.diagram, canvas = diagram.canvas;\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: proxy(tool._move, tool)\n                }).data('kendoMobileScroller');\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n                var virtualScroll = function (dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n                if (defined(options.key)) {\n                    if (!options.key || options.key == 'none') {\n                        enabled = noMeta(meta) && !defined(toolService.hoveredItem);\n                    } else {\n                        enabled = meta[options.key + 'Key'];\n                    }\n                }\n                return options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n            start: function () {\n                this.scroller.enable();\n            },\n            move: function () {\n            },\n            _move: function (args) {\n                var tool = this, diagram = tool.toolService.diagram, canvas = diagram.canvas, scrollPos = new Point(args.scrollLeft, args.scrollTop);\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n                diagram.trigger(PAN, { pan: scrollPos });\n            },\n            end: function () {\n                this.scroller.disable();\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        var PointerTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function () {\n                return true;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, hoveredItem = toolService.hoveredItem;\n                if (hoveredItem) {\n                    toolService.selectSingle(hoveredItem, meta);\n                    if (hoveredItem.adorner) {\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n            move: function (p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, {\n                            shapes: this.adorner.shapes,\n                            connections: []\n                        });\n                    }\n                }\n            },\n            end: function () {\n                var diagram = this.toolService.diagram, adorner = this.adorner, unit;\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, {\n                            shapes: adorner.shapes,\n                            connections: []\n                        })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n                this.adorner = undefined;\n                this.handle = undefined;\n            },\n            getCursor: function (p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n        var SelectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var selectable = toolService.diagram.options.selectable;\n                var enabled = selectable && selectable.multiple !== false;\n                if (enabled) {\n                    if (selectable.key && selectable.key != 'none') {\n                        enabled = meta[selectable.key + 'Key'];\n                    } else {\n                        enabled = noMeta(meta);\n                    }\n                }\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function () {\n                return this.toolService._hoveredConnector;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, connector = toolService._hoveredConnector, connection = diagram._createConnection({}, connector._c, p);\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    }) && diagram._addConnection(connection)) {\n                    toolService._connectionManipulation(connection, connector._c.shape, true);\n                    toolService._removeHover();\n                    toolService.selectSingle(toolService.activeConnection, meta);\n                    if (meta.type == 'touchmove') {\n                        diagram._cachedTouchTarget = connector.visual;\n                    }\n                } else {\n                    connection.source(null);\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, {\n                    shapes: [],\n                    connections: [connection],\n                    connectionHandle: TARGET\n                });\n                return true;\n            },\n            end: function (p) {\n                var toolService = this.toolService, d = toolService.diagram, connection = toolService.activeConnection, hoveredItem = toolService.hoveredItem, connector = toolService._hoveredConnector, target, cachedTouchTarget = d._cachedTouchTarget;\n                if (!connection) {\n                    return;\n                }\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n                connection.target(target);\n                if (!d.trigger(DRAG_END, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: TARGET\n                    })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n                if (cachedTouchTarget) {\n                    d._connectorsAdorner.visual.remove(cachedTouchTarget);\n                    d._cachedTouchTarget = null;\n                }\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n        var ConnectionEditTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = 'ConnectionTool';\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService, diagram = toolService.diagram, selectable = diagram.options.selectable, item = toolService.hoveredItem, isActive = selectable !== false && item && item.path && !(item.isSelected && meta.ctrlKey);\n                if (isActive) {\n                    this._c = item;\n                }\n                return isActive;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService;\n                var connection = this._c;\n                toolService.selectSingle(connection, meta);\n                var adorner = connection.adorner;\n                var handle, name;\n                if (adorner) {\n                    handle = adorner._hitTest(p);\n                    name = HANDLE_NAMES[handle];\n                }\n                if (canDrag(connection) && adorner && !toolService.diagram.trigger(DRAG_START, {\n                        shapes: [],\n                        connections: [connection],\n                        connectionHandle: name\n                    })) {\n                    this.handle = handle;\n                    this.handleName = name;\n                    adorner.start(p);\n                } else {\n                    toolService.startPoint = p;\n                    toolService.end(p);\n                }\n            },\n            move: function (p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, {\n                        shapes: [],\n                        connections: [this._c],\n                        connectionHandle: this.handleName\n                    });\n                    return true;\n                }\n            },\n            end: function (p) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n                if (adorner) {\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, {\n                                shapes: [],\n                                connections: [connection],\n                                connectionHandle: this.handleName\n                            })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n        var ToolService = Class.extend({\n            init: function (diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ];\n                this.activeTool = undefined;\n            },\n            start: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.diagram.canvas.surface.suspendTracking();\n                this.startPoint = p;\n                return true;\n            },\n            move: function (p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n            end: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.diagram.canvas.surface.resumeTracking();\n                this.activeTool = undefined;\n                this._updateCursor(p);\n                return true;\n            },\n            keyDown: function (key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {\n                    if (testKey(key, 'a')) {\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'z')) {\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'y')) {\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, 'c')) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'x')) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'v')) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'l')) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, 'd')) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n                    return true;\n                } else if (key === 27) {\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n            },\n            wheel: function (p, meta) {\n                var diagram = this.diagram, delta = meta.delta, z = diagram.zoom(), options = diagram.options, zoomRate = options.zoomRate, zoomOptions = {\n                        point: p,\n                        meta: meta,\n                        zoom: z\n                    };\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n                z = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n                return true;\n            },\n            setTool: function (tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n            selectSingle: function (item, meta) {\n                var diagram = this.diagram;\n                var selectable = diagram.options.selectable;\n                if (selectable && !item.isSelected && item.options.selectable !== false) {\n                    var addToSelection = meta.ctrlKey && selectable.multiple !== false;\n                    diagram.select(item, { addToSelection: addToSelection });\n                }\n            },\n            _discardNewConnection: function () {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined;\n                }\n            },\n            _activateTool: function (p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break;\n                    }\n                }\n            },\n            _updateCursor: function (p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow;\n                element.css({ cursor: cursor });\n                if (browser.msie && browser.version == 7) {\n                    element[0].style.cssText = element[0].style.cssText;\n                }\n            },\n            _connectionManipulation: function (connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined;\n                }\n            },\n            _updateHoveredItem: function (p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n                        this.hoveredItem = hit;\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined;\n                    }\n                }\n            },\n            _removeHover: function () {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined;\n                }\n            },\n            _hitTest: function (point) {\n                var hit, d = this.diagram, item, i;\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) {\n                        return;\n                    }\n                    hit = undefined;\n                } else {\n                    this.hoveredAdorner = undefined;\n                }\n                if (!this.activeTool || this.activeTool.type !== 'ConnectionTool') {\n                    var selectedConnections = [];\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n                return hit || this._hitTestElements(point);\n            },\n            _hitTestElements: function (point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n                if ((!this.activeTool || this.activeTool.type != 'ConnectionTool') && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n            _hitTestItems: function (array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function () {\n            }\n        });\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function (connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            hitTest: function (p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n            getBounds: function () {\n                var points = this.connection.allPoints(), s = points[0], e = points[points.length - 1], right = Math.max(s.x, e.x), left = Math.min(s.x, e.x), top = Math.min(s.y, e.y), bottom = Math.max(s.y, e.y);\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function () {\n            }\n        });\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            routePoints: function (start, end, sourceConnector, targetConnector) {\n                var result;\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n            route: function () {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n            _connectorSides: [\n                {\n                    name: 'Top',\n                    axis: 'y',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Left',\n                    axis: 'x',\n                    boundsPoint: 'topLeft',\n                    secondarySign: 1\n                },\n                {\n                    name: 'Bottom',\n                    axis: 'y',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                },\n                {\n                    name: 'Right',\n                    axis: 'x',\n                    boundsPoint: 'bottomRight',\n                    secondarySign: -1\n                }\n            ],\n            _connectorSide: function (connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = kendo.util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min && (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n            _sameSideDistance: function (connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n            _connectorPoints: function (start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(start.x, pointY),\n                                new Point(end.x, pointY)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x, start.y + deltaY / 2),\n                                new Point(end.x, start.y + deltaY / 2)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [\n                                new Point(pointX, start.y),\n                                new Point(pointX, end.y)\n                            ];\n                        } else {\n                            result = [\n                                new Point(start.x + deltaX / 2, start.y),\n                                new Point(start.x + deltaX / 2, start.y + deltaY)\n                            ];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n            _floatingPoints: function (start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [\n                    start,\n                    start,\n                    end,\n                    end\n                ];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        } else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    } else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        } else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                idx--;\n                if (cascadeStartHorizontal && idx % 2 !== 0 || !cascadeStartHorizontal && idx % 2 === 0) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n                return [\n                    points[1],\n                    points[2]\n                ];\n            },\n            _startHorizontal: function (start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n                return horizontal;\n            }\n        });\n        var AdornerBase = Class.extend({\n            init: function (diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function () {\n            }\n        });\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function (connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n            options: { handles: {} },\n            _getCursor: function () {\n                return Cursors.move;\n            },\n            start: function (p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                case -1:\n                    if (this.connection.targetConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                    }\n                    break;\n                case 1:\n                    if (this.connection.sourceConnector) {\n                        this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                    }\n                    break;\n                }\n            },\n            move: function (handle, p) {\n                switch (handle) {\n                case -1:\n                    this.connection.source(p);\n                    break;\n                case 1:\n                    this.connection.target(p);\n                    break;\n                default:\n                    var delta = p.minus(this.startPoint);\n                    this.startPoint = p;\n                    if (!this.connection.sourceConnector) {\n                        this.connection.source(this.connection.sourcePoint().plus(delta));\n                    }\n                    if (!this.connection.targetConnector) {\n                        this.connection.target(this.connection.targetPoint().plus(delta));\n                    }\n                    break;\n                }\n                this.refresh();\n                return true;\n            },\n            stop: function (p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n                this.handle = undefined;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n            _hitTest: function (point) {\n                var sourcePoint = this.connection.sourcePoint();\n                var targetPoint = this.connection.targetPoint();\n                var radiusX = this.options.handles.width / 2 + HIT_TEST_DISTANCE;\n                var radiusY = this.options.handles.height / 2 + HIT_TEST_DISTANCE;\n                var sourcePointDistance = sourcePoint.distanceTo(point);\n                var targetPointDistance = targetPoint.distanceTo(point);\n                var sourceHandle = new Rect(sourcePoint.x, sourcePoint.y).inflate(radiusX, radiusY).contains(point);\n                var targetHandle = new Rect(targetPoint.x, targetPoint.y).inflate(radiusX, radiusY).contains(point);\n                var handle = 0;\n                if (sourceHandle && (!targetHandle || sourcePointDistance < targetPointDistance)) {\n                    handle = -1;\n                } else if (targetHandle && (!sourceHandle || targetPointDistance < sourcePointDistance)) {\n                    handle = 1;\n                }\n                return handle;\n            },\n            refresh: function () {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function (e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n            show: function (shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that._clearVisual();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n            _clearVisual: function () {\n                var that = this;\n                if (that.diagram._cachedTouchTarget) {\n                    that._keepCachedTouchTarget();\n                } else {\n                    that.visual.clear();\n                }\n            },\n            _keepCachedTouchTarget: function () {\n                var that = this, visualChildren = that.visual.children;\n                var childrenCount = visualChildren.length;\n                var index = inArray(that.diagram._cachedTouchTarget, visualChildren);\n                for (var i = childrenCount - 1; i >= 0; i--) {\n                    if (i == index) {\n                        continue;\n                    }\n                    that.visual.remove(visualChildren[i]);\n                }\n            },\n            destroy: function () {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined;\n                that._visible = undefined;\n                that.visual.visible(false);\n            },\n            _hitTest: function (p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n            refresh: function () {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                    bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function () {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n            return result;\n        }\n        var ResizingAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind('select', function (e) {\n                    that._initialize(e.selected);\n                });\n                that._refreshHandler = function () {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n                that._rotatedHandler = function () {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n            options: {\n                handles: {\n                    fill: { color: '#fff' },\n                    stroke: { color: '#282828' },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: { color: '#282828' },\n                        stroke: { color: '#282828' }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: '#778899',\n                        width: 1,\n                        dashType: 'dash'\n                    },\n                    fill: { color: TRANSPARENT }\n                },\n                offset: 10\n            },\n            _initSelection: function () {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n            _resizable: function () {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n            _handleOptions: function () {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n            _createHandles: function () {\n                var handles, item, y, x;\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if (x !== 0 || y !== 0) {\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = proxy(this._hover, this);\n                                this.map.push({\n                                    x: x,\n                                    y: y,\n                                    visual: item\n                                });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n            _hitTest: function (p) {\n                var tp = this.diagram.modelToLayer(p), i, hit, handleBounds, handlesCount = this.map.length, handle;\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._bounds.center(), this._angle);\n                }\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit);\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n            _getHandleBounds: function (p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(), w = handles.width, h = handles.height, r = new Rect(0, 0, w, h);\n                    if (p.x < 0) {\n                        r.x = -w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1 - w / 2;\n                    }\n                    if (p.y < 0) {\n                        r.y = -h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1 - h / 2;\n                    }\n                    return r;\n                }\n            },\n            _getCursor: function (point) {\n                var hit = this._hitTest(point);\n                if (hit && hit.x >= -1 && hit.x <= 1 && hit.y >= -1 && hit.y <= 1 && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        angle = 360 - angle;\n                        hit.rotate(new Point(0, 0), angle);\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n                    if (hit.x == -1 && hit.y == -1) {\n                        return 'nw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return 'se-resize';\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return 'sw-resize';\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return 'ne-resize';\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return 'n-resize';\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return 's-resize';\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return 'e-resize';\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return 'w-resize';\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n            _initialize: function () {\n                var that = this, i, item, items = that.diagram.select();\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n            _rotates: function () {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n            _positions: function () {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n            _hover: function (value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(), hover = handleOptions.hover, stroke = handleOptions.stroke, fill = handleOptions.fill;\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n            start: function (p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n            redraw: function () {\n                var i, handle, visibleHandles = this._resizable();\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n            angle: function (value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n                return this._angle;\n            },\n            rotate: function () {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n            move: function (handle, p) {\n                var delta, dragging, dtl = new Point(), dbr = new Point(), bounds, center, shape, i, angle, newBounds, changed = 0, staticPoint, scaleX, scaleY;\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty('layout')) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta;\n                        dragging = true;\n                    } else {\n                        if (this._angle) {\n                            delta.rotate(new Point(0, 0), this._angle);\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center();\n                            newCenter.rotate(bounds.center(), -this._angle);\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) {\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty('layout')) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle);\n                            }\n                            changed += 1;\n                        }\n                    }\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n                    this._positions();\n                }\n                this._cp = p;\n            },\n            isDragHandle: function (handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n            cancel: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n            },\n            _truncatePositionToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateSizeToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n            _truncateAngle: function (a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor(a % 360 / snapAngle) * snapAngle : a % 360;\n            },\n            _truncateDistance: function (d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n            snapOptions: function () {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n            shouldSnap: function () {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n            _displaceBounds: function (bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl), br = bounds.bottomRight().plus(dbr), newBounds = Rect.fromPoints(tl, br), newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n            stop: function () {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n                return unit;\n            },\n            _diffStates: function () {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            refreshBounds: function () {\n                var bounds = this.shapes.length == 1 ? this.shapes[0].bounds().clone() : this.diagram.boundingBox(this.shapes, true);\n                this.bounds(bounds);\n            },\n            refresh: function () {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function () {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({\n                        width: bounds.width,\n                        height: bounds.height\n                    });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n        var Selector = Class.extend({\n            init: function (diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: '#778899',\n                    width: 1,\n                    dashType: 'dash'\n                },\n                fill: { color: TRANSPARENT }\n            },\n            start: function (p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function () {\n                this._sp = this._ep = undefined;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function (p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function () {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({\n                        height: visualBounds.height + 1,\n                        width: visualBounds.width + 1\n                    });\n                }\n            }\n        });\n        var ConnectorVisual = Class.extend({\n            init: function (connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function () {\n                var p = this._c.shape.diagram.modelToView(this._c.position()), relative = p.minus(this._c.shape.bounds('transformed').topLeft()), value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function (p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/layout', ['dataviz/diagram/math'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, diagram = kendo.dataviz.diagram, Graph = diagram.Graph, Node = diagram.Node, Link = diagram.Link, deepExtend = kendo.deepExtend, Size = diagram.Size, Rect = diagram.Rect, Dictionary = diagram.Dictionary, Set = diagram.Set, HyperTree = diagram.Graph, Utils = diagram.Utils, Point = diagram.Point, EPSILON = 0.000001, DEG_TO_RAD = Math.PI / 180, contains = Utils.contains, grep = $.grep;\n        var LayoutBase = kendo.Class.extend({\n            defaultOptions: {\n                type: 'Tree',\n                subtype: 'Down',\n                roots: null,\n                animate: false,\n                limitToView: false,\n                friction: 0.9,\n                nodeDistance: 50,\n                iterations: 300,\n                horizontalSeparation: 90,\n                verticalSeparation: 50,\n                underneathVerticalTopOffset: 15,\n                underneathHorizontalOffset: 15,\n                underneathVerticalSeparation: 15,\n                grid: {\n                    width: 1500,\n                    offsetX: 50,\n                    offsetY: 50,\n                    componentSpacingX: 20,\n                    componentSpacingY: 20\n                },\n                layerSeparation: 50,\n                layeredIterations: 2,\n                startRadialAngle: 0,\n                endRadialAngle: 360,\n                radialSeparation: 150,\n                radialFirstLevelSeparation: 200,\n                keepComponentsInOneRadialLayout: false,\n                ignoreContainers: true,\n                layoutContainerChildren: false,\n                ignoreInvisible: true,\n                animateTransitions: false\n            },\n            init: function () {\n            },\n            gridLayoutComponents: function (components) {\n                if (!components) {\n                    throw 'No components supplied.';\n                }\n                Utils.forEach(components, function (c) {\n                    c.calcBounds();\n                });\n                components.sort(function (a, b) {\n                    return b.bounds.width - a.bounds.width;\n                });\n                var maxWidth = this.options.grid.width, offsetX = this.options.grid.componentSpacingX, offsetY = this.options.grid.componentSpacingY, height = 0, startX = this.options.grid.offsetX, startY = this.options.grid.offsetY, x = startX, y = startY, i, resultLinkSet = [], resultNodeSet = [];\n                while (components.length > 0) {\n                    if (x >= maxWidth) {\n                        x = startX;\n                        y += height + offsetY;\n                        height = 0;\n                    }\n                    var component = components.pop();\n                    this.moveToOffset(component, new Point(x, y));\n                    for (i = 0; i < component.nodes.length; i++) {\n                        resultNodeSet.push(component.nodes[i]);\n                    }\n                    for (i = 0; i < component.links.length; i++) {\n                        resultLinkSet.push(component.links[i]);\n                    }\n                    var boundingRect = component.bounds;\n                    var currentHeight = boundingRect.height;\n                    if (currentHeight <= 0 || isNaN(currentHeight)) {\n                        currentHeight = 0;\n                    }\n                    var currentWidth = boundingRect.width;\n                    if (currentWidth <= 0 || isNaN(currentWidth)) {\n                        currentWidth = 0;\n                    }\n                    if (currentHeight >= height) {\n                        height = currentHeight;\n                    }\n                    x += currentWidth + offsetX;\n                }\n                return {\n                    nodes: resultNodeSet,\n                    links: resultLinkSet\n                };\n            },\n            moveToOffset: function (component, p) {\n                var i, j, bounds = component.bounds, deltax = p.x - bounds.x, deltay = p.y - bounds.y;\n                for (i = 0; i < component.nodes.length; i++) {\n                    var node = component.nodes[i];\n                    var nodeBounds = node.bounds();\n                    if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                        nodeBounds = new Rect(0, 0, 0, 0);\n                    }\n                    nodeBounds.x += deltax;\n                    nodeBounds.y += deltay;\n                    node.bounds(nodeBounds);\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    var link = component.links[i];\n                    if (link.points) {\n                        var newpoints = [];\n                        var points = link.points;\n                        for (j = 0; j < points.length; j++) {\n                            var pt = points[j];\n                            pt.x += deltax;\n                            pt.y += deltay;\n                            newpoints.push(pt);\n                        }\n                        link.points = newpoints;\n                    }\n                }\n                this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n                return new Point(deltax, deltay);\n            },\n            transferOptions: function (options) {\n                this.options = kendo.deepExtend({}, this.defaultOptions);\n                if (Utils.isUndefined(options)) {\n                    return;\n                }\n                this.options = kendo.deepExtend(this.options, options || {});\n            }\n        });\n        var DiagramToHyperTreeAdapter = kendo.Class.extend({\n            init: function (diagram) {\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.finalNodes = [];\n                this.finalLinks = [];\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.hyperMap = new Dictionary();\n                this.hyperTree = new Graph();\n                this.finalGraph = null;\n                this.diagram = diagram;\n            },\n            convert: function (options) {\n                if (Utils.isUndefined(this.diagram)) {\n                    throw 'No diagram to convert.';\n                }\n                this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                }, options || {});\n                this.clear();\n                this._renormalizeShapes();\n                this._renormalizeConnections();\n                this.finalNodes = new Dictionary(this.nodes);\n                this.finalLinks = new Dictionary(this.edges);\n                this.finalGraph = new Graph();\n                this.finalNodes.forEach(function (n) {\n                    this.finalGraph.addNode(n);\n                }, this);\n                this.finalLinks.forEach(function (l) {\n                    this.finalGraph.addExistingLink(l);\n                }, this);\n                return this.finalGraph;\n            },\n            mapConnection: function (connection) {\n                return this.edgeMap.get(connection.id);\n            },\n            mapShape: function (shape) {\n                return this.nodeMap.get(shape.id);\n            },\n            getEdge: function (a, b) {\n                return Utils.first(a.links, function (link) {\n                    return link.getComplement(a) === b;\n                });\n            },\n            clear: function () {\n                this.finalGraph = null;\n                this.hyperTree = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new HyperTree() : null;\n                this.hyperMap = !this.options.ignoreContainers && this.options.layoutContainerChildren ? new Dictionary() : null;\n                this.nodeMap = new Dictionary();\n                this.shapeMap = new Dictionary();\n                this.nodes = [];\n                this.edges = [];\n                this.edgeMap = new Dictionary();\n                this.ignoredConnections = [];\n                this.ignoredShapes = [];\n                this.finalNodes = [];\n                this.finalLinks = [];\n            },\n            listToRoot: function (containerGraph) {\n                var list = [];\n                var s = containerGraph.container;\n                if (!s) {\n                    return list;\n                }\n                list.push(s);\n                while (s.parentContainer) {\n                    s = s.parentContainer;\n                    list.push(s);\n                }\n                list.reverse();\n                return list;\n            },\n            firstNonIgnorableContainer: function (shape) {\n                if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                    return shape;\n                }\n                return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n            },\n            isContainerConnection: function (a, b) {\n                if (a.isContainer && this.isDescendantOf(a, b)) {\n                    return true;\n                }\n                return b.isContainer && this.isDescendantOf(b, a);\n            },\n            isDescendantOf: function (scope, a) {\n                if (!scope.isContainer) {\n                    throw 'Expecting a container.';\n                }\n                if (scope === a) {\n                    return false;\n                }\n                if (contains(scope.children, a)) {\n                    return true;\n                }\n                var containers = [];\n                for (var i = 0, len = scope.children.length; i < len; i++) {\n                    var c = scope.children[i];\n                    if (c.isContainer && this.isDescendantOf(c, a)) {\n                        containers.push(c);\n                    }\n                }\n                return containers.length > 0;\n            },\n            isIgnorableItem: function (shape) {\n                if (this.options.ignoreInvisible) {\n                    if (shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    if (!shape.isCollapsed && this._isVisible(shape)) {\n                        return false;\n                    }\n                    return true;\n                } else {\n                    return shape.isCollapsed && !this._isTop(shape);\n                }\n            },\n            isShapeMapped: function (shape) {\n                return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n            },\n            leastCommonAncestor: function (a, b) {\n                if (!a) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!b) {\n                    throw 'Parameter should not be null.';\n                }\n                if (!this.hyperTree) {\n                    throw 'No hypertree available.';\n                }\n                var al = this.listToRoot(a);\n                var bl = this.listToRoot(b);\n                var found = null;\n                if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                    return this.hyperTree.root.data;\n                }\n                var xa = al[0];\n                var xb = bl[0];\n                var i = 0;\n                while (xa === xb) {\n                    found = al[i];\n                    i++;\n                    if (i >= al.length || i >= bl.length) {\n                        break;\n                    }\n                    xa = al[i];\n                    xb = bl[i];\n                }\n                if (!found) {\n                    return this.hyperTree.root.data;\n                } else {\n                    return grep(this.hyperTree.nodes, function (n) {\n                        return n.data.container === found;\n                    });\n                }\n            },\n            _isTop: function (item) {\n                return !item.parentContainer;\n            },\n            _isVisible: function (shape) {\n                if (!shape.visible()) {\n                    return false;\n                }\n                return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n            },\n            _isCollapsed: function (shape) {\n                if (shape.isContainer && shape.isCollapsed) {\n                    return true;\n                }\n                return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n            },\n            _renormalizeShapes: function () {\n                if (this.options.ignoreContainers) {\n                    for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                        var shape = this.diagram.shapes[i];\n                        if (this.options.ignoreInvisible && !this._isVisible(shape) || shape.isContainer) {\n                            this.ignoredShapes.push(shape);\n                            continue;\n                        }\n                        var node = new Node(shape.id, shape);\n                        node.isVirtual = false;\n                        this.nodeMap.add(shape.id, node);\n                        this.nodes.push(node);\n                    }\n                } else {\n                    throw 'Containers are not supported yet, but stay tuned.';\n                }\n            },\n            _renormalizeConnections: function () {\n                if (this.diagram.connections.length === 0) {\n                    return;\n                }\n                for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                    var conn = this.diagram.connections[i];\n                    if (this.isIgnorableItem(conn)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                    var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n                    if (!source || !sink) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (this.shapeMap.containsKey(source)) {\n                        source = this.shapeMap[source];\n                    }\n                    if (this.shapeMap.containsKey(sink)) {\n                        sink = this.shapeMap[sink];\n                    }\n                    var sourceNode = this.mapShape(source);\n                    var sinkNode = this.mapShape(sink);\n                    if (sourceNode === sinkNode || this.areConnectedAlready(sourceNode, sinkNode)) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    if (sourceNode === null || sinkNode === null) {\n                        throw 'A shape was not mapped to a node.';\n                    }\n                    if (this.options.ignoreContainers) {\n                        if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                            this.ignoredConnections.push(conn);\n                            continue;\n                        }\n                        var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n                        this.edgeMap.add(conn.id, newEdge);\n                        this.edges.push(newEdge);\n                    } else {\n                        throw 'Containers are not supported yet, but stay tuned.';\n                    }\n                }\n            },\n            areConnectedAlready: function (n, m) {\n                return Utils.any(this.edges, function (l) {\n                    return l.source === n && l.target === m || l.source === m && l.target === n;\n                });\n            }\n        });\n        var SpringLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                var initialTemperature = this.options.nodeDistance * 9;\n                this.temperature = initialTemperature;\n                var guessBounds = this._expectedBounds();\n                this.width = guessBounds.width;\n                this.height = guessBounds.height;\n                for (var step = 0; step < this.options.iterations; step++) {\n                    this.refineStage = step >= this.options.iterations * 5 / 6;\n                    this.tick();\n                    this.temperature = this.refineStage ? initialTemperature / 30 : initialTemperature * (1 - step / (2 * this.options.iterations));\n                }\n            },\n            tick: function () {\n                var i;\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    this._repulsion(this.graph.nodes[i]);\n                }\n                for (i = 0; i < this.graph.links.length; i++) {\n                    this._attraction(this.graph.links[i]);\n                }\n                for (i = 0; i < this.graph.nodes.length; i++) {\n                    var node = this.graph.nodes[i];\n                    var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                    if (offset === 0) {\n                        return;\n                    }\n                    node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                    node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                    if (this.options.limitToView) {\n                        node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                        node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                    }\n                }\n            },\n            _shake: function (node) {\n                var rho = Math.random() * this.options.nodeDistance / 4;\n                var alpha = Math.random() * 2 * Math.PI;\n                node.x += rho * Math.cos(alpha);\n                node.y -= rho * Math.sin(alpha);\n            },\n            _InverseSquareForce: function (d, n, m) {\n                var force;\n                if (!this.refineStage) {\n                    force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n                } else {\n                    var deltax = n.x - m.x;\n                    var deltay = n.y - m.y;\n                    var wn = n.width / 2;\n                    var hn = n.height / 2;\n                    var wm = m.width / 2;\n                    var hm = m.height / 2;\n                    force = Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2) + Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2);\n                }\n                return force * 4 / 3;\n            },\n            _SquareForce: function (d, n, m) {\n                return 1 / this._InverseSquareForce(d, n, m);\n            },\n            _repulsion: function (n) {\n                n.dx = 0;\n                n.dy = 0;\n                Utils.forEach(this.graph.nodes, function (m) {\n                    if (m === n) {\n                        return;\n                    }\n                    while (n.x === m.x && n.y === m.y) {\n                        this._shake(m);\n                    }\n                    var vx = n.x - m.x;\n                    var vy = n.y - m.y;\n                    var distance = Math.sqrt(vx * vx + vy * vy);\n                    var r = this._SquareForce(distance, n, m) * 2;\n                    n.dx += vx / distance * r;\n                    n.dy += vy / distance * r;\n                }, this);\n            },\n            _attraction: function (link) {\n                var t = link.target;\n                var s = link.source;\n                if (s === t) {\n                    return;\n                }\n                while (s.x === t.x && s.y === t.y) {\n                    this._shake(t);\n                }\n                var vx = s.x - t.x;\n                var vy = s.y - t.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var a = this._InverseSquareForce(distance, s, t) * 5;\n                var dx = vx / distance * a;\n                var dy = vy / distance * a;\n                t.dx += dx;\n                t.dy += dy;\n                s.dx -= dx;\n                s.dy -= dy;\n            },\n            _expectedBounds: function () {\n                var size, N = this.graph.nodes.length, ratio = 1.5, multiplier = 4;\n                if (N === 0) {\n                    return size;\n                }\n                size = Utils.fold(this.graph.nodes, function (s, node) {\n                    var area = node.width * node.height;\n                    if (area > 0) {\n                        s += Math.sqrt(area);\n                        return s;\n                    }\n                    return 0;\n                }, 0, this);\n                var av = size / N;\n                var squareSize = av * Math.ceil(Math.sqrt(N));\n                var width = squareSize * Math.sqrt(ratio);\n                var height = squareSize / Math.sqrt(ratio);\n                return {\n                    width: width * multiplier,\n                    height: height * multiplier\n                };\n            }\n        });\n        var TreeLayoutProcessor = kendo.Class.extend({\n            init: function (options) {\n                this.center = null;\n                this.options = options;\n            },\n            layout: function (treeGraph, root) {\n                this.graph = treeGraph;\n                if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                    return;\n                }\n                if (!contains(this.graph.nodes, root)) {\n                    throw 'The given root is not in the graph.';\n                }\n                this.center = root;\n                this.graph.cacheRelationships();\n                this.layoutSwitch();\n            },\n            layoutLeft: function (left) {\n                this.setChildrenDirection(this.center, 'Left', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    node.TreeDirection = 'Left';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x - this.options.horizontalSeparation;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < left.length; i++) {\n                    node = left[i];\n                    var p = new Point(x - node.Size.width, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutRight: function (right) {\n                this.setChildrenDirection(this.center, 'Right', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var h = 0, w = 0, y, i, node;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    node.TreeDirection = 'Right';\n                    var s = this.measure(node, Size.Empty);\n                    w = Math.max(w, s.Width);\n                    h += s.height + this.options.verticalSeparation;\n                }\n                h -= this.options.verticalSeparation;\n                var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n                y = this.center.y + (this.center.height - h) / 2;\n                for (i = 0; i < right.length; i++) {\n                    node = right[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    y += node.Size.height + this.options.verticalSeparation;\n                }\n            },\n            layoutUp: function (up) {\n                this.setChildrenDirection(this.center, 'Up', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y, node, i;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    node.TreeDirection = 'Up';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                for (i = 0; i < up.length; i++) {\n                    node = up[i];\n                    y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutDown: function (down) {\n                var node, i;\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                var w = 0, y;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.treeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            layoutRadialTree: function () {\n                this.setChildrenDirection(this.center, 'Radial', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.previousRoot = null;\n                var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n                var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n                if (endAngle <= startAngle) {\n                    throw 'Final angle should not be less than the start angle.';\n                }\n                this.maxDepth = 0;\n                this.origin = new Point(this.center.x, this.center.y);\n                this.calculateAngularWidth(this.center, 0);\n                if (this.maxDepth > 0) {\n                    this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n                }\n                this.center.Angle = endAngle - startAngle;\n            },\n            tipOverTree: function (down, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                this.setChildrenDirection(this.center, 'Down', false);\n                this.setChildrenLayout(this.center, 'Default', false);\n                this.setChildrenLayout(this.center, 'Underneath', false, startFromLevel);\n                var w = 0, y, node, i;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    node.TreeDirection = 'Down';\n                    var s = this.measure(node, Size.Empty);\n                    w += s.width + this.options.horizontalSeparation;\n                }\n                w -= this.options.horizontalSeparation;\n                w -= down[down.length - 1].width;\n                w += down[down.length - 1].associatedShape.bounds().width;\n                var x = this.center.x + this.center.width / 2 - w / 2;\n                y = this.center.y + this.options.verticalSeparation + this.center.height;\n                for (i = 0; i < down.length; i++) {\n                    node = down[i];\n                    var p = new Point(x, y);\n                    this.arrange(node, p);\n                    x += node.Size.width + this.options.horizontalSeparation;\n                }\n            },\n            calculateAngularWidth: function (n, d) {\n                if (d > this.maxDepth) {\n                    this.maxDepth = d;\n                }\n                var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt(w * w + h * h) / d;\n                if (n.children.length > 0) {\n                    for (var i = 0, len = n.children.length; i < len; i++) {\n                        var child = n.children[i];\n                        aw += this.calculateAngularWidth(child, d + 1);\n                    }\n                    aw = Math.max(diameter, aw);\n                } else {\n                    aw = diameter;\n                }\n                n.sectorAngle = aw;\n                return aw;\n            },\n            sortChildren: function (n) {\n                var basevalue = 0, i;\n                if (n.parents.length > 1) {\n                    throw 'Node is not part of a tree.';\n                }\n                var p = n.parents[0];\n                if (p) {\n                    var pl = new Point(p.x, p.y);\n                    var nl = new Point(n.x, n.y);\n                    basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n                }\n                var count = n.children.length;\n                if (count === 0) {\n                    return null;\n                }\n                var angle = [];\n                var idx = [];\n                for (i = 0; i < count; ++i) {\n                    var c = n.children[i];\n                    var l = new Point(c.x, c.y);\n                    idx[i] = i;\n                    angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n                }\n                Utils.bisort(angle, idx);\n                var col = [];\n                var children = n.children;\n                for (i = 0; i < count; ++i) {\n                    col.push(children[idx[i]]);\n                }\n                return col;\n            },\n            normalizeAngle: function (angle) {\n                while (angle > Math.PI * 2) {\n                    angle -= 2 * Math.PI;\n                }\n                while (angle < 0) {\n                    angle += Math.PI * 2;\n                }\n                return angle;\n            },\n            radialLayout: function (node, radius, startAngle, endAngle) {\n                var deltaTheta = endAngle - startAngle;\n                var deltaThetaHalf = deltaTheta / 2;\n                var parentSector = node.sectorAngle;\n                var fraction = 0;\n                var sorted = this.sortChildren(node);\n                for (var i = 0, len = sorted.length; i < len; i++) {\n                    var childNode = sorted[i];\n                    var cp = childNode;\n                    var childAngleFraction = cp.sectorAngle / parentSector;\n                    if (childNode.children.length > 0) {\n                        this.radialLayout(childNode, radius + this.options.radialSeparation, startAngle + fraction * deltaTheta, startAngle + (fraction + childAngleFraction) * deltaTheta);\n                    }\n                    this.setPolarLocation(childNode, radius, startAngle + fraction * deltaTheta + childAngleFraction * deltaThetaHalf);\n                    cp.angle = childAngleFraction * deltaTheta;\n                    fraction += childAngleFraction;\n                }\n            },\n            setPolarLocation: function (node, radius, angle) {\n                node.x = this.origin.x + radius * Math.cos(angle);\n                node.y = this.origin.y + radius * Math.sin(angle);\n                node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n            },\n            setChildrenDirection: function (node, direction, includeStart) {\n                var rootDirection = node.treeDirection;\n                this.graph.depthFirstTraversal(node, function (n) {\n                    n.treeDirection = direction;\n                });\n                if (!includeStart) {\n                    node.treeDirection = rootDirection;\n                }\n            },\n            setChildrenLayout: function (node, layout, includeStart, startFromLevel) {\n                if (Utils.isUndefined(startFromLevel)) {\n                    startFromLevel = 0;\n                }\n                var rootLayout = node.childrenLayout;\n                if (startFromLevel > 0) {\n                    this.graph.assignLevels(node);\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    });\n                } else {\n                    this.graph.depthFirstTraversal(node, function (s) {\n                        s.childrenLayout = layout;\n                    });\n                    if (!includeStart) {\n                        node.childrenLayout = rootLayout;\n                    }\n                }\n            },\n            measure: function (node, givenSize) {\n                var w = 0, h = 0, s;\n                var result = new Size(0, 0);\n                if (!node) {\n                    throw '';\n                }\n                var b = node.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (node.parents.length !== 1) {\n                    throw 'Node not in a spanning tree.';\n                }\n                var parent = node.parents[0];\n                if (node.treeDirection === 'Undefined') {\n                    node.treeDirection = parent.treeDirection;\n                }\n                if (Utils.isEmpty(node.children)) {\n                    result = new Size(Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth, Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n                } else if (node.children.length === 1) {\n                    switch (node.treeDirection) {\n                    case 'Radial':\n                        s = this.measure(node.children[0], givenSize);\n                        w = shapeWidth + this.options.radialSeparation * Math.cos(node.AngleToParent) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                            break;\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            w = shapeWidth + this.options.horizontalSeparation + s.width;\n                            h = Math.max(shapeHeight, s.height);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Radial layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            s = this.measure(node.children[0], givenSize);\n                            w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                            h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                            break;\n                        case 'Default':\n                            s = this.measure(node.children[0], givenSize);\n                            h = shapeHeight + this.options.verticalSeparation + s.height;\n                            w = Math.max(shapeWidth, s.width);\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                } else {\n                    var i, childNode;\n                    switch (node.treeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = shapeWidth;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                h += s.height + this.options.verticalSeparation;\n                            }\n                            h -= this.options.verticalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Right layout measuring.';\n                        }\n                        break;\n                    case 'Up':\n                    case 'Down':\n                        switch (node.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            w = shapeWidth;\n                            h = shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                h += s.height + this.options.underneathVerticalSeparation;\n                            }\n                            h -= this.options.underneathVerticalSeparation;\n                            break;\n                        case 'Default':\n                            w = 0;\n                            h = 0;\n                            for (i = 0; i < node.children.length; i++) {\n                                childNode = node.children[i];\n                                s = this.measure(childNode, givenSize);\n                                w += s.width + this.options.horizontalSeparation;\n                                h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                            }\n                            w -= this.options.horizontalSeparation;\n                            break;\n                        default:\n                            throw 'Unhandled TreeDirection in the Down layout measuring.';\n                        }\n                        break;\n                    default:\n                        throw 'Unhandled TreeDirection in the layout measuring.';\n                    }\n                    result = new Size(w, h);\n                }\n                node.SectorAngle = Math.sqrt(w * w / 4 + h * h / 4);\n                node.Size = result;\n                return result;\n            },\n            arrange: function (n, p) {\n                var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n                var shapeWidth = b.width;\n                var shapeHeight = b.height;\n                if (Utils.isEmpty(n.children)) {\n                    n.x = p.x;\n                    n.y = p.y;\n                    n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n                } else {\n                    var x, y;\n                    var selfLocation;\n                    switch (n.treeDirection) {\n                    case 'Left':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < node.children.length; i++) {\n                                node = node.children[i];\n                                x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = selfLocation.x - this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x - node.Size.width, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Right':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x, p.y + (n.Size.height - shapeHeight) / 2);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + shapeWidth + this.options.horizontalSeparation;\n                            y = p.y;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.verticalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'Up':\n                        selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + (shapeWidth - childrenwidth) / 2;\n                        } else {\n                            x = p.x;\n                        }\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n                    case 'Down':\n                        switch (n.childrenLayout) {\n                        case 'TopAlignedWithParent':\n                        case 'BottomAlignedWithParent':\n                            break;\n                        case 'Underneath':\n                            selfLocation = p;\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            x = p.x + this.options.underneathHorizontalOffset;\n                            y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                y += node.Size.height + this.options.underneathVerticalSeparation;\n                            }\n                            break;\n                        case 'Default':\n                            selfLocation = new Point(p.x + (n.Size.width - shapeWidth) / 2, p.y);\n                            n.x = selfLocation.x;\n                            n.y = selfLocation.y;\n                            n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                            if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                childrenwidth = 0;\n                                for (i = 0; i < n.children.length; i++) {\n                                    child = n.children[i];\n                                    childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                }\n                                childrenwidth -= this.options.horizontalSeparation;\n                                x = p.x + (shapeWidth - childrenwidth) / 2;\n                            } else {\n                                x = p.x;\n                            }\n                            for (i = 0; i < n.children.length; i++) {\n                                node = n.children[i];\n                                y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                pp = new Point(x, y);\n                                this.arrange(node, pp);\n                                x += node.Size.width + this.options.horizontalSeparation;\n                            }\n                            break;\n                        default:\n                            throw 'Unsupported TreeDirection';\n                        }\n                        break;\n                    case 'None':\n                        break;\n                    default:\n                        throw 'Unsupported TreeDirection';\n                    }\n                }\n            },\n            layoutSwitch: function () {\n                if (!this.center) {\n                    return;\n                }\n                if (Utils.isEmpty(this.center.children)) {\n                    return;\n                }\n                var type = this.options.subtype;\n                if (Utils.isUndefined(type)) {\n                    type = 'Down';\n                }\n                var single, male, female, leftcount;\n                var children = this.center.children;\n                switch (type.toLowerCase()) {\n                case 'radial':\n                case 'radialtree':\n                    this.layoutRadialTree();\n                    break;\n                case 'mindmaphorizontal':\n                case 'mindmap':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n                case 'mindmapvertical':\n                    single = this.center.children;\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    } else {\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n                case 'right':\n                    this.layoutRight(this.center.children);\n                    break;\n                case 'left':\n                    this.layoutLeft(this.center.children);\n                    break;\n                case 'up':\n                case 'bottom':\n                    this.layoutUp(this.center.children);\n                    break;\n                case 'down':\n                case 'top':\n                    this.layoutDown(this.center.children);\n                    break;\n                case 'tipover':\n                case 'tipovertree':\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw 'The tip-over level should be a positive integer.';\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n                case 'undefined':\n                case 'none':\n                    break;\n                }\n            }\n        });\n        var TreeLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                this.graph = adapter.convert();\n                var finalNodeSet = this.layoutComponents();\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            layoutComponents: function () {\n                if (this.graph.isEmpty()) {\n                    return;\n                }\n                var components = this.graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                var layout = new TreeLayoutProcessor(this.options);\n                var trees = [];\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    var treeGraph = this.getTree(component);\n                    if (!treeGraph) {\n                        throw 'Failed to find a spanning tree for the component.';\n                    }\n                    var root = treeGraph.root;\n                    var tree = treeGraph.tree;\n                    layout.layout(tree, root);\n                    trees.push(tree);\n                }\n                return this.gridLayoutComponents(trees);\n            },\n            getTree: function (graph) {\n                var root = null;\n                if (this.options.roots && this.options.roots.length > 0) {\n                    for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                        var node = graph.nodes[i];\n                        for (var j = 0; j < this.options.roots.length; j++) {\n                            var givenRootShape = this.options.roots[j];\n                            if (givenRootShape === node.associatedShape) {\n                                root = node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!root) {\n                    root = graph.root();\n                    if (!root) {\n                        throw 'Unable to find a root for the tree.';\n                    }\n                }\n                return this.getTreeForRoot(graph, root);\n            },\n            getTreeForRoot: function (graph, root) {\n                var tree = graph.getSpanningTree(root);\n                if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                    return null;\n                }\n                return {\n                    tree: tree,\n                    root: tree.root\n                };\n            }\n        });\n        var LayeredLayout = LayoutBase.extend({\n            init: function (diagram) {\n                var that = this;\n                LayoutBase.fn.init.call(that);\n                if (Utils.isUndefined(diagram)) {\n                    throw 'Diagram is not specified.';\n                }\n                this.diagram = diagram;\n            },\n            layout: function (options) {\n                this.transferOptions(options);\n                var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n                var graph = adapter.convert(options);\n                if (graph.isEmpty()) {\n                    return;\n                }\n                var components = graph.getConnectedComponents();\n                if (Utils.isEmpty(components)) {\n                    return;\n                }\n                for (var i = 0; i < components.length; i++) {\n                    var component = components[i];\n                    this.layoutGraph(component, options);\n                }\n                var finalNodeSet = this.gridLayoutComponents(components);\n                return new diagram.LayoutState(this.diagram, finalNodeSet);\n            },\n            _initRuntimeProperties: function () {\n                for (var k = 0; k < this.graph.nodes.length; k++) {\n                    var node = this.graph.nodes[k];\n                    node.layer = -1;\n                    node.downstreamLinkCount = 0;\n                    node.upstreamLinkCount = 0;\n                    node.isVirtual = false;\n                    node.uBaryCenter = 0;\n                    node.dBaryCenter = 0;\n                    node.upstreamPriority = 0;\n                    node.downstreamPriority = 0;\n                    node.gridPosition = 0;\n                }\n            },\n            _prepare: function (graph) {\n                var current = [], i, l, link;\n                var layerMap = new Dictionary();\n                var layerCount = 0;\n                var targetLayer, next, target;\n                Utils.forEach(graph.nodes, function (node) {\n                    if (node.incoming.length === 0) {\n                        layerMap.set(node, 0);\n                        current.push(node);\n                    }\n                });\n                while (current.length > 0) {\n                    next = current.shift();\n                    for (i = 0; i < next.outgoing.length; i++) {\n                        link = next.outgoing[i];\n                        target = link.target;\n                        if (layerMap.containsKey(target)) {\n                            targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                        } else {\n                            targetLayer = layerMap.get(next) + 1;\n                        }\n                        layerMap.set(target, targetLayer);\n                        if (targetLayer > layerCount) {\n                            layerCount = targetLayer;\n                        }\n                        if (!contains(current, target)) {\n                            current.push(target);\n                        }\n                    }\n                }\n                var sortedNodes = layerMap.keys();\n                sortedNodes.sort(function (o1, o2) {\n                    var o1layer = layerMap.get(o1);\n                    var o2layer = layerMap.get(o2);\n                    return Utils.sign(o2layer - o1layer);\n                });\n                for (var n = 0; n < sortedNodes.length; ++n) {\n                    var node = sortedNodes[n];\n                    var minLayer = Number.MAX_VALUE;\n                    if (node.outgoing.length === 0) {\n                        continue;\n                    }\n                    for (l = 0; l < node.outgoing.length; ++l) {\n                        link = node.outgoing[l];\n                        minLayer = Math.min(minLayer, layerMap.get(link.target));\n                    }\n                    if (minLayer > 1) {\n                        layerMap.set(node, minLayer - 1);\n                    }\n                }\n                this.layers = [];\n                var layer;\n                for (i = 0; i < layerCount + 1; i++) {\n                    layer = [];\n                    layer.linksTo = {};\n                    this.layers.push(layer);\n                }\n                layerMap.forEach(function (node, layer) {\n                    node.layer = layer;\n                    this.layers[layer].push(node);\n                }, this);\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (i = 0; i < layer.length; i++) {\n                        layer[i].gridPosition = i;\n                    }\n                }\n            },\n            layoutGraph: function (graph, options) {\n                if (Utils.isUndefined(graph)) {\n                    throw 'No graph given or graph analysis of the diagram failed.';\n                }\n                if (Utils.isDefined(options)) {\n                    this.transferOptions(options);\n                }\n                this.graph = graph;\n                graph.setItemIndices();\n                var reversedEdges = graph.makeAcyclic();\n                this._initRuntimeProperties();\n                this._prepare(graph, options);\n                this._dummify();\n                this._optimizeCrossings();\n                this._swapPairs();\n                this.arrangeNodes();\n                this._moveThingsAround();\n                this._dedummify();\n                Utils.forEach(reversedEdges, function (e) {\n                    if (e.points) {\n                        e.points.reverse();\n                    }\n                });\n            },\n            setMinDist: function (m, n, minDist) {\n                var l = m.layer;\n                var i = m.layerIndex;\n                this.minDistances[l][i] = minDist;\n            },\n            getMinDist: function (m, n) {\n                var dist = 0, i1 = m.layerIndex, i2 = n.layerIndex, l = m.layer, min = Math.min(i1, i2), max = Math.max(i1, i2);\n                for (var k = min; k < max; ++k) {\n                    dist += this.minDistances[l][k];\n                }\n                return dist;\n            },\n            placeLeftToRight: function (leftClasses) {\n                var leftPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = leftClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!leftPos.containsKey(node)) {\n                            this.placeLeft(node, leftPos, c);\n                        }\n                    }\n                    var d = Number.POSITIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var rightSibling = this.rightSibling(node);\n                        if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                            d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                        }\n                    }\n                    if (d === Number.POSITIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeLeftClass.get(neighbor) < c) {\n                                    D.push(leftPos.get(neighbor) - leftPos.get(node));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        leftPos.set(node, leftPos.get(node) + d);\n                    }\n                }\n                return leftPos;\n            },\n            placeRightToLeft: function (rightClasses) {\n                var rightPos = new Dictionary(), n, node;\n                for (var c = 0; c < this.layers.length; ++c) {\n                    var classNodes = rightClasses[c];\n                    if (!classNodes) {\n                        continue;\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        if (!rightPos.containsKey(node)) {\n                            this.placeRight(node, rightPos, c);\n                        }\n                    }\n                    var d = Number.NEGATIVE_INFINITY;\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var leftSibling = this.leftSibling(node);\n                        if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                            d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                        }\n                    }\n                    if (d === Number.NEGATIVE_INFINITY) {\n                        var D = [];\n                        for (n = 0; n < classNodes.length; n++) {\n                            node = classNodes[n];\n                            var neighbors = [];\n                            Utils.addRange(neighbors, this.upNodes.get(node));\n                            Utils.addRange(neighbors, this.downNodes.get(node));\n                            for (var e = 0; e < neighbors.length; e++) {\n                                var neighbor = neighbors[e];\n                                if (this.nodeRightClass.get(neighbor) < c) {\n                                    D.push(rightPos.get(node) - rightPos.get(neighbor));\n                                }\n                            }\n                        }\n                        D.sort();\n                        if (D.length === 0) {\n                            d = 0;\n                        } else if (D.length % 2 === 1) {\n                            d = D[this.intDiv(D.length, 2)];\n                        } else {\n                            d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                        }\n                    }\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        rightPos.set(node, rightPos.get(node) + d);\n                    }\n                }\n                return rightPos;\n            },\n            _getLeftWing: function () {\n                var leftWing = { value: null };\n                var result = this.computeClasses(leftWing, 1);\n                this.nodeLeftClass = leftWing.value;\n                return result;\n            },\n            _getRightWing: function () {\n                var rightWing = { value: null };\n                var result = this.computeClasses(rightWing, -1);\n                this.nodeRightClass = rightWing.value;\n                return result;\n            },\n            computeClasses: function (wingPair, d) {\n                var currentWing = 0, wing = wingPair.value = new Dictionary();\n                for (var l = 0; l < this.layers.length; ++l) {\n                    currentWing = l;\n                    var layer = this.layers[l];\n                    for (var n = d === 1 ? 0 : layer.length - 1; 0 <= n && n < layer.length; n += d) {\n                        var node = layer[n];\n                        if (!wing.containsKey(node)) {\n                            wing.set(node, currentWing);\n                            if (node.isVirtual) {\n                                var ndsinl = this._nodesInLink(node);\n                                for (var kk = 0; kk < ndsinl.length; kk++) {\n                                    var vnode = ndsinl[kk];\n                                    wing.set(vnode, currentWing);\n                                }\n                            }\n                        } else {\n                            currentWing = wing.get(node);\n                        }\n                    }\n                }\n                var wings = [];\n                for (var i = 0; i < this.layers.length; i++) {\n                    wings.push(null);\n                }\n                wing.forEach(function (node, classIndex) {\n                    if (wings[classIndex] === null) {\n                        wings[classIndex] = [];\n                    }\n                    wings[classIndex].push(node);\n                });\n                return wings;\n            },\n            _isVerticalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'up' || this.options.subtype.toLowerCase() === 'down' || this.options.subtype.toLowerCase() === 'vertical';\n            },\n            _isHorizontalLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'left' || this.options.subtype.toLowerCase() === 'horizontal';\n            },\n            _isIncreasingLayout: function () {\n                return this.options.subtype.toLowerCase() === 'right' || this.options.subtype.toLowerCase() === 'down';\n            },\n            _moveThingsAround: function () {\n                var i, l, node, layer, n, w;\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    layer.sort(this._gridPositionComparer);\n                }\n                this.minDistances = [];\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    this.minDistances[l] = [];\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        node.layerIndex = n;\n                        this.minDistances[l][n] = this.options.nodeDistance;\n                        if (n < layer.length - 1) {\n                            if (this._isVerticalLayout()) {\n                                this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                            } else {\n                                this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                            }\n                        }\n                    }\n                }\n                this.downNodes = new Dictionary();\n                this.upNodes = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    this.downNodes.set(node, []);\n                    this.upNodes.set(node, []);\n                }, this);\n                Utils.forEach(this.graph.links, function (link) {\n                    var origin = link.source;\n                    var dest = link.target;\n                    var down = null, up = null;\n                    if (origin.layer > dest.layer) {\n                        down = link.source;\n                        up = link.target;\n                    } else {\n                        up = link.source;\n                        down = link.target;\n                    }\n                    this.downNodes.get(up).push(down);\n                    this.upNodes.get(down).push(up);\n                }, this);\n                this.downNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                this.upNodes.forEachValue(function (list) {\n                    list.sort(this._gridPositionComparer);\n                }, this);\n                for (l = 0; l < this.layers.length - 1; ++l) {\n                    layer = this.layers[l];\n                    for (w = 0; w < layer.length - 1; w++) {\n                        var currentNode = layer[w];\n                        if (!currentNode.isVirtual) {\n                            continue;\n                        }\n                        var currDown = this.downNodes.get(currentNode)[0];\n                        if (!currDown.isVirtual) {\n                            continue;\n                        }\n                        for (n = w + 1; n < layer.length; ++n) {\n                            node = layer[n];\n                            if (!node.isVirtual) {\n                                continue;\n                            }\n                            var downNode = this.downNodes.get(node)[0];\n                            if (!downNode.isVirtual) {\n                                continue;\n                            }\n                            if (currDown.gridPosition > downNode.gridPosition) {\n                                var pos = currDown.gridPosition;\n                                currDown.gridPosition = downNode.gridPosition;\n                                downNode.gridPosition = pos;\n                                var i1 = currDown.layerIndex;\n                                var i2 = downNode.layerIndex;\n                                this.layers[l + 1][i1] = downNode;\n                                this.layers[l + 1][i2] = currDown;\n                                currDown.layerIndex = i2;\n                                downNode.layerIndex = i1;\n                            }\n                        }\n                    }\n                }\n                var leftClasses = this._getLeftWing();\n                var rightClasses = this._getRightWing();\n                var leftPos = this.placeLeftToRight(leftClasses);\n                var rightPos = this.placeRightToLeft(rightClasses);\n                var x = new Dictionary();\n                Utils.forEach(this.graph.nodes, function (node) {\n                    x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n                });\n                var order = new Dictionary();\n                var placed = new Dictionary();\n                for (l = 0; l < this.layers.length; ++l) {\n                    layer = this.layers[l];\n                    var sequenceStart = -1, sequenceEnd = -1;\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        order.set(node, 0);\n                        placed.set(node, false);\n                        if (node.isVirtual) {\n                            if (sequenceStart === -1) {\n                                sequenceStart = n;\n                            } else if (sequenceStart === n - 1) {\n                                sequenceStart = n;\n                            } else {\n                                sequenceEnd = n;\n                                order.set(layer[sequenceStart], 0);\n                                if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                    placed.set(layer[sequenceStart], true);\n                                } else {\n                                    placed.set(layer[sequenceStart], false);\n                                }\n                                sequenceStart = n;\n                            }\n                        }\n                    }\n                }\n                var directions = [\n                    1,\n                    -1\n                ];\n                Utils.forEach(directions, function (d) {\n                    var start = d === 1 ? 0 : this.layers.length - 1;\n                    for (var l = start; 0 <= l && l < this.layers.length; l += d) {\n                        var layer = this.layers[l];\n                        var virtualStartIndex = this._firstVirtualNode(layer);\n                        var virtualStart = null;\n                        var sequence = null;\n                        if (virtualStartIndex !== -1) {\n                            virtualStart = layer[virtualStartIndex];\n                            sequence = [];\n                            for (i = 0; i < virtualStartIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                        } else {\n                            virtualStart = null;\n                            sequence = layer;\n                        }\n                        if (sequence.length > 0) {\n                            this._sequencer(x, null, virtualStart, d, sequence);\n                            for (i = 0; i < sequence.length - 1; ++i) {\n                                this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                            }\n                            if (virtualStart) {\n                                this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                            }\n                        }\n                        while (virtualStart) {\n                            var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                            if (!virtualEnd) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, null, d, sequence);\n                                    for (i = 0; i < sequence.length - 1; ++i) {\n                                        this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                    }\n                                    this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                                }\n                            } else if (order.get(virtualStart) === d) {\n                                virtualStartIndex = virtualStart.layerIndex;\n                                var virtualEndIndex = virtualEnd.layerIndex;\n                                sequence = [];\n                                for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                    sequence.push(layer[i]);\n                                }\n                                if (sequence.length > 0) {\n                                    this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                                }\n                                placed.set(virtualStart, true);\n                            }\n                            virtualStart = virtualEnd;\n                        }\n                        this.adjustDirections(l, d, order, placed);\n                    }\n                }, this);\n                var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n                var reachedFinalLayerIndex = function (k, ctx) {\n                    if (ctx._isIncreasingLayout()) {\n                        return k < ctx.layers.length;\n                    } else {\n                        return k >= 0;\n                    }\n                };\n                var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n                function maximumHeight(layer, ctx) {\n                    var height = Number.MIN_VALUE;\n                    for (var n = 0; n < layer.length; ++n) {\n                        var node = layer[n];\n                        if (ctx._isVerticalLayout()) {\n                            height = Math.max(height, node.height);\n                        } else {\n                            height = Math.max(height, node.width);\n                        }\n                    }\n                    return height;\n                }\n                for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                    layer = this.layers[i];\n                    var height = maximumHeight(layer, this);\n                    for (n = 0; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (this._isVerticalLayout()) {\n                            node.x = x.get(node);\n                            node.y = offset + height / 2;\n                        } else {\n                            node.x = offset + height / 2;\n                            node.y = x.get(node);\n                        }\n                    }\n                    offset += this.options.layerSeparation + height;\n                }\n            },\n            adjustDirections: function (l, d, order, placed) {\n                if (l + d < 0 || l + d >= this.layers.length) {\n                    return;\n                }\n                var prevBridge = null, prevBridgeTarget = null;\n                var layer = this.layers[l + d];\n                for (var n = 0; n < layer.length; ++n) {\n                    var nextBridge = layer[n];\n                    if (nextBridge.isVirtual) {\n                        var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                        if (nextBridgeTarget.isVirtual) {\n                            if (prevBridge) {\n                                var p = placed.get(prevBridgeTarget);\n                                var clayer = this.layers[l];\n                                var i1 = prevBridgeTarget.layerIndex;\n                                var i2 = nextBridgeTarget.layerIndex;\n                                for (var i = i1 + 1; i < i2; ++i) {\n                                    if (clayer[i].isVirtual) {\n                                        p = p && placed.get(clayer[i]);\n                                    }\n                                }\n                                if (p) {\n                                    order.set(prevBridge, d);\n                                    var j1 = prevBridge.layerIndex;\n                                    var j2 = nextBridge.layerIndex;\n                                    for (var j = j1 + 1; j < j2; ++j) {\n                                        if (layer[j].isVirtual) {\n                                            order.set(layer[j], d);\n                                        }\n                                    }\n                                }\n                            }\n                            prevBridge = nextBridge;\n                            prevBridgeTarget = nextBridgeTarget;\n                        }\n                    }\n                }\n            },\n            getNeighborOnLayer: function (node, l) {\n                var neighbor = this.upNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                neighbor = this.downNodes.get(node)[0];\n                if (neighbor.layer === l) {\n                    return neighbor;\n                }\n                return null;\n            },\n            _sequencer: function (x, virtualStart, virtualEnd, dir, sequence) {\n                if (sequence.length === 1) {\n                    this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n                }\n                if (sequence.length > 1) {\n                    var r = sequence.length, t = this.intDiv(r, 2);\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                    this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                    this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n                }\n            },\n            _sequenceSingle: function (x, virtualStart, virtualEnd, dir, node) {\n                var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n                var n = neighbors.length;\n                if (n !== 0) {\n                    if (n % 2 === 1) {\n                        x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                    } else {\n                        x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                    }\n                    if (virtualStart) {\n                        x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                    }\n                    if (virtualEnd) {\n                        x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                    }\n                }\n            },\n            combineSequences: function (x, virtualStart, virtualEnd, dir, sequence) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n                for (i = 0; i < t; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) >= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            leftHeap.push({\n                                k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]),\n                                v: 2\n                            });\n                        }\n                    }\n                    leftHeap.push({\n                        k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]),\n                        v: c\n                    });\n                }\n                if (virtualStart) {\n                    leftHeap.push({\n                        k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                leftHeap.sort(this._positionDescendingComparer);\n                var rightHeap = [];\n                for (i = t; i < r; ++i) {\n                    c = 0;\n                    neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                    for (n = 0; n < neighbors.length; ++n) {\n                        neighbor = neighbors[n];\n                        if (x.get(neighbor) <= x.get(sequence[i])) {\n                            c++;\n                        } else {\n                            c--;\n                            rightHeap.push({\n                                k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]),\n                                v: 2\n                            });\n                        }\n                    }\n                    rightHeap.push({\n                        k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]),\n                        v: c\n                    });\n                }\n                if (virtualEnd) {\n                    rightHeap.push({\n                        k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]),\n                        v: Number.MAX_VALUE\n                    });\n                }\n                rightHeap.sort(this._positionAscendingComparer);\n                var leftRes = 0, rightRes = 0;\n                var m = this.getMinDist(sequence[t - 1], sequence[t]);\n                while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                    if (leftRes < rightRes) {\n                        if (leftHeap.length === 0) {\n                            x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                            break;\n                        } else {\n                            pair = leftHeap.shift();\n                            leftRes = leftRes + pair.v;\n                            x.set(sequence[t - 1], pair.k);\n                            x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                        }\n                    } else {\n                        if (rightHeap.length === 0) {\n                            x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                            break;\n                        } else {\n                            pair = rightHeap.shift();\n                            rightRes = rightRes + pair.v;\n                            x.set(sequence[t], pair.k);\n                            x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                        }\n                    }\n                }\n                for (i = t - 2; i >= 0; i--) {\n                    x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n                }\n                for (i = t + 1; i < r; i++) {\n                    x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n                }\n            },\n            placeLeft: function (node, leftPos, leftClass) {\n                var pos = Number.NEGATIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var leftSibling = this.leftSibling(v);\n                    if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                        if (!leftPos.containsKey(leftSibling)) {\n                            this.placeLeft(leftSibling, leftPos, leftClass);\n                        }\n                        pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                    }\n                }, this);\n                if (pos === Number.NEGATIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    leftPos.set(v, pos);\n                });\n            },\n            placeRight: function (node, rightPos, rightClass) {\n                var pos = Number.POSITIVE_INFINITY;\n                Utils.forEach(this._getComposite(node), function (v) {\n                    var rightSibling = this.rightSibling(v);\n                    if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                        if (!rightPos.containsKey(rightSibling)) {\n                            this.placeRight(rightSibling, rightPos, rightClass);\n                        }\n                        pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                    }\n                }, this);\n                if (pos === Number.POSITIVE_INFINITY) {\n                    pos = 0;\n                }\n                Utils.forEach(this._getComposite(node), function (v) {\n                    rightPos.set(v, pos);\n                });\n            },\n            leftSibling: function (node) {\n                var layer = this.layers[node.layer], layerIndex = node.layerIndex;\n                return layerIndex === 0 ? null : layer[layerIndex - 1];\n            },\n            rightSibling: function (node) {\n                var layer = this.layers[node.layer];\n                var layerIndex = node.layerIndex;\n                return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n            },\n            _getComposite: function (node) {\n                return node.isVirtual ? this._nodesInLink(node) : [node];\n            },\n            arrangeNodes: function () {\n                var i, l, ni, layer, node;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.upstreamPriority = node.upstreamLinkCount;\n                        node.downstreamPriority = node.downstreamLinkCount;\n                    }\n                }\n                var maxLayoutIterations = 2;\n                for (var it = 0; it < maxLayoutIterations; it++) {\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        this.layoutLayer(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        this.layoutLayer(true, i);\n                    }\n                }\n                var gridPos = Number.MAX_VALUE;\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        gridPos = Math.min(gridPos, node.gridPosition);\n                    }\n                }\n                if (gridPos < 0) {\n                    for (l = 0; l < this.layers.length; l++) {\n                        layer = this.layers[l];\n                        for (ni = 0; ni < layer.length; ni++) {\n                            node = layer[ni];\n                            node.gridPosition = node.gridPosition - gridPos;\n                        }\n                    }\n                }\n            },\n            layoutLayer: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var sorted = [];\n                for (var n = 0; n < considered.length; n++) {\n                    sorted.push(considered[n]);\n                }\n                sorted.sort(function (n1, n2) {\n                    var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                    var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n                    if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                        return 0;\n                    }\n                    if (n1Priority < n2Priority) {\n                        return 1;\n                    }\n                    return -1;\n                });\n                Utils.forEach(sorted, function (node) {\n                    var nodeGridPos = node.gridPosition;\n                    var nodeBaryCenter = this.calcBaryCenter(node);\n                    var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                        return;\n                    }\n                    if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                        return;\n                    }\n                    if (nodeGridPos < nodeBaryCenter) {\n                        while (nodeGridPos < nodeBaryCenter) {\n                            if (!this.moveRight(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    } else {\n                        while (nodeGridPos > nodeBaryCenter) {\n                            if (!this.moveLeft(node, considered, nodePriority)) {\n                                break;\n                            }\n                            nodeGridPos = node.gridPosition;\n                        }\n                    }\n                }, this);\n                if (iconsidered > 0) {\n                    this.calcDownData(iconsidered - 1);\n                }\n                if (iconsidered < this.layers.length - 1) {\n                    this.calcUpData(iconsidered + 1);\n                }\n            },\n            moveRight: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === layer.length - 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                var rightNode = layer[index + 1];\n                var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n                if (rightNode.gridPosition > node.gridPosition + 1) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                if (rightNodePriority > priority || Math.abs(rightNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveRight(rightNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition + 0.5;\n                    return true;\n                }\n                return false;\n            },\n            moveLeft: function (node, layer, priority) {\n                var index = Utils.indexOf(layer, node);\n                if (index === 0) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                var leftNode = layer[index - 1];\n                var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n                if (leftNode.gridPosition < node.gridPosition - 1) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                if (leftNodePriority > priority || Math.abs(leftNodePriority - priority) < 0.0001) {\n                    return false;\n                }\n                if (this.moveLeft(leftNode, layer, priority)) {\n                    node.gridPosition = node.gridPosition - 0.5;\n                    return true;\n                }\n                return false;\n            },\n            mapVirtualNode: function (node, link) {\n                this.nodeToLinkMap.set(node, link);\n                if (!this.linkToNodeMap.containsKey(link)) {\n                    this.linkToNodeMap.set(link, []);\n                }\n                this.linkToNodeMap.get(link).push(node);\n            },\n            _nodesInLink: function (node) {\n                return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n            },\n            _dummify: function () {\n                this.linkToNodeMap = new Dictionary();\n                this.nodeToLinkMap = new Dictionary();\n                var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n                var layers = this.layers;\n                var addLinkBetweenLayers = function (upLayer, downLayer, link) {\n                    layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                    layers[upLayer].linksTo[downLayer].push(link);\n                };\n                for (l = 0; l < links.length; l++) {\n                    var link = links[l];\n                    var o = link.source;\n                    var d = link.target;\n                    var oLayer = o.layer;\n                    var dLayer = d.layer;\n                    var oPos = o.gridPosition;\n                    var dPos = d.gridPosition;\n                    var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n                    var p = o;\n                    if (oLayer - dLayer > 1) {\n                        for (i = oLayer - 1; i > dLayer; i--) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - dLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                        link.changeSource(p);\n                        link.depthOfDumminess = oLayer - dLayer - 1;\n                    } else if (oLayer - dLayer < -1) {\n                        for (i = oLayer + 1; i < dLayer; i++) {\n                            newNode = new Node();\n                            newNode.x = o.x;\n                            newNode.y = o.y;\n                            newNode.width = o.width / 100;\n                            newNode.height = o.height / 100;\n                            layer = layers[i];\n                            pos = (i - oLayer) * step + oPos;\n                            if (pos > layer.length) {\n                                pos = layer.length;\n                            }\n                            if (oPos >= layers[oLayer].length - 1 && dPos >= layers[dLayer].length - 1) {\n                                pos = layer.length;\n                            } else if (oPos === 0 && dPos === 0) {\n                                pos = 0;\n                            }\n                            newNode.layer = i;\n                            newNode.uBaryCenter = 0;\n                            newNode.dBaryCenter = 0;\n                            newNode.upstreamLinkCount = 0;\n                            newNode.downstreamLinkCount = 0;\n                            newNode.gridPosition = pos;\n                            newNode.isVirtual = true;\n                            pos &= pos;\n                            Utils.insert(layer, newNode, pos);\n                            for (r = pos + 1; r < layer.length; r++) {\n                                node = layer[r];\n                                node.gridPosition = node.gridPosition + 1;\n                            }\n                            newLink = new Link(p, newNode);\n                            newLink.depthOfDumminess = 0;\n                            addLinkBetweenLayers(i - 1, i, newLink);\n                            p = newNode;\n                            this.graph._addNode(newNode);\n                            this.graph.addLink(newLink);\n                            newNode.index = this.graph.nodes.length - 1;\n                            this.mapVirtualNode(newNode, link);\n                        }\n                        addLinkBetweenLayers(dLayer - 1, dLayer, link);\n                        link.changeSource(p);\n                        link.depthOfDumminess = dLayer - oLayer - 1;\n                    } else {\n                        addLinkBetweenLayers(oLayer, dLayer, link);\n                    }\n                }\n            },\n            _dedummify: function () {\n                var dedum = true;\n                while (dedum) {\n                    dedum = false;\n                    for (var l = 0; l < this.graph.links.length; l++) {\n                        var link = this.graph.links[l];\n                        if (!link.depthOfDumminess) {\n                            continue;\n                        }\n                        var points = [];\n                        points.unshift({\n                            x: link.target.x,\n                            y: link.target.y\n                        });\n                        points.unshift({\n                            x: link.source.x,\n                            y: link.source.y\n                        });\n                        var temp = link;\n                        var depthOfDumminess = link.depthOfDumminess;\n                        for (var d = 0; d < depthOfDumminess; d++) {\n                            var node = temp.source;\n                            var prevLink = node.incoming[0];\n                            points.unshift({\n                                x: prevLink.source.x,\n                                y: prevLink.source.y\n                            });\n                            temp = prevLink;\n                        }\n                        link.changeSource(temp.source);\n                        link.depthOfDumminess = 0;\n                        if (points.length > 2) {\n                            points.splice(0, 1);\n                            points.splice(points.length - 1);\n                            link.points = points;\n                        } else {\n                            link.points = [];\n                        }\n                        dedum = true;\n                        break;\n                    }\n                }\n            },\n            _optimizeCrossings: function () {\n                var moves = -1, i;\n                var maxIterations = 3;\n                var iter = 0;\n                while (moves !== 0) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    moves = 0;\n                    for (i = this.layers.length - 1; i >= 1; i--) {\n                        moves += this.optimizeLayerCrossings(false, i);\n                    }\n                    for (i = 0; i < this.layers.length - 1; i++) {\n                        moves += this.optimizeLayerCrossings(true, i);\n                    }\n                }\n            },\n            calcUpData: function (layer) {\n                if (layer === 0) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var upLayer = new Set();\n                var temp = this.layers[layer - 1];\n                for (i = 0; i < temp.length; i++) {\n                    upLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (upLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (upLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.uBaryCenter = sum / total;\n                        node.upstreamLinkCount = total;\n                    } else {\n                        node.uBaryCenter = i;\n                        node.upstreamLinkCount = 0;\n                    }\n                }\n            },\n            calcDownData: function (layer) {\n                if (layer === this.layers.length - 1) {\n                    return;\n                }\n                var considered = this.layers[layer], i, l, link;\n                var downLayer = new Set();\n                var temp = this.layers[layer + 1];\n                for (i = 0; i < temp.length; i++) {\n                    downLayer.add(temp[i]);\n                }\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    var sum = 0;\n                    var total = 0;\n                    for (l = 0; l < node.incoming.length; l++) {\n                        link = node.incoming[l];\n                        if (downLayer.contains(link.source)) {\n                            total++;\n                            sum += link.source.gridPosition;\n                        }\n                    }\n                    for (l = 0; l < node.outgoing.length; l++) {\n                        link = node.outgoing[l];\n                        if (downLayer.contains(link.target)) {\n                            total++;\n                            sum += link.target.gridPosition;\n                        }\n                    }\n                    if (total > 0) {\n                        node.dBaryCenter = sum / total;\n                        node.downstreamLinkCount = total;\n                    } else {\n                        node.dBaryCenter = i;\n                        node.downstreamLinkCount = 0;\n                    }\n                }\n            },\n            optimizeLayerCrossings: function (down, layer) {\n                var iconsidered;\n                var considered;\n                if (down) {\n                    considered = this.layers[iconsidered = layer + 1];\n                } else {\n                    considered = this.layers[iconsidered = layer - 1];\n                }\n                var presorted = considered.slice(0);\n                if (down) {\n                    this.calcUpData(iconsidered);\n                } else {\n                    this.calcDownData(iconsidered);\n                }\n                var that = this;\n                considered.sort(function (n1, n2) {\n                    var n1BaryCenter = that.calcBaryCenter(n1), n2BaryCenter = that.calcBaryCenter(n2);\n                    if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                        if (n1.degree() === n2.degree()) {\n                            return that.compareByIndex(n1, n2);\n                        } else if (n1.degree() < n2.degree()) {\n                            return 1;\n                        }\n                        return -1;\n                    }\n                    var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                    if (compareValue > 0) {\n                        return -1;\n                    } else if (compareValue < 0) {\n                        return 1;\n                    }\n                    return that.compareByIndex(n1, n2);\n                });\n                var i, moves = 0;\n                for (i = 0; i < considered.length; i++) {\n                    if (considered[i] !== presorted[i]) {\n                        moves++;\n                    }\n                }\n                if (moves > 0) {\n                    var inode = 0;\n                    for (i = 0; i < considered.length; i++) {\n                        var node = considered[i];\n                        node.gridPosition = inode++;\n                    }\n                }\n                return moves;\n            },\n            _swapPairs: function () {\n                var maxIterations = this.options.layeredIterations;\n                var iter = 0;\n                while (true) {\n                    if (iter++ > maxIterations) {\n                        break;\n                    }\n                    var downwards = iter % 4 <= 1;\n                    var secondPass = iter % 4 === 1;\n                    for (var l = downwards ? 0 : this.layers.length - 1; downwards ? l <= this.layers.length - 1 : l >= 0; l += downwards ? 1 : -1) {\n                        var layer = this.layers[l];\n                        var hasSwapped = false;\n                        var calcCrossings = true;\n                        var memCrossings = 0;\n                        for (var n = 0; n < layer.length - 1; n++) {\n                            var up = 0;\n                            var down = 0;\n                            var crossBefore = 0;\n                            if (calcCrossings) {\n                                if (l !== 0) {\n                                    up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                                }\n                                if (l !== this.layers.length - 1) {\n                                    down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                                }\n                                if (downwards) {\n                                    up *= 2;\n                                } else {\n                                    down *= 2;\n                                }\n                                crossBefore = up + down;\n                            } else {\n                                crossBefore = memCrossings;\n                            }\n                            if (crossBefore === 0) {\n                                continue;\n                            }\n                            var node1 = layer[n];\n                            var node2 = layer[n + 1];\n                            var node1GridPos = node1.gridPosition;\n                            var node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n                            up = 0;\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            down = 0;\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            } else {\n                                down *= 2;\n                            }\n                            var crossAfter = up + down;\n                            var revert = false;\n                            if (secondPass) {\n                                revert = crossAfter >= crossBefore;\n                            } else {\n                                revert = crossAfter > crossBefore;\n                            }\n                            if (revert) {\n                                node1 = layer[n];\n                                node2 = layer[n + 1];\n                                node1GridPos = node1.gridPosition;\n                                node2GridPos = node2.gridPosition;\n                                layer[n] = node2;\n                                layer[n + 1] = node1;\n                                node1.gridPosition = node2GridPos;\n                                node2.gridPosition = node1GridPos;\n                                memCrossings = crossBefore;\n                                calcCrossings = false;\n                            } else {\n                                hasSwapped = true;\n                                calcCrossings = true;\n                            }\n                        }\n                        if (hasSwapped) {\n                            if (l !== this.layers.length - 1) {\n                                this.calcUpData(l + 1);\n                            }\n                            if (l !== 0) {\n                                this.calcDownData(l - 1);\n                            }\n                        }\n                    }\n                }\n            },\n            countLinksCrossingBetweenTwoLayers: function (ulayer, dlayer) {\n                var links = this.layers[ulayer].linksTo[dlayer];\n                var link1, link2, n11, n12, n21, n22, l1, l2;\n                var crossings = 0;\n                var length = links.length;\n                for (l1 = 0; l1 < length; l1++) {\n                    link1 = links[l1];\n                    for (l2 = l1 + 1; l2 < length; l2++) {\n                        link2 = links[l2];\n                        if (link1.target.layer === dlayer) {\n                            n11 = link1.source;\n                            n12 = link1.target;\n                        } else {\n                            n11 = link1.target;\n                            n12 = link1.source;\n                        }\n                        if (link2.target.layer === dlayer) {\n                            n21 = link2.source;\n                            n22 = link2.target;\n                        } else {\n                            n21 = link2.target;\n                            n22 = link2.source;\n                        }\n                        var n11gp = n11.gridPosition;\n                        var n12gp = n12.gridPosition;\n                        var n21gp = n21.gridPosition;\n                        var n22gp = n22.gridPosition;\n                        if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                            crossings++;\n                        }\n                    }\n                }\n                return crossings;\n            },\n            calcBaryCenter: function (node) {\n                var upstreamLinkCount = node.upstreamLinkCount;\n                var downstreamLinkCount = node.downstreamLinkCount;\n                var uBaryCenter = node.uBaryCenter;\n                var dBaryCenter = node.dBaryCenter;\n                if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                    return (uBaryCenter + dBaryCenter) / 2;\n                }\n                if (upstreamLinkCount > 0) {\n                    return uBaryCenter;\n                }\n                if (downstreamLinkCount > 0) {\n                    return dBaryCenter;\n                }\n                return 0;\n            },\n            _gridPositionComparer: function (x, y) {\n                if (x.gridPosition < y.gridPosition) {\n                    return -1;\n                }\n                if (x.gridPosition > y.gridPosition) {\n                    return 1;\n                }\n                return 0;\n            },\n            _positionAscendingComparer: function (x, y) {\n                return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n            },\n            _positionDescendingComparer: function (x, y) {\n                return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n            },\n            _firstVirtualNode: function (layer) {\n                for (var c = 0; c < layer.length; c++) {\n                    if (layer[c].isVirtual) {\n                        return c;\n                    }\n                }\n                return -1;\n            },\n            compareByIndex: function (o1, o2) {\n                var i1 = o1.index;\n                var i2 = o2.index;\n                if (i1 < i2) {\n                    return 1;\n                }\n                if (i1 > i2) {\n                    return -1;\n                }\n                return 0;\n            },\n            intDiv: function (numerator, denominator) {\n                return (numerator - numerator % denominator) / denominator;\n            },\n            nextVirtualNode: function (layer, node) {\n                var nodeIndex = node.layerIndex;\n                for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                    if (layer[i].isVirtual) {\n                        return layer[i];\n                    }\n                }\n                return null;\n            }\n        });\n        var LayoutState = kendo.Class.extend({\n            init: function (diagram, graphOrNodes) {\n                if (Utils.isUndefined(diagram)) {\n                    throw 'No diagram given';\n                }\n                this.diagram = diagram;\n                this.nodeMap = new Dictionary();\n                this.linkMap = new Dictionary();\n                this.capture(graphOrNodes ? graphOrNodes : diagram);\n            },\n            capture: function (diagramOrGraphOrNodes) {\n                var node, nodes, shape, i, conn, link, links;\n                if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n                    for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                        node = diagramOrGraphOrNodes.nodes[i];\n                        shape = node.associatedShape;\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                    for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                        link = diagramOrGraphOrNodes.links[i];\n                        conn = link.associatedConnection;\n                        this.linkMap.set(conn.visual.id, link.points());\n                    }\n                } else if (diagramOrGraphOrNodes instanceof Array) {\n                    nodes = diagramOrGraphOrNodes;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                } else if (diagramOrGraphOrNodes.hasOwnProperty('links') && diagramOrGraphOrNodes.hasOwnProperty('nodes')) {\n                    nodes = diagramOrGraphOrNodes.nodes;\n                    links = diagramOrGraphOrNodes.links;\n                    for (i = 0; i < nodes.length; i++) {\n                        node = nodes[i];\n                        shape = node.associatedShape;\n                        if (shape) {\n                            this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                        }\n                    }\n                    for (i = 0; i < links.length; i++) {\n                        link = links[i];\n                        conn = link.associatedConnection;\n                        if (conn) {\n                            this.linkMap.set(conn.visual.id, link.points);\n                        }\n                    }\n                } else {\n                    var shapes = this.diagram.shapes;\n                    var connections = this.diagram.connections;\n                    for (i = 0; i < shapes.length; i++) {\n                        shape = shapes[i];\n                        this.nodeMap.set(shape.visual.id, shape.bounds());\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        conn = connections[i];\n                        this.linkMap.set(conn.visual.id, conn.points());\n                    }\n                }\n            }\n        });\n        deepExtend(diagram, {\n            init: function (element) {\n                kendo.init(element, diagram.ui);\n            },\n            SpringLayout: SpringLayout,\n            TreeLayout: TreeLayout,\n            GraphAdapter: DiagramToHyperTreeAdapter,\n            LayeredLayout: LayeredLayout,\n            LayoutBase: LayoutBase,\n            LayoutState: LayoutState\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/diagram/dom', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.toolbar',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.dropdownlist',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var dataviz = kendo.dataviz, draw = kendo.drawing, geom = kendo.geometry, diagram = dataviz.diagram, Widget = kendo.ui.Widget, Class = kendo.Class, proxy = $.proxy, deepExtend = kendo.deepExtend, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, HierarchicalDataSource = kendo.data.HierarchicalDataSource, Canvas = diagram.Canvas, Group = diagram.Group, Rectangle = diagram.Rectangle, Circle = diagram.Circle, CompositeTransform = diagram.CompositeTransform, Rect = diagram.Rect, Path = diagram.Path, DeleteShapeUnit = diagram.DeleteShapeUnit, DeleteConnectionUnit = diagram.DeleteConnectionUnit, TextBlock = diagram.TextBlock, Image = diagram.Image, Point = diagram.Point, Intersect = diagram.Intersect, ConnectionEditAdorner = diagram.ConnectionEditAdorner, UndoRedoService = diagram.UndoRedoService, ToolService = diagram.ToolService, Selector = diagram.Selector, ResizingAdorner = diagram.ResizingAdorner, ConnectorsAdorner = diagram.ConnectorsAdorner, Cursors = diagram.Cursors, Utils = diagram.Utils, Observable = kendo.Observable, ToBackUnit = diagram.ToBackUnit, ToFrontUnit = diagram.ToFrontUnit, PolylineRouter = diagram.PolylineRouter, CascadingRouter = diagram.CascadingRouter, isUndefined = Utils.isUndefined, isDefined = Utils.isDefined, defined = kendo.util.defined, isArray = $.isArray, isFunction = kendo.isFunction, isString = Utils.isString, isPlainObject = $.isPlainObject, math = Math;\n        var NS = '.kendoDiagram', CASCADING = 'cascading', ITEMBOUNDSCHANGE = 'itemBoundsChange', CHANGE = 'change', CLICK = 'click', DRAG = 'drag', DRAG_END = 'dragEnd', DRAG_START = 'dragStart', MOUSE_ENTER = 'mouseEnter', MOUSE_LEAVE = 'mouseLeave', ERROR = 'error', AUTO = 'Auto', TOP = 'Top', RIGHT = 'Right', LEFT = 'Left', BOTTOM = 'Bottom', MAXINT = 9007199254740992, SELECT = 'select', ITEMROTATE = 'itemRotate', PAN = 'pan', ZOOM_START = 'zoomStart', ZOOM_END = 'zoomEnd', NONE = 'none', DEFAULT_CANVAS_WIDTH = 600, DEFAULT_CANVAS_HEIGHT = 600, DEFAULT_SHAPE_TYPE = 'rectangle', DEFAULT_SHAPE_WIDTH = 100, DEFAULT_SHAPE_HEIGHT = 100, DEFAULT_SHAPE_MINWIDTH = 20, DEFAULT_SHAPE_MINHEIGHT = 20, DEFAULT_SHAPE_POSITION = 0, DEFAULT_CONNECTION_BACKGROUND = 'Yellow', MAX_VALUE = Number.MAX_VALUE, MIN_VALUE = -Number.MAX_VALUE, ABSOLUTE = 'absolute', TRANSFORMED = 'transformed', ROTATED = 'rotated', TRANSPARENT = 'transparent', WIDTH = 'width', HEIGHT = 'height', X = 'x', Y = 'y', MOUSEWHEEL_NS = 'DOMMouseScroll' + NS + ' mousewheel' + NS, MOBILE_ZOOM_RATE = 0.05, MOBILE_PAN_DISTANCE = 5, BUTTON_TEMPLATE = '<a class=\"k-button k-button-icontext #=className#\" href=\"\\\\#\"><span class=\"#=iconClass# #=imageClass#\"></span>#=text#</a>', CONNECTION_CONTENT_OFFSET = 5;\n        diagram.DefaultConnectors = [\n            { name: TOP },\n            { name: BOTTOM },\n            { name: LEFT },\n            { name: RIGHT },\n            {\n                name: AUTO,\n                position: function (shape) {\n                    return shape.getPosition('center');\n                }\n            }\n        ];\n        var defaultButtons = {\n            cancel: {\n                text: 'Cancel',\n                imageClass: 'k-i-cancel',\n                className: 'k-diagram-cancel',\n                iconClass: 'k-icon'\n            },\n            update: {\n                text: 'Update',\n                imageClass: 'k-i-update',\n                className: 'k-diagram-update',\n                iconClass: 'k-icon'\n            }\n        };\n        diagram.shapeDefaults = function (extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: '',\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: { angle: 0 }\n            };\n            Utils.simpleExtend(defaults, extra);\n            return defaults;\n        };\n        function mwDelta(e) {\n            var origEvent = e.originalEvent, delta = 0;\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n            return delta;\n        }\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n        function closestConnector(point, connectors) {\n            var minimumDistance = MAXINT, resCtr, connector;\n            for (var i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                if (!isAutoConnector(connector)) {\n                    var dist = point.distanceTo(connector.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = connector;\n                    }\n                }\n            }\n            return resCtr;\n        }\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n        var DiagramElement = Observable.extend({\n            init: function (options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: { align: 'center middle' },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n            _getCursor: function (point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n            visible: function (value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n            bounds: function () {\n            },\n            refresh: function () {\n                this.visual.redraw();\n            },\n            position: function (point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n            toString: function () {\n                return this.options.id;\n            },\n            serialize: function () {\n                var json = deepExtend({}, { options: this.options });\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n            _content: function (content) {\n                if (content !== undefined) {\n                    var options = this.options;\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n                return this.options.content.text;\n            },\n            _createContentVisual: function (options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n            _updateContentVisual: function (options) {\n                this._contentVisual.redraw(options);\n            },\n            _hitTest: function (point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n            _template: function () {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {}, elementTemplate = kendo.template(that.options.content.template, { paramName: 'dataItem' });\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n            _canSelect: function () {\n                return this.options.selectable !== false;\n            },\n            toJSON: function () {\n                return { id: this.options.id };\n            }\n        });\n        var Connector = Class.extend({\n            init: function (shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: { color: DEFAULT_CONNECTION_BACKGROUND },\n                hover: {}\n            },\n            position: function () {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function () {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n        Connector.parse = function (diagram, str) {\n            var tempStr = str.split(':'), id = tempStr[0], name = tempStr[1] || AUTO;\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n        var Shape = DiagramElement.extend({\n            init: function (options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n                that._createConnectors();\n            },\n            options: diagram.shapeDefaults(),\n            _setOptionsFromModel: function (model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n                this.redrawVisual();\n            },\n            updateOptionsFromModel: function (model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\n                                'x',\n                                'y',\n                                'width',\n                                'height'\n                            ])) {\n                            if (this.options.visual) {\n                                this._redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this._redrawVisual();\n                            }\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n            _redrawVisual: function () {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n            redrawVisual: function () {\n                this._redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n            updateModel: function (syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set('x', bounds.x);\n                        }\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set('y', bounds.y);\n                        }\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set('width', bounds.width);\n                        }\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set('height', bounds.height);\n                        }\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n            updateBounds: function () {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n            content: function (content) {\n                var result = this._content(content);\n                this._alignContent();\n                return result;\n            },\n            _alignContent: function () {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n            _createConnectors: function () {\n                var options = this.options, length = options.connectors.length, connectorDefaults = options.connectorDefaults, connector, i;\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(this, deepExtend({}, connectorDefaults, options.connectors[i]));\n                    this.connectors.push(connector);\n                }\n            },\n            bounds: function (value) {\n                var bounds;\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                        case TRANSFORMED:\n                            bounds = this._transformedBounds();\n                            break;\n                        case ABSOLUTE:\n                            bounds = this._transformedBounds();\n                            var pan = this.diagram._pan;\n                            bounds.x += pan.x;\n                            bounds.y += pan.y;\n                            break;\n                        case ROTATED:\n                            bounds = this._rotatedBounds();\n                            break;\n                        default:\n                            bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n                return bounds;\n            },\n            _setBounds: function (rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n                this._bounds = new Rect(x, y, width, height);\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n            position: function (point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                json.options.id = diagram.randomId();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Shape(json.options);\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            rotate: function (angle, center, undoable) {\n                var rotate = this.visual.rotate();\n                if (angle !== undefined) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n                    var b = this.bounds(), sc = new Point(b.width / 2, b.height / 2), deltaAngle, newPosition;\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(center, 360 - deltaAngle).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n                    this.refreshConnections();\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n                return rotate;\n            },\n            connections: function (type) {\n                var result = [], i, j, con, cons, ctr;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == 'out') {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == 'in') {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n                return result;\n            },\n            refreshConnections: function () {\n                $.each(this.connections(), function () {\n                    this.refresh();\n                });\n            },\n            getConnector: function (nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this.connectors);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n            getPosition: function (side) {\n                var b = this.bounds(), fnName = side.charAt(0).toLowerCase() + side.slice(1);\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n                return b.center();\n            },\n            redraw: function (options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n                    this.shapeVisual.redraw(this._visualOptions(options));\n                    if (this._diffNumericOptions(options, [\n                            WIDTH,\n                            HEIGHT,\n                            X,\n                            Y\n                        ])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n                    shapeOptions = deepExtend(shapeOptions, options);\n                    if (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n            _updateConnectors: function () {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n            _diffNumericOptions: diagram.diffNumericOptions,\n            _visualOptions: function (options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n            _triggerBoundsChange: function () {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, {\n                        item: this,\n                        bounds: this._bounds.clone()\n                    });\n                }\n            },\n            _transformPoint: function (point) {\n                var rotate = this.rotate(), bounds = this.bounds(), tl = bounds.topLeft();\n                if (rotate.angle) {\n                    point.rotate(rotate.center().plus(tl), 360 - rotate.angle);\n                }\n                return point;\n            },\n            _transformedBounds: function () {\n                var bounds = this.bounds(), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n            _rotatedBounds: function () {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle), tl = bounds.topLeft(), br = bounds.bottomRight();\n                return Rect.fromPoints(tl, br);\n            },\n            _rotate: function () {\n                var rotation = this.options.rotation;\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n                this._rotationOffset = new Point();\n            },\n            _hover: function (value) {\n                var options = this.options, hover = options.hover, stroke = options.stroke, fill = options.fill;\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint, angle = this.rotate().angle;\n                    if (value.isEmpty && !value.isEmpty()) {\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else {\n                        rotatedPoint = value.clone().rotate(bounds.center(), angle);\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n            toJSON: function () {\n                return { shapeId: this.options.id };\n            },\n            createShapeVisual: function () {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + '').toLocaleLowerCase();\n                var shapeVisual;\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n                if (isFunction(visualTemplate)) {\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == 'rectangle') {\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == 'circle') {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == 'text') {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == 'image') {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n        var Connection = DiagramElement.extend({\n            init: function (from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n            options: {\n                hover: { stroke: {} },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConenctor: AUTO\n            },\n            _setOptionsFromModel: function (model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n            updateOptionsFromModel: function (model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                                from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n                        this.dataItem = model;\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n            updateModel: function (syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField('from', model);\n                                clearField('fromConnector', model);\n                                model.set('fromX', this.options.fromX);\n                                model.set('fromY', this.options.fromY);\n                            } else {\n                                model.set('from', this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set('fromConnector', this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField('fromX', model);\n                                clearField('fromY', model);\n                            }\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField('to', model);\n                                clearField('toConnector', model);\n                                model.set('toX', this.options.toX);\n                                model.set('toY', this.options.toY);\n                            } else {\n                                model.set('to', this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set('toConnector', this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField('toX', model);\n                                clearField('toY', model);\n                            }\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set('type', this.options.type);\n                            }\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n            sourcePoint: function () {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n            _setSource: function (source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (source !== undefined) {\n                    this.from = source;\n                }\n                this._removeFromSourceConnector();\n                if (source === null) {\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n            source: function (source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n            _setFromOptions: function (from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint) {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n            sourceDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n            targetPoint: function () {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n            _setTarget: function (target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n                if (target !== undefined) {\n                    this.to = target;\n                }\n                this._removeFromTargetConnector();\n                if (target === null) {\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n            target: function (target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined, target));\n                    }\n                    this._setTarget(target);\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n            _setToOptions: function (to, toPoint) {\n                this.options.to = to;\n                if (toPoint) {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n            targetDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point);\n                    } else {\n                        throw 'The sourceDefiner needs to be a PathDefiner.';\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n            _updateConnectors: function () {\n                this._updateConnector(this.source(), 'source');\n                this._updateConnector(this.target(), 'target');\n            },\n            _updateConnector: function (instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function () {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                        setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n            content: function (content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n            _createContentVisual: function (options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n                return visual;\n            },\n            _updateContentVisual: function (options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n            _alignContent: function () {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n                    while (startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n                    if (alignToPath && points.length > 2 && distance > 0 && (startPoint.y === endPoint.y && distance < width || startPoint.x === endPoint.x && distance < height)) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n                    var point;\n                    if (alignToPath) {\n                        var angle = kendo.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y -= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || 0 < angle && angle < 90) {\n                            point.y -= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n                    this._contentVisual.position(point);\n                }\n            },\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined;\n                                deselected.push(this);\n                            }\n                        }\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            bounds: function (value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            type: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n            _initRouter: function () {\n                var type = (this.options.type || '').toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            points: function (value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty('x') && definition.hasOwnProperty('y')) {\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw 'A Connection point needs to be a Point or an object with x and y properties.';\n                        }\n                    }\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            allPoints: function () {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n            refresh: function () {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n            _resolveConnectors: function () {\n                var connection = this, sourcePoint, targetPoint, sourceConnectors, targetConnectors, source = connection.source(), target = connection.target();\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        sourceConnectors = source.shape.connectors;\n                    } else {\n                        sourceConnectors = [source];\n                    }\n                }\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        targetConnectors = target.shape.connectors;\n                    } else {\n                        targetConnectors = [target];\n                    }\n                }\n                if (sourcePoint) {\n                    if (targetConnectors) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, targetConnectors);\n                    }\n                } else if (sourceConnectors) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, sourceConnectors);\n                    } else if (targetConnectors) {\n                        this._resolveAutoConnectors(sourceConnectors, targetConnectors);\n                    }\n                }\n            },\n            _resolveAutoConnectors: function (sourceConnectors, targetConnectors) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n            _testRoutePoints: function (sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector), start, end, rect;\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y), math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width -= 2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height -= 2;\n                        }\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n            redraw: function (options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n                    var points = this.options.points;\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n                    if (options && options.content || options.text) {\n                        this.content(options.content);\n                    }\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            clone: function () {\n                var json = this.serialize();\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n                return new Connection(this.from, this.to, json.options);\n            },\n            serialize: function () {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(), to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                json.options.points = this.points();\n                return json;\n            },\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n            _hover: function (value) {\n                var color = (this.options.stroke || {}).color;\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n                this.path.redraw({ stroke: { color: color } });\n            },\n            _refreshPath: function () {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n            _drawPath: function () {\n                if (this._router) {\n                    this._router.route();\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n                this.path.redraw({ points: [source].concat(points, [target]) });\n            },\n            _clearSourceConnector: function () {\n                this.sourceConnector = undefined;\n                this._resolvedSourceConnector = undefined;\n            },\n            _clearTargetConnector: function () {\n                this.targetConnector = undefined;\n                this._resolvedTargetConnector = undefined;\n            },\n            _removeFromSourceConnector: function () {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n            _removeFromTargetConnector: function () {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n            toJSON: function () {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n                return {\n                    from: from,\n                    to: to\n                };\n            }\n        });\n        var Diagram = Widget.extend({\n            init: function (element, userOptions) {\n                var that = this;\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n                that._initTheme();\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._interactionDefaults();\n                that._initCanvas();\n                that.mainLayer = new Group({ id: 'main-layer' });\n                that.canvas.append(that.mainLayer);\n                that._shapesQuadTree = new ShapesQuadTree(that);\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({ id: 'adorner-layer' });\n                that.canvas.append(that.adornerLayer);\n                that._createHandlers();\n                that._initialize();\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n                that.selector = new Selector(that);\n                that._clipboard = [];\n                that.pauseMouseHandlers = false;\n                that._fetchFreshData();\n                that._createGlobalToolBar();\n                that._createOptionElements();\n                that.zoom(that.options.zoom);\n                that.canvas.draw();\n            },\n            options: {\n                name: 'Diagram',\n                theme: 'default',\n                layout: '',\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: '',\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: {},\n                selectable: { key: 'none' },\n                tooltip: {\n                    enabled: true,\n                    format: '{0}'\n                },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: { tools: [] },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN,\n                SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                'toolBarClick',\n                'save',\n                'cancel',\n                'edit',\n                'remove',\n                'add',\n                'dataBound',\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n            items: function () {\n                return $();\n            },\n            _createGlobalToolBar: function () {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\n                            'createShape',\n                            'undo',\n                            'redo',\n                            'rotateClockwise',\n                            'rotateAnticlockwise'\n                        ];\n                    }\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: proxy(this._toolBarClick, this),\n                            modal: false\n                        });\n                        this.toolBar.element.css({ textAlign: 'left' });\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n            createShape: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n                    if (!this.trigger('add', { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n            _createShape: function (dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n            createConnection: function () {\n                if (this.editor && this.editor.end() || !this.editor) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n            _createConnection: function (dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n                return connection;\n            },\n            editModel: function (dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n                if (editorType == 'shape') {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == 'connection') {\n                    var connectionSelectorHandler = proxy(connectionSelector, this);\n                    editors = deepExtend({}, {\n                        from: connectionSelectorHandler,\n                        to: connectionSelectorHandler\n                    }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n                this.editor = new PopupEditor(this.element, {\n                    update: proxy(this._update, this),\n                    cancel: proxy(this._cancel, this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n                this.trigger('edit', this._editArgs());\n            },\n            edit: function (item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? 'shape' : 'connection';\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n            cancelEdit: function () {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n                    this._destroyEditor();\n                }\n            },\n            saveEdit: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n            _update: function () {\n                if (this.editor && this.editor.end() && !this.trigger('save', this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n            _cancel: function () {\n                if (this.editor && !this.trigger('cancel', this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n            _getEditDataSource: function () {\n                return this.editor.options.type === 'shape' ? this.dataSource : this.connectionsDataSource;\n            },\n            _editArgs: function () {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n            _destroyEditor: function () {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n            _initElements: function () {\n                this.wrapper = this.element.empty().css('position', 'relative').attr('tabindex', 0).addClass('k-widget k-diagram');\n                this.scrollable = $('<div />').appendTo(this.element);\n            },\n            _initDefaults: function (userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\n                        'drag',\n                        'remove',\n                        'connect'\n                    ]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\n                        'drag',\n                        'remove'\n                    ]);\n                }\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n            _interactionDefaults: function () {\n                var options = this.options;\n                var selectable = options.selectable;\n                var pannable = options.pannable;\n                var mobile = kendo.support.mobileOS;\n                if (selectable && !defined(selectable.multiple)) {\n                    options.selectable = deepExtend({ multiple: mobile ? false : true }, options.selectable);\n                }\n                if (pannable && !defined(pannable.key)) {\n                    options.pannable = deepExtend({ key: mobile ? 'none' : 'ctrl' }, options.pannable);\n                }\n            },\n            _initCanvas: function () {\n                var canvasContainer = $('<div class=\\'k-layer\\'></div>').appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n            _createHandlers: function () {\n                var that = this;\n                var element = that.element;\n                element.on(MOUSEWHEEL_NS, proxy(that._wheel, that)).on('keydown' + NS, proxy(that._keydown, that));\n                that._userEvents = new kendo.UserEvents(this.scrollable, {\n                    multiTouch: true,\n                    fastTap: true,\n                    tap: proxy(that._tap, that),\n                    start: proxy(that._dragStart, that),\n                    move: proxy(that._drag, that),\n                    end: proxy(that._dragEnd, that),\n                    gesturestart: proxy(that._gestureStart, that),\n                    gesturechange: proxy(that._gestureChange, that),\n                    gestureend: proxy(that._gestureEnd, that)\n                });\n                that.toolService = new ToolService(that);\n                this.scrollable.on('mouseover' + NS, proxy(that._mouseover, that)).on('mouseout' + NS, proxy(that._mouseout, that)).on('mousemove' + NS, proxy(that._mouseMove, that)).on('mousedown' + NS, proxy(that._mouseDown, that)).on('mouseup' + NS, proxy(that._mouseUp, that));\n                this._syncHandler = proxy(that._syncChanges, that);\n                that._resizeHandler = proxy(that.resize, that, false);\n                kendo.onResize(that._resizeHandler);\n                this.bind(ZOOM_START, proxy(that._destroyToolBar, that));\n                this.bind(PAN, proxy(that._destroyToolBar, that));\n            },\n            _dragStart: function (e) {\n                this._pauseMouseHandlers = true;\n                var point = this._eventPositions(e, true);\n                var event = e.event;\n                if (this.toolService.start(point, this._meta(event))) {\n                    this._destroyToolBar();\n                    event.preventDefault();\n                }\n            },\n            _drag: function (e) {\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.move(p, this._meta(event))) {\n                    event.preventDefault();\n                }\n            },\n            _dragEnd: function (e) {\n                this._pauseMouseHandlers = false;\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.end(p, this._meta(event))) {\n                    this._createToolBar();\n                    event.preventDefault();\n                }\n            },\n            _mouseMove: function (e) {\n                if (!this._pauseMouseHandlers) {\n                    var p = this._eventPositions(e);\n                    this.toolService._updateHoveredItem(p);\n                    this.toolService._updateCursor(p);\n                }\n            },\n            _mouseDown: function () {\n                this._pauseMouseHandlers = true;\n            },\n            _mouseUp: function () {\n                this._pauseMouseHandlers = false;\n            },\n            _tap: function (e) {\n                var toolService = this.toolService;\n                var selectable = this.options.selectable;\n                var point = this._eventPositions(e);\n                var focused = this.focus();\n                toolService._updateHoveredItem(point);\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n                    this.trigger('click', {\n                        item: item,\n                        point: point\n                    });\n                    if (selectable && item.options.selectable !== false) {\n                        var multiple = selectable.multiple !== false;\n                        var ctrlPressed = kendo.support.mobileOS || this._meta(e.event).ctrlKey;\n                        if (item.isSelected) {\n                            if (ctrlPressed) {\n                                this._destroyToolBar();\n                                item.select(false);\n                            } else {\n                                this._createToolBar(focused);\n                            }\n                        } else {\n                            this._destroyToolBar();\n                            this.select(item, { addToSelection: multiple && ctrlPressed });\n                            this._createToolBar(focused);\n                        }\n                    }\n                } else if (selectable) {\n                    this._destroyToolBar();\n                    this.deselect();\n                }\n            },\n            _keydown: function (e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n            _wheel: function (e) {\n                var delta = mwDelta(e), p = this._eventPositions(e), meta = deepExtend(this._meta(e), { delta: delta });\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n            _meta: function (e) {\n                return {\n                    ctrlKey: e.ctrlKey,\n                    metaKey: e.metaKey,\n                    altKey: e.altKey,\n                    shiftKey: e.shiftKey,\n                    type: e.type\n                };\n            },\n            _eventPositions: function (e, start) {\n                var point;\n                if (e.touch) {\n                    var field = start ? 'startLocation' : 'location';\n                    point = new Point(e.x[field], e.y[field]);\n                } else {\n                    point = new Point(e.pageX, e.pageY);\n                }\n                return this.documentToModel(point);\n            },\n            _gestureStart: function (e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n            _gestureChange: function (e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n                e.preventDefault();\n            },\n            _gestureEnd: function () {\n                if (this.options.pannable !== false) {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n            _resize: function () {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n            _mouseover: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n            _mouseout: function (e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n            _initTheme: function () {\n                var that = this, themes = dataviz.ui.themes || {}, themeName = ((that.options || {}).theme || '').toLowerCase(), themeOptions = (themes[themeName] || {}).diagram;\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, { editable: (themeOptions || {}).editable });\n                }\n            },\n            _createOptionElements: function () {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n                if (shapesLength) {\n                    this._createShapes();\n                }\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n            _createShapes: function () {\n                var that = this, options = that.options, shapes = options.shapes, shape, i;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n            _createConnections: function () {\n                var diagram = this, options = diagram.options, defaults = options.connectionDefaults, connections = options.connections, conn, source, target, i;\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n            _findConnectionTarget: function (options) {\n                options = options || {};\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n                return target;\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined;\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n            destroyScroller: function () {\n                var scroller = this.scroller;\n                if (!scroller) {\n                    return;\n                }\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n            save: function () {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n                return json;\n            },\n            focus: function () {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element, scrollContainer = element[0], containers = [], offsets = [], documentElement = document.documentElement, i;\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n                    element.focus();\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                    return true;\n                }\n            },\n            load: function (options) {\n                this.clear();\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n            setOptions: function (options) {\n                deepExtend(this.options, options);\n            },\n            clear: function () {\n                var that = this;\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            connect: function (source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target, deepExtend({}, this.options.connectionDefaults, options));\n                    this.addConnection(connection);\n                }\n                return connection;\n            },\n            connected: function (source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            addConnection: function (connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddConnectionUnit(connection, this), false);\n                }\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n                return connection;\n            },\n            _addConnection: function (connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n                    if (!this.trigger('add', { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n                        return connection;\n                    }\n                } else if (!this.trigger('add', { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n            addShape: function (item, undoable) {\n                var shape, shapeDefaults = this.options.shapeDefaults;\n                if (item instanceof Shape) {\n                    shape = item;\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                } else {\n                    return;\n                }\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n                return shape;\n            },\n            _addShape: function (shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n                    if (!this.trigger('add', { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger('add', { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n            remove: function (items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                    this._removeItem(shapes[i], undoable, connections);\n                }\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n                this._resumeModelRefresh();\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n            _removeShapeDataItem: function (item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n            _removeConnectionDataItem: function (item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n            _triggerRemove: function (items) {\n                var toRemove = [];\n                var item, args, editable;\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger('remove', args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n            undo: function () {\n                this.undoRedoService.undo();\n            },\n            redo: function () {\n                this.undoRedoService.redo();\n            },\n            select: function (item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n                    var addToSelection = options.addToSelection, items = [], selected = [], i, element;\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n                    this._internalSelection = true;\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [item];\n                    }\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n                    this._selectionChanged(selected, []);\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n            selectAll: function () {\n                this.select(this.shapes.concat(this.connections));\n            },\n            selectArea: function (rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n            deselect: function (item) {\n                this._internalSelection = true;\n                var deselected = [], items = [], element, i;\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            toFront: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            toBack: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            bringIntoView: function (item, options) {\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n                options = deepExtend({\n                    animate: false,\n                    align: 'center middle'\n                }, options);\n                if (options.align == 'none') {\n                    options.align = 'center middle';\n                }\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n                original = rect.clone();\n                rect.zoom(this._zoom);\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n                this._zoomMainLayer();\n                current = rect.clone();\n                aligner.align(rect, options.align);\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n            alignShapes: function (direction) {\n                if (isUndefined(direction)) {\n                    direction = 'Left';\n                }\n                var items = this.select(), val, item, i;\n                if (items.length === 0) {\n                    return;\n                }\n                switch (direction.toLowerCase()) {\n                case 'left':\n                case 'top':\n                    val = MAX_VALUE;\n                    break;\n                case 'right':\n                case 'bottom':\n                    val = MIN_VALUE;\n                    break;\n                }\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                            val = math.min(val, item.options.x);\n                            break;\n                        case 'top':\n                            val = math.min(val, item.options.y);\n                            break;\n                        case 'right':\n                            val = math.max(val, item.options.x);\n                            break;\n                        case 'bottom':\n                            val = math.max(val, item.options.y);\n                            break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                        case 'left':\n                        case 'right':\n                            item.position(new Point(val, item.options.y));\n                            break;\n                        case 'top':\n                        case 'bottom':\n                            item.position(new Point(item.options.x, val));\n                            break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n            zoom: function (zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    zoom = this._zoom = this._getValidZoom(zoom);\n                    if (!isUndefined(staticPoint)) {\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n                    this._panTransform();\n                    this.canvas.surface.hideTooltip();\n                    this._updateAdorners();\n                }\n                return this._zoom;\n            },\n            _getPan: function (pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n            pan: function (pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function () {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                } else {\n                    return this._pan.times(-1);\n                }\n            },\n            viewport: function () {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n                if (this.toolBar) {\n                    height -= outerHeight(this.toolBar.element);\n                }\n                return new Rect(0, 0, width, height);\n            },\n            copy: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n            paste: function () {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, 'source', mapping, offset);\n                            this._updateCopiedConnection(copied, item, 'target', mapping, offset);\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n                    this._syncChanges();\n                    this._copyOffset += 1;\n                }\n            },\n            _updateCopiedConnection: function (connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function (item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + 'Point']().x + offset.x, sourceConnection[connectorName + 'Point']().y + offset.y));\n                }\n            },\n            boundingBox: function (items, origin) {\n                var rect = Rect.empty(), temp, di = isDefined(items) ? this._getDiagramItems(items) : { shapes: this.shapes };\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n            _containerOffset: function () {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += outerHeight(this.toolBar.element);\n                }\n                return containerOffset;\n            },\n            documentToView: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function (point) {\n                var containerOffset = this._containerOffset();\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function (point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function (point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function (point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function (point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function (point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function (point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                } else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix), br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n            setDataSource: function (dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            setConnectionsDataSource: function (dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n            layout: function (options) {\n                this._layouting = true;\n                var type;\n                if (isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = 'Tree';\n                } else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                case 'tree':\n                    l = new diagram.TreeLayout(this);\n                    break;\n                case 'layered':\n                    l = new diagram.LayeredLayout(this);\n                    break;\n                case 'forcedirected':\n                case 'force':\n                case 'spring':\n                case 'springembedder':\n                    l = new diagram.SpringLayout(this);\n                    break;\n                default:\n                    throw 'Layout algorithm \\'' + type + '\\' is not supported.';\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            getShapeById: function (id) {\n                var found;\n                found = Utils.first(this.shapes, function (s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function (c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n            getShapeByModelId: function (id) {\n                var shape;\n                if (this._isEditable) {\n                    shape = this._dataMap[id];\n                } else {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).id === id;\n                    });\n                }\n                return shape;\n            },\n            getShapeByModelUid: function (uid) {\n                var shape;\n                if (this._isEditable) {\n                    shape = Utils.first(this.shapes, function (shape) {\n                        return (shape.dataItem || {}).uid === uid;\n                    });\n                } else {\n                    shape = this._dataMap[uid];\n                }\n                return shape;\n            },\n            getConnectionByModelId: function (id) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = Utils.first(this.connections, function (connection) {\n                        return (connection.dataItem || {}).id === id;\n                    });\n                }\n                return connection;\n            },\n            getConnectionByModelUid: function (uid) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = this._connectionsDataMap[uid];\n                }\n                return connection;\n            },\n            _extendLayoutOptions: function (options) {\n                if (options.layout) {\n                    options.layout = deepExtend({}, diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n            _selectionChanged: function (selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, {\n                        selected: selected,\n                        deselected: deselected\n                    });\n                }\n            },\n            _getValidZoom: function (zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function (pos) {\n                var diagram = this, pan = pos || diagram._pan;\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n            _finishPan: function () {\n                this.trigger(PAN, {\n                    total: this._pan,\n                    delta: Number.NaN\n                });\n            },\n            _storePan: function (pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function () {\n                var zoom = this._zoom;\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function (canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function () {\n                var pan = this._pan, zoom = this._zoom;\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function (items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function (result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0, conPos = toFront ? this.connections.length - 1 : 0, i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function (items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n                return result;\n            },\n            _removeItem: function (item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n                this.mainLayer.remove(item.visual);\n            },\n            _removeShape: function (shape, undoable, removedConnections) {\n                var i, connection, connector, sources = [], targets = [];\n                this.toolService._removeHover();\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n            _removeConnection: function (connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n                Utils.remove(this.connections, connection);\n            },\n            _removeDataItems: function (items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n            _removeShapeConnections: function (shape) {\n                var connections = shape.connections();\n                var idx;\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n            _addDataItem: function (dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n            _addDataItemByUid: function (dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n            _addDataItems: function (items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) {\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n            _refreshSource: function (e) {\n                var that = this, node = e.node, action = e.action, items = e.items, options = that.options, idx, dataBound;\n                if (e.field) {\n                    for (idx = 0; idx < items.length; idx++) {\n                        if (this._dataMap[items[idx].uid]) {\n                            this._dataMap[items[idx].uid].redrawVisual();\n                        }\n                    }\n                    return;\n                }\n                if (action == 'remove') {\n                    this._removeDataItems(e.items, true);\n                } else {\n                    if ((!action || action === 'itemloaded') && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n                    if (!action && !node) {\n                        that.clear();\n                    }\n                    this._addDataItems(items, node);\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n                if (options.layout && (dataBound || action == 'remove' || action == 'add')) {\n                    that.layout(options.layout);\n                }\n                if (dataBound) {\n                    this.trigger('dataBound');\n                    this._bindingRoots = false;\n                }\n            },\n            _addItem: function (item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n            _createToolBar: function (preventClosing) {\n                var diagram = this.toolService.diagram;\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\n                                    'edit',\n                                    'rotateClockwise',\n                                    'rotateAnticlockwise'\n                                ];\n                            } else if (element instanceof Connection) {\n                                tools = ['edit'];\n                            }\n                            if (editable && editable.remove !== false) {\n                                tools.push('delete');\n                            }\n                        }\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: proxy(this._toolBarClick, this),\n                                modal: true\n                            });\n                            var popupWidth = outerWidth(this.singleToolBar._popup.element);\n                            var popupHeight = outerHeight(this.singleToolBar._popup.element);\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = Point(shapeBounds.x, shapeBounds.y).minus(Point((popupWidth - shapeBounds.width) / 2, popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n                                point = Point(connectionBounds.x, connectionBounds.y).minus(Point((popupWidth - connectionBounds.width - 20) / 2, popupHeight + padding));\n                            }\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                                if (preventClosing) {\n                                    this.singleToolBar._popup.one('close', preventDefault);\n                                }\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n            _toolBarClick: function (e) {\n                this.trigger('toolBarClick', e);\n                this._destroyToolBar();\n            },\n            _normalizePointZoom: function (point) {\n                return point.times(1 / this.zoom());\n            },\n            _initialize: function () {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n            _fetchFreshData: function () {\n                var that = this;\n                that._dataSource();\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n            _dataSource: function () {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource.unbind('change', this._shapesRefreshHandler).unbind('requestStart', this._shapesRequestStartHandler).unbind('error', this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = proxy(this._refreshShapes, this);\n                        this._shapesRequestStartHandler = proxy(this._shapesRequestStart, this);\n                        this._shapesErrorHandler = proxy(this._error, this);\n                    }\n                    this.dataSource = kendo.data.DataSource.create(ds).bind('change', this._shapesRefreshHandler).bind('requestStart', this._shapesRequestStartHandler).bind('error', this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n            _connectionDataSource: function () {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource.unbind('change', this._connectionsRefreshHandler).unbind('requestStart', this._connectionsRequestStartHandler).unbind('error', this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = proxy(this._refreshConnections, this);\n                        this._connectionsRequestStartHandler = proxy(this._connectionsRequestStart, this);\n                        this._connectionsErrorHandler = proxy(this._connectionsError, this);\n                    }\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds).bind('change', this._connectionsRefreshHandler).bind('requestStart', this._connectionsRequestStartHandler).bind('error', this._connectionsErrorHandler);\n                }\n            },\n            _shapesRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingShapes = true;\n                }\n            },\n            _connectionsRequestStart: function (e) {\n                if (e.type == 'read') {\n                    this._loadingConnections = true;\n                }\n            },\n            _error: function () {\n                this._loadingShapes = false;\n            },\n            _connectionsError: function () {\n                this._loadingConnections = false;\n            },\n            _refreshShapes: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === 'add') {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === 'sync') {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n            _shouldRefresh: function () {\n                return !this._suspended;\n            },\n            _suspendModelRefresh: function () {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n            _resumeModelRefresh: function () {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n            refresh: function () {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _rebindShapesAndConnections: function () {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger('dataBound');\n            },\n            refreshConnections: function () {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n            _redrawConnections: function () {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n            _removeShapes: function (items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n            _syncShapes: function () {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function (inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n            _updateShapes: function (items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n            _addShapes: function (dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n            _refreshConnections: function (e) {\n                if (e.action === 'remove') {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === 'add') {\n                    this._addConnections(e.items);\n                } else if (e.action === 'sync') {\n                } else if (e.action === 'itemchange') {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n            _removeConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n            _updateConnections: function (items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n            _addConnections: function (connections, undoable) {\n                var length = connections.length;\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n            _addConnectionDataItem: function (dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n            _validateConnector: function (value) {\n                var connector;\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n                return connector;\n            },\n            _treeDataSource: function () {\n                var that = this, options = that.options, dataSource = options.dataSource;\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n                if (dataSource instanceof kendo.data.DataSource && !(dataSource instanceof kendo.data.HierarchicalDataSource)) {\n                    throw new Error('Incorrect DataSource type. If a single dataSource instance is set to the diagram then it should be a HierarchicalDataSource. You should set only the options instead of an instance or a HierarchicalDataSource instance or supply connectionsDataSource as well.');\n                }\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: 'text' },\n                        { field: 'url' },\n                        { field: 'spriteCssClass' },\n                        { field: 'imageUrl' }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n                that._refreshHandler = proxy(that._refreshSource, that);\n                that._errorHandler = proxy(that._error, that);\n                that.dataSource = HierarchicalDataSource.create(dataSource).bind(CHANGE, that._refreshHandler).bind(ERROR, that._errorHandler);\n            },\n            _unbindDataSource: function () {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n            _adorn: function (adorner, isActive) {\n                if (isActive !== undefined && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    } else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n            _showConnectors: function (shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n            _updateAdorners: function () {\n                var adorners = this._adorners;\n                for (var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n            _refresh: function () {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n            _destroyToolBar: function () {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n            _destroyGlobalToolBar: function () {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n            exportDOMVisual: function () {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform().translate(-viewBox.x, -viewBox.y);\n                var viewRect = new geom.Rect([\n                    0,\n                    0\n                ], [\n                    viewBox.width,\n                    viewBox.height\n                ]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n                clipWrap.append(wrap);\n                wrap.children.push(root);\n                return clipWrap;\n            },\n            exportVisual: function () {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({ transform: scale });\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n                return wrap;\n            },\n            _syncChanges: function () {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n            _syncShapeChanges: function () {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n            _syncConnectionChanges: function () {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function () {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            return result;\n        }\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n            dataItem = dataItem || {};\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n            return result;\n        }\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function (diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n                this.bind(this.events, options);\n            },\n            events: ['click'],\n            createPopup: function () {\n                this.container = $('<div/>').append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n            appendTools: function () {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n            createToolBar: function () {\n                this.element = $('<div/>');\n                this._toolBar = this.element.kendoToolBar({\n                    click: proxy(this.click, this),\n                    resizable: false\n                }).getKendoToolBar();\n                this.element.css('border', 'none');\n            },\n            createTools: function () {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n            createTool: function (tool) {\n                if (!isPlainObject(tool)) {\n                    tool = { name: tool };\n                }\n                var toolName = tool.name + 'Tool';\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(deepExtend({}, tool, { attributes: this._setAttributes({ action: tool.name }) }));\n                }\n            },\n            showAt: function (point) {\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n                }\n            },\n            hide: function () {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n            newGroup: function () {\n                return {\n                    type: 'buttonGroup',\n                    buttons: []\n                };\n            },\n            editTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-pencil',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Edit',\n                    attributes: this._setAttributes({ action: 'edit' })\n                });\n            },\n            deleteTool: function () {\n                this._tools.push({\n                    spriteCssClass: 'k-icon k-i-close',\n                    showText: 'overflow',\n                    type: 'button',\n                    text: 'Delete',\n                    attributes: this._setAttributes({ action: 'delete' })\n                });\n            },\n            rotateAnticlockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotateccw',\n                    showText: 'overflow',\n                    text: 'RotateAnticlockwise',\n                    group: 'rotate',\n                    attributes: this._setAttributes({\n                        action: 'rotateAnticlockwise',\n                        step: options.step\n                    })\n                });\n            },\n            rotateClockwiseTool: function (options) {\n                this._appendGroup('rotate');\n                this._rotateGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-rotatecw',\n                    attributes: this._setAttributes({\n                        action: 'rotateClockwise',\n                        step: options.step\n                    }),\n                    showText: 'overflow',\n                    text: 'RotateClockwise',\n                    group: 'rotate'\n                });\n            },\n            createShapeTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-shape',\n                    showText: 'overflow',\n                    text: 'CreateShape',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createShape' })\n                });\n            },\n            createConnectionTool: function () {\n                this._appendGroup('create');\n                this._createGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-connector',\n                    showText: 'overflow',\n                    text: 'CreateConnection',\n                    group: 'create',\n                    attributes: this._setAttributes({ action: 'createConnection' })\n                });\n            },\n            undoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-undo',\n                    showText: 'overflow',\n                    text: 'Undo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'undo' })\n                });\n            },\n            redoTool: function () {\n                this._appendGroup('history');\n                this._historyGroup.buttons.push({\n                    spriteCssClass: 'k-icon k-i-redo',\n                    showText: 'overflow',\n                    text: 'Redo',\n                    group: 'history',\n                    attributes: this._setAttributes({ action: 'redo' })\n                });\n            },\n            _appendGroup: function (name) {\n                var prop = '_' + name + 'Group';\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n            _setAttributes: function (attributes) {\n                var attr = {};\n                if (attributes.action) {\n                    attr[kendo.attr('action')] = attributes.action;\n                }\n                if (attributes.step) {\n                    attr[kendo.attr('step')] = attributes.step;\n                }\n                return attr;\n            },\n            _getAttributes: function (element) {\n                var attr = {};\n                var action = element.attr(kendo.attr('action'));\n                if (action) {\n                    attr.action = action;\n                }\n                var step = element.attr(kendo.attr('step'));\n                if (step) {\n                    attr.step = step;\n                }\n                return attr;\n            },\n            click: function (e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n                if (action && this[action]) {\n                    this[action](attributes);\n                }\n                this.trigger('click', this.eventData(action, e.target));\n            },\n            eventData: function (action, target) {\n                var elements = this.selectedElements(), length = elements.length, shapes = [], connections = [], element;\n                for (var idx = 0; idx < length; idx++) {\n                    element = elements[idx];\n                    if (element instanceof Shape) {\n                        shapes.push(element);\n                    } else {\n                        connections.push(element);\n                    }\n                }\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action,\n                    target: target\n                };\n            },\n            'delete': function () {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n            edit: function () {\n                var selectedElemens = this.selectedElements();\n                if (selectedElemens.length === 1) {\n                    this.diagram.edit(selectedElemens[0]);\n                }\n            },\n            rotateClockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n            rotateAnticlockwise: function (options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n            _rotate: function (angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n            selectedElements: function () {\n                return this.diagram.select();\n            },\n            createShape: function () {\n                this.diagram.createShape();\n            },\n            createConnection: function () {\n                this.diagram.createConnection();\n            },\n            undo: function () {\n                this.diagram.undo();\n            },\n            redo: function () {\n                this.diagram.redo();\n            },\n            destroy: function () {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n            options: { editors: {} },\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n            _isEditable: function (field) {\n                return this.model.editable && this.model.editable(field);\n            },\n            _getFields: function () {\n                var fields = [];\n                var modelFields = this.model.fields;\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n                this.open();\n            },\n            events: [\n                'update',\n                'cancel'\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid);\n                var formContent = '';\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n                formContent += this._renderButtons();\n                this.wrapper.append($('<div class=\"k-edit-form-container\"/>').append(formContent));\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        e.sender.element.focus();\n                        that._cancelClick(e);\n                    }\n                });\n                this._attachButtonEvents();\n            },\n            _renderTemplate: function () {\n                var template = this.options.template;\n                if (typeof template === 'string') {\n                    template = window.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                return template;\n            },\n            _renderFields: function () {\n                var form = '';\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || '') + '</label></div>';\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr('container-for') + '=\"' + field.field + '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n                return form;\n            },\n            _renderButtons: function () {\n                var form = '<div class=\"k-edit-buttons k-state-default\">';\n                form += this._createButton('update');\n                form += this._createButton('cancel');\n                form += '</div>';\n                return form;\n            },\n            _createButton: function (name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n            _attachButtonEvents: function () {\n                this._cancelClickHandler = proxy(this._cancelClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this._updateClickHandler = proxy(this._updateClick, this);\n                this.window.element.on(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n            },\n            _updateClick: function (e) {\n                e.preventDefault();\n                this.trigger('update');\n            },\n            _cancelClick: function (e) {\n                e.preventDefault();\n                this.trigger('cancel');\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, 'a.k-diagram-cancel', this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, 'a.k-diagram-update', this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? 'text' : model.idField;\n                $('<input name=\\'' + options.field + '\\' />').appendTo(container).kendoDropDownList({\n                    dataValueField: model.idField,\n                    dataTextField: textField,\n                    dataSource: this.dataSource.data().toJSON(),\n                    optionLabel: ' ',\n                    valuePrimitive: true\n                });\n            }\n        }\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function (callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n            activate: function () {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function (items) {\n                for (var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n            forEach: function (callback) {\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n            getByUid: function (uid) {\n                return this.items[uid];\n            },\n            remove: function (item) {\n                delete this.items[item.uid];\n            }\n        };\n        var QuadRoot = Class.extend({\n            init: function () {\n                this.shapes = [];\n            },\n            _add: function (shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n            insert: function (shape, bounds) {\n                this._add(shape, bounds);\n            },\n            remove: function (shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect)) {\n                        return true;\n                    }\n                }\n            },\n            _testRect: function (shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n        var QuadNode = QuadRoot.extend({\n            init: function (rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n            inBounds: function (rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n            overlapsBounds: function (rect) {\n                return this.rect.overlaps(rect);\n            },\n            insert: function (shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n                return inserted;\n            },\n            _initChildren: function () {\n                var rect = this.rect, children = this.children, shapes = this.shapes, center = rect.center(), halfWidth = rect.width / 2, halfHeight = rect.height / 2, childIdx, shapeIdx;\n                children.push(new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)), new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)), new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight)));\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hitTestRect: function (rect) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect)) {\n                        hit = true;\n                    } else {\n                        for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect)) {\n                                hit = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                return hit;\n            }\n        });\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n            init: function (diagram) {\n                var boundsChangeHandler = proxy(this._boundsChange, this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n            initRoots: function () {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n            clear: function () {\n                this.initRoots();\n            },\n            _boundsChange: function (e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n            insert: function (shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(new Rect(x * rootSize, y * rootSize, rootSize, rootSize));\n                    }\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n            remove: function (shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n            inRoot: function (sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n            getSectors: function (rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [\n                    [],\n                    []\n                ];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n            hitTestRect: function (rect) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n                if (this.root.hitTestRect(rect)) {\n                    return true;\n                }\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        });\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n            return new kendo.data.ObservableObject(model);\n        }\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n        dataviz.ui.plugin(Diagram);\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.diagram', [\n        'kendo.data',\n        'kendo.draganddrop',\n        'kendo.userevents',\n        'kendo.mobile.scroller',\n        'kendo.drawing',\n        'dataviz/diagram/utils',\n        'dataviz/diagram/math',\n        'dataviz/diagram/svg',\n        'dataviz/diagram/services',\n        'dataviz/diagram/layout',\n        'dataviz/diagram/dom'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.diagram',\n        name: 'Diagram',\n        category: 'dataviz',\n        description: 'The Kendo DataViz Diagram ',\n        depends: [\n            'data',\n            'userevents',\n            'mobile.scroller',\n            'draganddrop',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes',\n            'toolbar'\n        ],\n        features: [\n            {\n                id: 'dataviz.diagram-pdf-export',\n                name: 'PDF export',\n                description: 'Export Diagram as PDF',\n                depends: ['pdf']\n            },\n            {\n                id: 'dataviz.diagram-editing',\n                name: 'Editing',\n                description: 'Support for model editing',\n                depends: [\n                    'editable',\n                    'window',\n                    'dropdownlist'\n                ]\n            }\n        ]\n    };\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}