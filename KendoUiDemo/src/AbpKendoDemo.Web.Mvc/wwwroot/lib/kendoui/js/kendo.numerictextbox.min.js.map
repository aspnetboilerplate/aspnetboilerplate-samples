{"version":3,"sources":["kendo.numerictextbox.js"],"names":["f","define","$","undefined","buttonHtml","direction","text","className","truncate","value","precision","parts","parseFloat","split","POINT","substring","join","kendo","window","caret","keys","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","TOUCHEND","MOUSELEAVE","HOVEREVENTS","DEFAULT","FOCUSED","HOVER","FOCUS","SELECTED","STATEDISABLED","ARIA_DISABLED","ARIA_READONLY","INTEGER_REGEXP","NULL","proxy","extend","NumericTextBox","init","element","options","min","max","step","disabled","that","this","isStep","fn","call","on","_focusout","attr","_initialOptions","_parse","_reset","_wrapper","_arrows","_input","mobileOS","_text","browser","edge","one","_toggleText","focus","_click","format","val","is","parents","enable","readonly","notify","name","decimals","restrictDecimals","round","culture","spinners","upArrowText","downArrowText","events","_editable","disable","add","wrapper","_inputWrapper","off","_upArrowEventHandler","unbind","_downArrowEventHandler","addClass","removeClass","_toggleHover","removeAttr","bind","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keypress","_paste","destroy","_form","_resetHandler","_option","adjusted","_value","_adjust","_update","_old","_focusin","arrows","_release","clearTimeout","_spinning","siblings","insertAfter","wrapAll","parent","toggle","eq","UserEvents","release","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","_typing","trigger","_culture","numberFormat","toLowerCase","currency","percent","CLASSNAME","show","accessKey","find","insertBefore","setAttribute","type","_initialTitle","title","tabIndex","style","cssText","prop","role","aria-valuemin","aria-valuemax","key","keyCode","_key","DOWN","_step","UP","ENTER","selection","selectionStart","selectionEnd","character","isNumPadDecimal","isValid","which","metaKey","ctrlKey","BACKSPACE","String","fromCharCode","NUMPAD_DOT","_numericRegex","test","charAt","separator","fractionRule","_separator","_floatRegExp","option","timeout","currentTarget","toggleClass","_round","rounder","isNotNull","_placeholder","toString","DOMElement","hide","wrap","width","css","firstChild","formId","form","closest","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.numerictextbox.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.numerictextbox', [\n        'kendo.core',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'numerictextbox',\n        name: 'NumericTextBox',\n        category: 'web',\n        description: 'The NumericTextBox widget can format and display numeric, percentage or currency textbox.',\n        depends: [\n            'core',\n            'userevents'\n        ]\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, caret = kendo.caret, keys = kendo.keys, ui = kendo.ui, Widget = ui.Widget, activeElement = kendo._activeElement, extractFormat = kendo._extractFormat, parse = kendo.parseFloat, placeholderSupported = kendo.support.placeholder, getCulture = kendo.getCulture, CHANGE = 'change', DISABLED = 'disabled', READONLY = 'readonly', INPUT = 'k-input', SPIN = 'spin', ns = '.kendoNumericTextBox', TOUCHEND = 'touchend', MOUSELEAVE = 'mouseleave' + ns, HOVEREVENTS = 'mouseenter' + ns + ' ' + MOUSELEAVE, DEFAULT = 'k-state-default', FOCUSED = 'k-state-focused', HOVER = 'k-state-hover', FOCUS = 'focus', POINT = '.', SELECTED = 'k-state-selected', STATEDISABLED = 'k-state-disabled', ARIA_DISABLED = 'aria-disabled', ARIA_READONLY = 'aria-readonly', INTEGER_REGEXP = /^(-)?(\\d*)$/, NULL = null, proxy = $.proxy, extend = $.extend;\n        var NumericTextBox = Widget.extend({\n            init: function (element, options) {\n                var that = this, isStep = options && options.step !== undefined, min, max, step, value, disabled;\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                element = that.element.on('focusout' + ns, proxy(that._focusout, that)).attr('role', 'spinbutton');\n                options.placeholder = options.placeholder || element.attr('placeholder');\n                that._initialOptions = extend({}, options);\n                min = that.min(element.attr('min'));\n                max = that.max(element.attr('max'));\n                step = that._parse(element.attr('step'));\n                if (options.min === NULL && min !== NULL) {\n                    options.min = min;\n                }\n                if (options.max === NULL && max !== NULL) {\n                    options.max = max;\n                }\n                if (!isStep && step !== NULL) {\n                    options.step = step;\n                }\n                that._reset();\n                that._wrapper();\n                that._arrows();\n                that._input();\n                if (!kendo.support.mobileOS) {\n                    that._text.on(FOCUS + ns, proxy(that._click, that));\n                } else {\n                    that._text.on(TOUCHEND + ns + ' ' + FOCUS + ns, function () {\n                        if (kendo.support.browser.edge) {\n                            that._text.one(FOCUS + ns, function () {\n                                that._toggleText(false);\n                                element.focus();\n                            });\n                        } else {\n                            that._toggleText(false);\n                            element.focus();\n                        }\n                    });\n                }\n                element.attr('aria-valuemin', options.min).attr('aria-valuemax', options.max);\n                options.format = extractFormat(options.format);\n                value = options.value;\n                that.value(value !== NULL ? value : element.val());\n                disabled = element.is('[disabled]') || $(that.element).parents('fieldset').is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is('[readonly]'));\n                }\n                kendo.notify(that);\n            },\n            options: {\n                name: 'NumericTextBox',\n                decimals: NULL,\n                restrictDecimals: false,\n                min: NULL,\n                max: NULL,\n                value: NULL,\n                step: 1,\n                round: true,\n                culture: '',\n                format: 'n',\n                spinners: true,\n                placeholder: '',\n                upArrowText: 'Increase value',\n                downArrowText: 'Decrease value'\n            },\n            events: [\n                CHANGE,\n                SPIN\n            ],\n            _editable: function (options) {\n                var that = this, element = that.element, disable = options.disable, readonly = options.readonly, text = that._text.add(element), wrapper = that._inputWrapper.off(HOVEREVENTS);\n                that._toggleText(true);\n                that._upArrowEventHandler.unbind('press');\n                that._downArrowEventHandler.unbind('press');\n                element.off('keydown' + ns).off('keypress' + ns).off('paste' + ns);\n                if (!readonly && !disable) {\n                    wrapper.addClass(DEFAULT).removeClass(STATEDISABLED).on(HOVEREVENTS, that._toggleHover);\n                    text.removeAttr(DISABLED).removeAttr(READONLY).attr(ARIA_DISABLED, false).attr(ARIA_READONLY, false);\n                    that._upArrowEventHandler.bind('press', function (e) {\n                        e.preventDefault();\n                        that._spin(1);\n                        that._upArrow.addClass(SELECTED);\n                    });\n                    that._downArrowEventHandler.bind('press', function (e) {\n                        e.preventDefault();\n                        that._spin(-1);\n                        that._downArrow.addClass(SELECTED);\n                    });\n                    that.element.on('keydown' + ns, proxy(that._keydown, that)).on('keypress' + ns, proxy(that._keypress, that)).on('paste' + ns, proxy(that._paste, that));\n                } else {\n                    wrapper.addClass(disable ? STATEDISABLED : DEFAULT).removeClass(disable ? DEFAULT : STATEDISABLED);\n                    text.attr(DISABLED, disable).attr(READONLY, readonly).attr(ARIA_DISABLED, disable).attr(ARIA_READONLY, readonly);\n                }\n            },\n            readonly: function (readonly) {\n                this._editable({\n                    readonly: readonly === undefined ? true : readonly,\n                    disable: false\n                });\n            },\n            enable: function (enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined ? true : enable)\n                });\n            },\n            destroy: function () {\n                var that = this;\n                that.element.add(that._text).add(that._upArrow).add(that._downArrow).add(that._inputWrapper).off(ns);\n                that._upArrowEventHandler.destroy();\n                that._downArrowEventHandler.destroy();\n                if (that._form) {\n                    that._form.off('reset', that._resetHandler);\n                }\n                Widget.fn.destroy.call(that);\n            },\n            min: function (value) {\n                return this._option('min', value);\n            },\n            max: function (value) {\n                return this._option('max', value);\n            },\n            step: function (value) {\n                return this._option('step', value);\n            },\n            value: function (value) {\n                var that = this, adjusted;\n                if (value === undefined) {\n                    return that._value;\n                }\n                value = that._parse(value);\n                adjusted = that._adjust(value);\n                if (value !== adjusted) {\n                    return;\n                }\n                that._update(value);\n                that._old = that._value;\n            },\n            focus: function () {\n                this._focusin();\n            },\n            _adjust: function (value) {\n                var that = this, options = that.options, min = options.min, max = options.max;\n                if (value === NULL) {\n                    return value;\n                }\n                if (min !== NULL && value < min) {\n                    value = min;\n                } else if (max !== NULL && value > max) {\n                    value = max;\n                }\n                return value;\n            },\n            _arrows: function () {\n                var that = this, arrows, _release = function () {\n                        clearTimeout(that._spinning);\n                        arrows.removeClass(SELECTED);\n                    }, options = that.options, spinners = options.spinners, element = that.element;\n                arrows = element.siblings('.k-icon');\n                if (!arrows[0]) {\n                    arrows = $(buttonHtml('increase', options.upArrowText) + buttonHtml('decrease', options.downArrowText)).insertAfter(element);\n                    arrows.wrapAll('<span class=\"k-select\"/>');\n                }\n                if (!spinners) {\n                    arrows.parent().toggle(spinners);\n                    that._inputWrapper.addClass('k-expand-padding');\n                }\n                that._upArrow = arrows.eq(0);\n                that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n                that._downArrow = arrows.eq(1);\n                that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n            },\n            _blur: function () {\n                var that = this;\n                that._toggleText(true);\n                that._change(that.element.val());\n            },\n            _click: function (e) {\n                var that = this;\n                clearTimeout(that._focusing);\n                that._focusing = setTimeout(function () {\n                    var input = e.target, idx = caret(input)[0], value = input.value.substring(0, idx), format = that._format(that.options.format), group = format[','], result, groupRegExp, extractRegExp, caretPosition = 0;\n                    if (group) {\n                        groupRegExp = new RegExp('\\\\' + group, 'g');\n                        extractRegExp = new RegExp('([\\\\d\\\\' + group + ']+)(\\\\' + format[POINT] + ')?(\\\\d+)?');\n                    }\n                    if (extractRegExp) {\n                        result = extractRegExp.exec(value);\n                    }\n                    if (result) {\n                        caretPosition = result[0].replace(groupRegExp, '').length;\n                        if (value.indexOf('(') != -1 && that._value < 0) {\n                            caretPosition++;\n                        }\n                    }\n                    that._focusin();\n                    caret(that.element[0], caretPosition);\n                });\n            },\n            _change: function (value) {\n                var that = this;\n                that._update(value);\n                value = that._value;\n                if (that._old != value) {\n                    that._old = value;\n                    if (!that._typing) {\n                        that.element.trigger(CHANGE);\n                    }\n                    that.trigger(CHANGE);\n                }\n                that._typing = false;\n            },\n            _culture: function (culture) {\n                return culture || getCulture(this.options.culture);\n            },\n            _focusin: function () {\n                var that = this;\n                that._inputWrapper.addClass(FOCUSED);\n                that._toggleText(false);\n                that.element[0].focus();\n            },\n            _focusout: function () {\n                var that = this;\n                clearTimeout(that._focusing);\n                that._inputWrapper.removeClass(FOCUSED).removeClass(HOVER);\n                that._blur();\n            },\n            _format: function (format, culture) {\n                var numberFormat = this._culture(culture).numberFormat;\n                format = format.toLowerCase();\n                if (format.indexOf('c') > -1) {\n                    numberFormat = numberFormat.currency;\n                } else if (format.indexOf('p') > -1) {\n                    numberFormat = numberFormat.percent;\n                }\n                return numberFormat;\n            },\n            _input: function () {\n                var that = this, options = that.options, CLASSNAME = 'k-formatted-value', element = that.element.addClass(INPUT).show()[0], accessKey = element.accessKey, wrapper = that.wrapper, text;\n                text = wrapper.find(POINT + CLASSNAME);\n                if (!text[0]) {\n                    text = $('<input type=\"text\"/>').insertBefore(element).addClass(CLASSNAME);\n                }\n                try {\n                    element.setAttribute('type', 'text');\n                } catch (e) {\n                    element.type = 'text';\n                }\n                that._initialTitle = element.title;\n                text[0].title = element.title;\n                text[0].tabIndex = element.tabIndex;\n                text[0].style.cssText = element.style.cssText;\n                text.prop('placeholder', options.placeholder);\n                if (accessKey) {\n                    text.attr('accesskey', accessKey);\n                    element.accessKey = '';\n                }\n                that._text = text.addClass(element.className).attr({\n                    'role': 'spinbutton',\n                    'aria-valuemin': options.min,\n                    'aria-valuemax': options.max\n                });\n            },\n            _keydown: function (e) {\n                var that = this, key = e.keyCode;\n                that._key = key;\n                if (key == keys.DOWN) {\n                    that._step(-1);\n                } else if (key == keys.UP) {\n                    that._step(1);\n                } else if (key == keys.ENTER) {\n                    that._change(that.element.val());\n                } else {\n                    that._typing = true;\n                }\n            },\n            _keypress: function (e) {\n                if (e.which === 0 || e.metaKey || e.ctrlKey || e.keyCode === keys.BACKSPACE || e.keyCode === keys.ENTER) {\n                    return;\n                }\n                var that = this;\n                var min = that.options.min;\n                var element = that.element;\n                var selection = caret(element);\n                var selectionStart = selection[0];\n                var selectionEnd = selection[1];\n                var character = String.fromCharCode(e.which);\n                var numberFormat = that._format(that.options.format);\n                var isNumPadDecimal = that._key === keys.NUMPAD_DOT;\n                var value = element.val();\n                var isValid;\n                if (isNumPadDecimal) {\n                    character = numberFormat[POINT];\n                }\n                value = value.substring(0, selectionStart) + character + value.substring(selectionEnd);\n                isValid = that._numericRegex(numberFormat).test(value);\n                if (isValid && isNumPadDecimal) {\n                    element.val(value);\n                    caret(element, selectionStart + character.length);\n                    e.preventDefault();\n                } else if (min !== null && min >= 0 && value.charAt(0) === '-' || !isValid) {\n                    e.preventDefault();\n                }\n                that._key = 0;\n            },\n            _numericRegex: function (numberFormat) {\n                var that = this;\n                var separator = numberFormat[POINT];\n                var precision = that.options.decimals;\n                var fractionRule = '*';\n                if (separator === POINT) {\n                    separator = '\\\\' + separator;\n                }\n                if (precision === NULL) {\n                    precision = numberFormat.decimals;\n                }\n                if (precision === 0) {\n                    return INTEGER_REGEXP;\n                }\n                if (that.options.restrictDecimals) {\n                    fractionRule = '{0,' + precision + '}';\n                }\n                if (that._separator !== separator) {\n                    that._separator = separator;\n                    that._floatRegExp = new RegExp('^(-)?(((\\\\d+(' + separator + '\\\\d' + fractionRule + ')?)|(' + separator + '\\\\d' + fractionRule + ')))?$');\n                }\n                return that._floatRegExp;\n            },\n            _paste: function (e) {\n                var that = this;\n                var element = e.target;\n                var value = element.value;\n                var numberFormat = that._format(that.options.format);\n                setTimeout(function () {\n                    var result = that._parse(element.value);\n                    var isValid = that._numericRegex(numberFormat).test(element.value);\n                    if (result === NULL || that._adjust(result) !== result || !isValid) {\n                        that._update(value);\n                    }\n                });\n            },\n            _option: function (option, value) {\n                var that = this, element = that.element, options = that.options;\n                if (value === undefined) {\n                    return options[option];\n                }\n                value = that._parse(value);\n                if (!value && option === 'step') {\n                    return;\n                }\n                options[option] = value;\n                element.add(that._text).attr('aria-value' + option, value);\n                element.attr(option, value);\n            },\n            _spin: function (step, timeout) {\n                var that = this;\n                timeout = timeout || 500;\n                clearTimeout(that._spinning);\n                that._spinning = setTimeout(function () {\n                    that._spin(step, 50);\n                }, timeout);\n                that._step(step);\n            },\n            _step: function (step) {\n                var that = this, element = that.element, value = that._parse(element.val()) || 0;\n                if (activeElement() != element[0]) {\n                    that._focusin();\n                }\n                value += that.options.step * step;\n                that._update(that._adjust(value));\n                that._typing = false;\n                that.trigger(SPIN);\n            },\n            _toggleHover: function (e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === 'mouseenter');\n            },\n            _toggleText: function (toggle) {\n                var that = this;\n                that._text.toggle(toggle);\n                that.element.toggle(!toggle);\n            },\n            _parse: function (value, culture) {\n                return parse(value, this._culture(culture), this.options.format);\n            },\n            _round: function (value, precision) {\n                var rounder = this.options.round ? kendo._round : truncate;\n                return rounder(value, precision);\n            },\n            _update: function (value) {\n                var that = this, options = that.options, format = options.format, decimals = options.decimals, culture = that._culture(), numberFormat = that._format(format, culture), isNotNull;\n                if (decimals === NULL) {\n                    decimals = numberFormat.decimals;\n                }\n                value = that._parse(value, culture);\n                isNotNull = value !== NULL;\n                if (isNotNull) {\n                    value = parseFloat(that._round(value, decimals), 10);\n                }\n                that._value = value = that._adjust(value);\n                that._placeholder(kendo.toString(value, format, culture));\n                if (isNotNull) {\n                    value = value.toString();\n                    if (value.indexOf('e') !== -1) {\n                        value = that._round(+value, decimals);\n                    }\n                    value = value.replace(POINT, numberFormat[POINT]);\n                } else {\n                    value = '';\n                }\n                that.element.val(value);\n                that.element.add(that._text).attr('aria-valuenow', value);\n            },\n            _placeholder: function (value) {\n                var input = this._text;\n                input.val(value);\n                if (!placeholderSupported && !value) {\n                    input.val(this.options.placeholder);\n                }\n                input.attr('title', this._initialTitle || input.val());\n                input.attr('aria-title', this._initialTitle || input.val());\n            },\n            _wrapper: function () {\n                var that = this, element = that.element, DOMElement = element[0], wrapper;\n                wrapper = element.parents('.k-numerictextbox');\n                if (!wrapper.is('span.k-numerictextbox')) {\n                    wrapper = element.hide().wrap('<span class=\"k-numeric-wrap k-state-default\" />').parent();\n                    wrapper = wrapper.wrap('<span/>').parent();\n                }\n                wrapper[0].style.cssText = DOMElement.style.cssText;\n                DOMElement.style.width = '';\n                that.wrapper = wrapper.addClass('k-widget k-numerictextbox').addClass(DOMElement.className).css('display', '');\n                that._inputWrapper = $(wrapper[0].firstChild);\n            },\n            _reset: function () {\n                var that = this, element = that.element, formId = element.attr('form'), form = formId ? $('#' + formId) : element.closest('form');\n                if (form[0]) {\n                    that._resetHandler = function () {\n                        setTimeout(function () {\n                            that.value(element[0].value);\n                            that.max(that._initialOptions.max);\n                            that.min(that._initialOptions.min);\n                        });\n                    };\n                    that._form = form.on('reset', that._resetHandler);\n                }\n            }\n        });\n        function buttonHtml(direction, text) {\n            var className = 'k-i-arrow-' + (direction === 'increase' ? 'n' : 's');\n            return '<span unselectable=\"on\" class=\"k-link k-link-' + direction + '\" aria-label=\"' + text + '\" title=\"' + text + '\">' + '<span unselectable=\"on\" class=\"k-icon ' + className + '\"></span>' + '</span>';\n        }\n        function truncate(value, precision) {\n            var parts = parseFloat(value, 10).toString().split(POINT);\n            if (parts[1]) {\n                parts[1] = parts[1].substring(0, precision);\n            }\n            return parts.join(POINT);\n        }\n        ui.plugin(NumericTextBox);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}